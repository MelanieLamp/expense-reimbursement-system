2021-03-12 17:36:40 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 17:36:40 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 17:36:40 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 17:36:40 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 17:36:41 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 17:36:41 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 17:36:41 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 17:36:41 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 17:36:41 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 17:36:42 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 17:36:42 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 17:36:42 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 17:36:42 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 17:36:42 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 17:36:42 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 17:36:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 17:36:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 17:36:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 17:36:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 17:36:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 17:36:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 17:36:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 17:36:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 17:36:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 17:36:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 17:36:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 17:36:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 17:36:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 17:36:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 17:36:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 17:36:43 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 17:36:43 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementDB]
2021-03-12 17:36:43 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 17:36:43 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 17:36:43 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 17:36:43 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 17:36:45 WARN  JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata
java.lang.IllegalStateException: Cannot get a connection as the driver manager is not properly initialized
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:172)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:116)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:341)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:260)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:238)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:379)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:479)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:85)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at dev.lamp.utilities.HibernateUtil.getSessionFactory(HibernateUtil.java:11)
	at dev.lamp.daotests.EmployeeTests.setup(EmployeeTests.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 17:36:45 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 17:36:45 DEBUG IdentifierHelperBuilder:189 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-03-12 17:36:45 DEBUG LobCreatorBuilderImpl:65 - HHH000422: Disabling contextual LOB creation as connection was null
2021-03-12 17:36:45 DEBUG SqlExceptionHelper:126 - Error calling Driver#connect [null]
org.postgresql.util.PSQLException: FATAL: database "ExpenseReimbursementDB" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2665)
	at org.postgresql.core.v3.QueryExecutorImpl.<init>(QueryExecutorImpl.java:147)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:273)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:51)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:225)
	at org.postgresql.Driver.makeConnection(Driver.java:465)
	at org.postgresql.Driver.connect(Driver.java:264)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:341)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:260)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:238)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:379)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:479)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:85)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at dev.lamp.utilities.HibernateUtil.getSessionFactory(HibernateUtil.java:11)
	at dev.lamp.daotests.EmployeeTests.setup(EmployeeTests.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 17:36:45 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 3D000
2021-03-12 17:36:45 ERROR SqlExceptionHelper:142 - FATAL: database "ExpenseReimbursementDB" does not exist
2021-03-12 17:37:32 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 17:37:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 17:37:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 17:37:33 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 17:37:33 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 17:37:33 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 17:37:33 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 17:37:33 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 17:37:33 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 17:37:33 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 17:37:33 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 17:37:33 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 17:37:33 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 17:37:33 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 17:37:33 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 17:37:33 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77731709
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c4500a2
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@f355cf1
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7c185207
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@213d6e34
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@1fd99f15
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1fd99f15
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@320b9842
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bfb1dc7
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@62ac385e
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62ac385e
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@56759e58
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56759e58
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b0ba388
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b7a244e
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@67d04ac8
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70f0b136
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c3c83e3
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@31c2dee9
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3506fa6d
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4eab0cc3
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d51f79f
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70c2401e
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@99a178a
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@6462cf57
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1eb9d36d
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3471e174
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6f562d29
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@309e94c
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53fb70fb
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@68ba51b1
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36db16ea
2021-03-12 17:37:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ad4caf4
2021-03-12 17:37:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 17:37:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 17:37:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 17:37:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 17:37:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 17:37:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 17:37:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 17:37:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 17:37:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 17:37:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 17:37:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 17:37:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 17:37:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 17:37:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 17:37:34 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 17:37:34 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementDB]
2021-03-12 17:37:34 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 17:37:34 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 17:37:34 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 17:37:34 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 17:37:34 WARN  JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata
java.lang.IllegalStateException: Cannot get a connection as the driver manager is not properly initialized
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:172)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:116)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:341)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:260)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:238)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:379)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:479)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:85)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at dev.lamp.utilities.HibernateUtil.getSessionFactory(HibernateUtil.java:11)
	at dev.lamp.utiltests.HibernateUtilTest.creates_sessionFactory(HibernateUtilTest.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 17:37:34 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 17:37:34 DEBUG IdentifierHelperBuilder:189 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-03-12 17:37:34 DEBUG LobCreatorBuilderImpl:65 - HHH000422: Disabling contextual LOB creation as connection was null
2021-03-12 17:37:34 DEBUG SqlExceptionHelper:126 - Error calling Driver#connect [null]
org.postgresql.util.PSQLException: FATAL: database "ExpenseReimbursementDB" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2665)
	at org.postgresql.core.v3.QueryExecutorImpl.<init>(QueryExecutorImpl.java:147)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:273)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:51)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:225)
	at org.postgresql.Driver.makeConnection(Driver.java:465)
	at org.postgresql.Driver.connect(Driver.java:264)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:341)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:260)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:238)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:379)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:479)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:85)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at dev.lamp.utilities.HibernateUtil.getSessionFactory(HibernateUtil.java:11)
	at dev.lamp.utiltests.HibernateUtilTest.creates_sessionFactory(HibernateUtilTest.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 17:37:34 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 3D000
2021-03-12 17:37:34 ERROR SqlExceptionHelper:142 - FATAL: database "ExpenseReimbursementDB" does not exist
2021-03-12 17:42:08 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 17:42:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 17:42:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 17:42:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 17:42:08 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 17:42:08 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 17:42:08 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 17:42:08 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 17:42:08 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 17:42:08 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 17:42:08 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 17:42:08 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 17:42:09 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 17:42:09 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 17:42:09 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77731709
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c4500a2
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@f355cf1
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7c185207
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@213d6e34
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@1fd99f15
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1fd99f15
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@320b9842
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bfb1dc7
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@62ac385e
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62ac385e
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@56759e58
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56759e58
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b0ba388
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b7a244e
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@67d04ac8
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70f0b136
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c3c83e3
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@31c2dee9
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3506fa6d
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4eab0cc3
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d51f79f
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70c2401e
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@99a178a
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@6462cf57
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1eb9d36d
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3471e174
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6f562d29
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@309e94c
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53fb70fb
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@68ba51b1
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36db16ea
2021-03-12 17:42:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ad4caf4
2021-03-12 17:42:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 17:42:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 17:42:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 17:42:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 17:42:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 17:42:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 17:42:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 17:42:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 17:42:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 17:42:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 17:42:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 17:42:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 17:42:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 17:42:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 17:42:09 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 17:42:09 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementDB]
2021-03-12 17:42:09 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 17:42:09 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 17:42:09 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 17:42:09 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 17:42:10 WARN  JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata
java.lang.IllegalStateException: Cannot get a connection as the driver manager is not properly initialized
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:172)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:116)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:341)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:260)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:238)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:379)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:479)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:85)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at dev.lamp.utilities.HibernateUtil.getSessionFactory(HibernateUtil.java:11)
	at dev.lamp.utiltests.HibernateUtilTest.creates_sessionFactory(HibernateUtilTest.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 17:42:10 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 17:42:10 DEBUG IdentifierHelperBuilder:189 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-03-12 17:42:10 DEBUG LobCreatorBuilderImpl:65 - HHH000422: Disabling contextual LOB creation as connection was null
2021-03-12 17:42:10 DEBUG SqlExceptionHelper:126 - Error calling Driver#connect [null]
org.postgresql.util.PSQLException: FATAL: database "ExpenseReimbursementDB" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2665)
	at org.postgresql.core.v3.QueryExecutorImpl.<init>(QueryExecutorImpl.java:147)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:273)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:51)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:225)
	at org.postgresql.Driver.makeConnection(Driver.java:465)
	at org.postgresql.Driver.connect(Driver.java:264)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:341)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:260)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:238)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:379)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:479)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:85)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at dev.lamp.utilities.HibernateUtil.getSessionFactory(HibernateUtil.java:11)
	at dev.lamp.utiltests.HibernateUtilTest.creates_sessionFactory(HibernateUtilTest.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 17:42:10 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 3D000
2021-03-12 17:42:10 ERROR SqlExceptionHelper:142 - FATAL: database "ExpenseReimbursementDB" does not exist
2021-03-12 17:48:03 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 17:48:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 17:48:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 17:48:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 17:48:03 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 17:48:03 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 17:48:03 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 17:48:03 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 17:48:03 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 17:48:04 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 17:48:04 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 17:48:04 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 17:48:04 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 17:48:04 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 17:48:04 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77731709
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c4500a2
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@f355cf1
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7c185207
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@213d6e34
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@1fd99f15
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1fd99f15
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@320b9842
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bfb1dc7
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@62ac385e
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62ac385e
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@56759e58
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56759e58
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b0ba388
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b7a244e
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@67d04ac8
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70f0b136
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c3c83e3
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@31c2dee9
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3506fa6d
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4eab0cc3
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d51f79f
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70c2401e
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@99a178a
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@6462cf57
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1eb9d36d
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3471e174
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6f562d29
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@309e94c
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53fb70fb
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@68ba51b1
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36db16ea
2021-03-12 17:48:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ad4caf4
2021-03-12 17:48:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 17:48:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 17:48:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 17:48:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 17:48:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 17:48:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 17:48:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 17:48:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 17:48:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 17:48:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 17:48:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 17:48:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 17:48:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 17:48:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 17:48:04 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 17:48:04 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementDB]
2021-03-12 17:48:04 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 17:48:04 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 17:48:04 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 17:48:04 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 17:48:05 WARN  JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata
java.lang.IllegalStateException: Cannot get a connection as the driver manager is not properly initialized
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:172)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:116)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:341)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:260)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:238)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:379)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:479)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:85)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at dev.lamp.utilities.HibernateUtil.getSessionFactory(HibernateUtil.java:11)
	at dev.lamp.utiltests.HibernateUtilTest.creates_sessionFactory(HibernateUtilTest.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 17:48:05 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 17:48:05 DEBUG IdentifierHelperBuilder:189 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-03-12 17:48:05 DEBUG LobCreatorBuilderImpl:65 - HHH000422: Disabling contextual LOB creation as connection was null
2021-03-12 17:48:05 DEBUG SqlExceptionHelper:126 - Error calling Driver#connect [null]
org.postgresql.util.PSQLException: FATAL: database "ExpenseReimbursementDB" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2665)
	at org.postgresql.core.v3.QueryExecutorImpl.<init>(QueryExecutorImpl.java:147)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:273)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:51)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:225)
	at org.postgresql.Driver.makeConnection(Driver.java:465)
	at org.postgresql.Driver.connect(Driver.java:264)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:341)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:260)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:238)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:379)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:479)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:85)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at dev.lamp.utilities.HibernateUtil.getSessionFactory(HibernateUtil.java:11)
	at dev.lamp.utiltests.HibernateUtilTest.creates_sessionFactory(HibernateUtilTest.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 17:48:05 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 3D000
2021-03-12 17:48:05 ERROR SqlExceptionHelper:142 - FATAL: database "ExpenseReimbursementDB" does not exist
2021-03-12 18:02:45 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 18:02:45 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 18:02:45 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 18:02:45 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 18:02:45 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 18:02:46 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 18:02:46 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 18:02:46 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 18:02:46 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 18:02:46 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 18:02:46 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 18:02:46 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 18:02:46 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 18:02:46 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 18:02:46 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77731709
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c4500a2
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@f355cf1
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@1fd99f15
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1fd99f15
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@320b9842
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bfb1dc7
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@62ac385e
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62ac385e
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@56759e58
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56759e58
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b0ba388
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b7a244e
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@67d04ac8
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70f0b136
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c3c83e3
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@31c2dee9
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3506fa6d
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4eab0cc3
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d51f79f
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70c2401e
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@99a178a
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@6462cf57
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1eb9d36d
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3471e174
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6f562d29
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@309e94c
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53fb70fb
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@68ba51b1
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36db16ea
2021-03-12 18:02:46 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ad4caf4
2021-03-12 18:02:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 18:02:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 18:02:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:02:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:02:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 18:02:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 18:02:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 18:02:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:02:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 18:02:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 18:02:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 18:02:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 18:02:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:02:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 18:02:47 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 18:02:47 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementDB]
2021-03-12 18:02:47 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 18:02:47 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 18:02:47 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 18:02:47 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 18:02:47 WARN  JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata
java.lang.IllegalStateException: Cannot get a connection as the driver manager is not properly initialized
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:172)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:116)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:341)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:260)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:238)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:379)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:479)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:85)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at dev.lamp.utilities.HibernateUtil.getSessionFactory(HibernateUtil.java:11)
	at dev.lamp.utiltests.HibernateUtilTest.creates_sessionFactory(HibernateUtilTest.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 18:02:47 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 18:02:47 DEBUG IdentifierHelperBuilder:189 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2021-03-12 18:02:47 DEBUG LobCreatorBuilderImpl:65 - HHH000422: Disabling contextual LOB creation as connection was null
2021-03-12 18:02:47 DEBUG SqlExceptionHelper:126 - Error calling Driver#connect [null]
org.postgresql.util.PSQLException: FATAL: database "ExpenseReimbursementDB" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2665)
	at org.postgresql.core.v3.QueryExecutorImpl.<init>(QueryExecutorImpl.java:147)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:273)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:51)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:225)
	at org.postgresql.Driver.makeConnection(Driver.java:465)
	at org.postgresql.Driver.connect(Driver.java:264)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:341)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:260)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:238)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:379)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:479)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:85)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at dev.lamp.utilities.HibernateUtil.getSessionFactory(HibernateUtil.java:11)
	at dev.lamp.utiltests.HibernateUtilTest.creates_sessionFactory(HibernateUtilTest.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 18:02:47 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 3D000
2021-03-12 18:02:47 ERROR SqlExceptionHelper:142 - FATAL: database "ExpenseReimbursementDB" does not exist
2021-03-12 18:07:12 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 18:07:12 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 18:07:12 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 18:07:12 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 18:07:12 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 18:07:12 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 18:07:12 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 18:07:12 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 18:07:12 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 18:07:13 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 18:07:13 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 18:07:13 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 18:07:13 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 18:07:13 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 18:07:13 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77731709
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c4500a2
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@f355cf1
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@1fd99f15
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1fd99f15
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@320b9842
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bfb1dc7
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@62ac385e
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62ac385e
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@56759e58
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56759e58
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b0ba388
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b7a244e
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@67d04ac8
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70f0b136
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c3c83e3
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@31c2dee9
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3506fa6d
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4eab0cc3
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d51f79f
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70c2401e
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@99a178a
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@6462cf57
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1eb9d36d
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3471e174
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6f562d29
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@309e94c
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53fb70fb
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@68ba51b1
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36db16ea
2021-03-12 18:07:13 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ad4caf4
2021-03-12 18:07:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 18:07:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 18:07:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:07:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:07:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 18:07:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 18:07:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 18:07:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:07:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 18:07:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 18:07:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 18:07:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 18:07:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:07:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 18:07:13 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 18:07:13 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 18:07:13 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 18:07:13 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 18:07:13 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 18:07:13 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 18:07:14 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 18:07:14 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 18:07:14 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 18:07:14 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 18:07:14 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 18:07:14 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 18:07:14 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@45236a0c
2021-03-12 18:07:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@45236a0c
2021-03-12 18:07:14 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:07:14 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@bbbe4e9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70b8b506]
2021-03-12 18:08:17 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 18:08:17 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 18:08:17 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 18:08:17 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 18:08:17 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 18:08:17 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 18:08:17 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 18:08:17 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 18:08:17 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 18:08:17 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 18:08:17 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 18:08:17 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 18:08:17 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 18:08:17 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 18:08:17 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77731709
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c4500a2
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@f355cf1
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@1fd99f15
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1fd99f15
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@320b9842
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bfb1dc7
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@62ac385e
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62ac385e
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@56759e58
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56759e58
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b0ba388
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b7a244e
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@67d04ac8
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70f0b136
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c3c83e3
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@31c2dee9
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3506fa6d
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4eab0cc3
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d51f79f
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70c2401e
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@99a178a
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@6462cf57
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1eb9d36d
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3471e174
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6f562d29
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@309e94c
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53fb70fb
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@68ba51b1
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36db16ea
2021-03-12 18:08:18 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ad4caf4
2021-03-12 18:08:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 18:08:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 18:08:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:08:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:08:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 18:08:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 18:08:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 18:08:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:08:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 18:08:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 18:08:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 18:08:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 18:08:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:08:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 18:08:18 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 18:08:18 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 18:08:18 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 18:08:18 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 18:08:18 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 18:08:18 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 18:08:18 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 18:08:18 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 18:08:18 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 18:08:18 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 18:08:18 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 18:08:19 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 18:08:19 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@45236a0c
2021-03-12 18:08:19 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@45236a0c
2021-03-12 18:08:19 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:08:19 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@bbbe4e9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70b8b506]
2021-03-12 18:08:19 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 18:08:19 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:08:19 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 18:08:19 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 18:08:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:08:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 18:08:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 18:08:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:08:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 18:08:19 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:08:19 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:08:19 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 18:08:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:08:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 18:08:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 18:08:19 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 18:08:19 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 18:08:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:08:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 18:08:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 18:08:19 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 18:08:19 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 18:08:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 18:08:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 18:08:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 18:08:19 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 18:08:19 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 18:08:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=hasLoggedIn, insertable=true, updatable=true, unique=false}
2021-03-12 18:08:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property hasLoggedIn with lazy=false
2021-03-12 18:08:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:hasLoggedIn]
2021-03-12 18:08:19 DEBUG SimpleValueBinder:410 - building SimpleValue for hasLoggedIn
2021-03-12 18:08:19 DEBUG PropertyBinder:266 - Building property hasLoggedIn
2021-03-12 18:08:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 18:08:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 18:08:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 18:08:19 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 18:08:19 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 18:08:19 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 18:08:19 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:08:19 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 18:08:19 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 18:08:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:08:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 18:08:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 18:08:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 18:08:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 18:08:19 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 18:08:19 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 18:08:19 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 18:08:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 18:08:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 18:08:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 18:08:19 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 18:08:19 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 18:08:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 18:08:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 18:08:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 18:08:19 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 18:08:19 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 18:08:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 18:08:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 18:08:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 18:08:19 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 18:08:19 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 18:08:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:08:19 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employee_id'}
2021-03-12 18:08:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:15:22 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 18:15:22 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 18:15:22 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 18:15:22 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 18:15:22 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 18:15:22 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 18:15:22 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 18:15:22 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 18:15:22 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 18:15:23 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 18:15:23 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 18:15:23 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 18:15:23 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 18:15:23 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 18:15:23 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77731709
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c4500a2
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@f355cf1
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@1fd99f15
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1fd99f15
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@320b9842
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bfb1dc7
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@62ac385e
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62ac385e
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@56759e58
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56759e58
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b0ba388
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b7a244e
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@67d04ac8
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70f0b136
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c3c83e3
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@31c2dee9
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3506fa6d
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4eab0cc3
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d51f79f
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70c2401e
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@99a178a
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@6462cf57
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1eb9d36d
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3471e174
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6f562d29
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@309e94c
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53fb70fb
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@68ba51b1
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36db16ea
2021-03-12 18:15:23 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ad4caf4
2021-03-12 18:15:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 18:15:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 18:15:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:15:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:15:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 18:15:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 18:15:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 18:15:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:15:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 18:15:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 18:15:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 18:15:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 18:15:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:15:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 18:15:23 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 18:15:23 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 18:15:23 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 18:15:23 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 18:15:23 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 18:15:23 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 18:15:24 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 18:15:24 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 18:15:24 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 18:15:24 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 18:15:24 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 18:15:24 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 18:15:24 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@45236a0c
2021-03-12 18:15:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@45236a0c
2021-03-12 18:15:24 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:15:24 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@bbbe4e9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70b8b506]
2021-03-12 18:15:24 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 18:15:24 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:15:24 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 18:15:24 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 18:15:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:15:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 18:15:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 18:15:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:15:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 18:15:24 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:15:24 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:15:24 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 18:15:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:15:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 18:15:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 18:15:24 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 18:15:24 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 18:15:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:15:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 18:15:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 18:15:24 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 18:15:24 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 18:15:24 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employee_id'}
2021-03-12 18:15:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 18:15:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:17:03 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 18:17:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 18:17:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 18:17:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 18:17:03 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 18:17:03 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 18:17:04 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 18:17:04 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 18:17:04 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 18:17:04 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 18:17:04 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 18:17:04 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 18:17:04 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 18:17:04 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 18:17:04 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77731709
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c4500a2
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@f355cf1
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@1fd99f15
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1fd99f15
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@320b9842
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bfb1dc7
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@62ac385e
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62ac385e
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@56759e58
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56759e58
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b0ba388
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b7a244e
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@67d04ac8
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70f0b136
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c3c83e3
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@31c2dee9
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3506fa6d
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4eab0cc3
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d51f79f
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70c2401e
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@99a178a
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@6462cf57
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1eb9d36d
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3471e174
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6f562d29
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@309e94c
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53fb70fb
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@68ba51b1
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36db16ea
2021-03-12 18:17:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ad4caf4
2021-03-12 18:17:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 18:17:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 18:17:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:17:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:17:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 18:17:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 18:17:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 18:17:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:17:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 18:17:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 18:17:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 18:17:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 18:17:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:17:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 18:17:04 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 18:17:04 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 18:17:04 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 18:17:04 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 18:17:04 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 18:17:04 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 18:17:05 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 18:17:05 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 18:17:05 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 18:17:05 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 18:17:05 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 18:17:05 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 18:17:05 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@45236a0c
2021-03-12 18:17:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@45236a0c
2021-03-12 18:17:05 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:17:05 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@bbbe4e9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70b8b506]
2021-03-12 18:17:05 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 18:17:05 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:17:05 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 18:17:05 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:17:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 18:17:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 18:17:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:17:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 18:17:06 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:17:06 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:17:06 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:17:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 18:17:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 18:17:06 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 18:17:06 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:17:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 18:17:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 18:17:06 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 18:17:06 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employee_id'}
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employee_id'}
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employee_id'}
2021-03-12 18:17:06 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 18:17:06 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 18:17:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 18:17:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 18:17:06 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 18:17:06 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=hasLoggedIn, insertable=true, updatable=true, unique=false}
2021-03-12 18:17:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property hasLoggedIn with lazy=false
2021-03-12 18:17:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:hasLoggedIn]
2021-03-12 18:17:06 DEBUG SimpleValueBinder:410 - building SimpleValue for hasLoggedIn
2021-03-12 18:17:06 DEBUG PropertyBinder:266 - Building property hasLoggedIn
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 18:17:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 18:17:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 18:17:06 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 18:17:06 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 18:17:06 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:17:06 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 18:17:06 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:17:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 18:17:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 18:17:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 18:17:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 18:17:06 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 18:17:06 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 18:17:06 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 18:17:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 18:17:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 18:17:06 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 18:17:06 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 18:17:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 18:17:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 18:17:06 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 18:17:06 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 18:17:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 18:17:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 18:17:06 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 18:17:06 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employee_id'}
2021-03-12 18:17:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:07 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 18:18:07 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 18:18:07 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 18:18:07 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 18:18:07 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 18:18:07 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 18:18:07 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 18:18:07 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 18:18:07 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 18:18:08 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 18:18:08 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 18:18:08 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 18:18:08 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 18:18:08 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 18:18:08 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77731709
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c4500a2
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@f355cf1
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@1fd99f15
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1fd99f15
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@320b9842
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bfb1dc7
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@62ac385e
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62ac385e
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@56759e58
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56759e58
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b0ba388
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b7a244e
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@67d04ac8
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70f0b136
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c3c83e3
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@31c2dee9
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3506fa6d
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4eab0cc3
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d51f79f
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70c2401e
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@99a178a
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@6462cf57
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1eb9d36d
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3471e174
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6f562d29
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@309e94c
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53fb70fb
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@68ba51b1
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36db16ea
2021-03-12 18:18:08 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ad4caf4
2021-03-12 18:18:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 18:18:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 18:18:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:18:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:18:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 18:18:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 18:18:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 18:18:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:18:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 18:18:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 18:18:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 18:18:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 18:18:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:18:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 18:18:08 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 18:18:08 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 18:18:08 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 18:18:08 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 18:18:08 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 18:18:08 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 18:18:09 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 18:18:09 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 18:18:09 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 18:18:09 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 18:18:09 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 18:18:09 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 18:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@45236a0c
2021-03-12 18:18:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@45236a0c
2021-03-12 18:18:09 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:18:09 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@bbbe4e9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70b8b506]
2021-03-12 18:18:09 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:18:09 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 18:18:09 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 18:18:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:18:09 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employee_id'}
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employee_id'}
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employee_id'}
2021-03-12 18:18:09 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=hasLoggedIn, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property hasLoggedIn with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:hasLoggedIn]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for hasLoggedIn
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property hasLoggedIn
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 18:18:09 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:18:09 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 18:18:09 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 18:18:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 18:18:09 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property status
2021-03-12 18:18:09 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:18:09 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 18:18:09 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 18:18:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 18:18:09 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager_id'}
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager_id'}
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager_id'}
2021-03-12 18:18:09 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=hasLoggedIn, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property hasLoggedIn with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:hasLoggedIn]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for hasLoggedIn
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property hasLoggedIn
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 18:18:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:18:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 18:18:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 18:18:09 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 18:18:09 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for hasLoggedIn
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for hasLoggedIn
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 18:18:09 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 18:18:09 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 18:18:09 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 18:18:09 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 18:18:09 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 18:19:03 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 18:19:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 18:19:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 18:19:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 18:19:03 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 18:19:03 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 18:19:03 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 18:19:03 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 18:19:03 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 18:19:03 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 18:19:03 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 18:19:03 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 18:19:03 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 18:19:03 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 18:19:03 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3839ebb8
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77731709
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c4500a2
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@f355cf1
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48b3f090
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c185207
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3bc8a05e
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ff24e1d
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@213d6e34
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db7a4d3
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71d0f15
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9b45401
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@240fd05b
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@1fd99f15
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1fd99f15
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@320b9842
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bfb1dc7
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@62ac385e
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62ac385e
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 18:19:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6ff9c5b6
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@60b54a5b
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3488f2a8
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@798e274c
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@48aa63b
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3feeea54
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@69d24736
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@334892b3
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@32e2ef56
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@56759e58
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56759e58
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ef35ab9
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b0ba388
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41190256
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b7a244e
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@67d04ac8
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7f8fb2a6
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47ca16d9
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@59ae119e
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@20b9063e
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70f0b136
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@fc26ffa
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e29ecd6
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c3c83e3
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@31c2dee9
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@1a89208b
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@474e1283
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@3506fa6d
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4eab0cc3
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b5f0650
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d51f79f
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d1558a2
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77b377dc
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70c2401e
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@99a178a
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@6462cf57
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ca58d19
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1eb9d36d
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3471e174
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6f562d29
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@309e94c
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53fb70fb
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@68ba51b1
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36db16ea
2021-03-12 18:19:04 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ad4caf4
2021-03-12 18:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 18:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 18:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 18:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 18:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 18:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 18:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 18:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 18:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 18:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:19:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 18:19:04 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 18:19:04 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 18:19:04 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 18:19:04 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 18:19:04 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 18:19:04 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 18:19:04 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 18:19:04 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 18:19:04 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 18:19:04 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 18:19:04 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 18:19:05 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 18:19:05 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@45236a0c
2021-03-12 18:19:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@45236a0c
2021-03-12 18:19:05 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6262b685
2021-03-12 18:19:05 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@bbbe4e9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70b8b506]
2021-03-12 18:19:05 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:19:05 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 18:19:05 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 18:19:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:19:05 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:19:05 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=hasLoggedIn, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property hasLoggedIn with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:hasLoggedIn]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for hasLoggedIn
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property hasLoggedIn
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 18:19:05 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:19:05 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 18:19:05 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 18:19:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 18:19:05 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property status
2021-03-12 18:19:05 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:19:05 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 18:19:05 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 18:19:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 18:19:05 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:19:05 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=hasLoggedIn, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property hasLoggedIn with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:hasLoggedIn]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for hasLoggedIn
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property hasLoggedIn
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 18:19:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 18:19:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 18:19:05 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 18:19:05 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for hasLoggedIn
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for hasLoggedIn
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 18:19:05 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 18:19:05 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 18:19:05 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 18:19:05 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 18:19:05 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 18:19:05 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 18:19:05 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 18:19:05 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 18:19:05 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 18:19:05 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 18:19:05 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 18:19:05 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 18:19:05 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 18:19:05 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 18:19:05 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 18:19:05 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 18:19:05 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 18:19:05 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 18:19:05 DEBUG Settings:72 - Statistics: disabled
2021-03-12 18:19:05 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 18:19:05 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 18:19:05 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 18:19:05 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 18:19:05 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 18:19:05 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 18:19:05 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 18:19:05 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 18:19:05 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 18:19:05 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 18:19:05 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 18:19:05 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 18:19:05 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 18:19:05 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 18:19:05 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 18:19:05 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 18:19:05 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 18:19:05 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 18:19:05 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 18:19:05 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 18:19:05 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 18:19:05 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 18:19:05 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 18:19:05 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 18:19:05 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 18:19:05 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 18:19:05 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 18:19:05 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 18:19:05 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 18:19:05 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 18:19:05 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 18:19:05 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 18:19:05 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 18:19:05 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 18:19:05 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 18:19:05 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=15, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 15', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@41aef5c8, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 18:19:05 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 18:19:05 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 18:19:05 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@bbbe4e9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@67a19065]
2021-03-12 18:19:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 18:19:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 18:19:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 18:19:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 18:19:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 18:19:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 18:19:06 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 18:19:06 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 18:19:06 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 18:19:06 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 18:19:06 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 18:19:06 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 18:19:06 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 18:19:06 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 18:19:06 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 18:19:06 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.hasLoggedIn as haslogge5_0_, employee_.lname as lname6_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, hasLoggedIn, lname, employee_id) values (?, ?, ?, ?, ?, ?)
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, hasLoggedIn=?, lname=? where employee_id=?
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, hasLoggedIn, lname) values (?, ?, ?, ?, ?)
2021-03-12 18:19:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bd3e5f9]
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 18:19:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f59041d]
2021-03-12 18:19:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c0b3712]
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : hasLoggedIn
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 18:19:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:19:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:19:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 18:19:06 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.hasLoggedIn as haslogge5_0_0_, employee0_.lname as lname6_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.hasLoggedIn as haslogge3_2_, manager_.lname as lname4_2_, manager_.manager_password as manager_5_2_, manager_.manager_username as manager_6_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, hasLoggedIn, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?, ?)
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, hasLoggedIn=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, hasLoggedIn, lname, manager_password, manager_username) values (?, ?, ?, ?, ?)
2021-03-12 18:19:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d20cd8f]
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 18:19:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3baf2e80]
2021-03-12 18:19:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e8efc0b]
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : hasLoggedIn
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 18:19:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:19:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:19:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 18:19:06 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.hasLoggedIn as haslogge3_2_0_, manager0_.lname as lname4_2_0_, manager0_.manager_password as manager_5_2_0_, manager0_.manager_username as manager_6_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 18:19:06 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 18:19:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25291ce0]
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:19:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:19:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:19:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 18:19:06 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 18:19:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@195ccf73]
2021-03-12 18:19:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@758c0e9b]
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:19:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:19:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:19:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 18:19:06 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 18:19:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4984ec28]
2021-03-12 18:19:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a51e9f0]
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:19:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:19:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:19:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:19:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 18:19:06 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 18:19:06 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 18:19:06 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 18:19:06 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 18:19:06 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 18:19:06 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 18:19:06 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 18:19:06 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 18:19:06 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@583d32df
2021-03-12 18:19:06 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: ee798fbd-d40a-4523-909c-d6899dd4058b (<unnamed>)
2021-03-12 18:19:06 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 18:19:46 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 18:19:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 18:19:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 18:19:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 18:19:46 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 18:19:46 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 18:19:46 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 18:19:46 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 18:19:46 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 18:19:47 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 18:19:47 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 18:19:47 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 18:19:47 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 18:19:47 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 18:19:47 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 18:19:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 18:19:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 18:19:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 18:19:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:19:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:19:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 18:19:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 18:19:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 18:19:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:19:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 18:19:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 18:19:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 18:19:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 18:19:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:19:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 18:19:48 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 18:19:48 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 18:19:48 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 18:19:48 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 18:19:48 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 18:19:48 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 18:19:48 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 18:19:48 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 18:19:48 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 18:19:48 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 18:19:48 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 18:19:49 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 18:19:49 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 18:19:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 18:19:49 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 18:19:49 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 18:19:49 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:19:49 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 18:19:49 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 18:19:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:19:49 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:19:49 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=hasLoggedIn, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property hasLoggedIn with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:hasLoggedIn]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for hasLoggedIn
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property hasLoggedIn
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 18:19:49 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:19:49 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 18:19:49 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 18:19:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 18:19:49 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property status
2021-03-12 18:19:49 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:19:49 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 18:19:49 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 18:19:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 18:19:49 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:19:49 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=hasLoggedIn, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property hasLoggedIn with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:hasLoggedIn]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for hasLoggedIn
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property hasLoggedIn
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 18:19:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:19:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 18:19:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 18:19:49 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 18:19:49 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for hasLoggedIn
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for hasLoggedIn
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 18:19:49 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 18:19:49 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 18:19:49 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 18:19:49 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 18:19:49 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 18:19:49 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 18:19:49 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 18:19:49 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 18:19:49 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 18:19:49 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 18:19:49 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 18:19:49 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 18:19:49 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 18:19:49 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 18:19:49 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 18:19:49 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 18:19:49 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 18:19:49 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 18:19:49 DEBUG Settings:72 - Statistics: disabled
2021-03-12 18:19:49 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 18:19:49 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 18:19:49 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 18:19:49 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 18:19:49 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 18:19:49 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 18:19:49 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 18:19:49 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 18:19:49 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 18:19:49 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 18:19:49 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 18:19:49 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 18:19:49 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 18:19:49 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 18:19:49 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 18:19:49 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 18:19:49 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 18:19:49 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 18:19:49 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 18:19:49 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 18:19:49 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 18:19:49 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 18:19:49 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 18:19:49 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 18:19:49 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 18:19:49 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 18:19:49 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 18:19:49 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 18:19:49 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 18:19:49 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 18:19:49 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 18:19:49 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 18:19:49 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 18:19:49 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 18:19:49 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 18:19:49 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=16, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 16', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1de8a3ae, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 18:19:49 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 18:19:49 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 18:19:49 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@738330d2]
2021-03-12 18:19:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 18:19:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 18:19:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 18:19:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 18:19:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 18:19:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 18:19:50 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 18:19:50 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 18:19:50 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 18:19:50 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 18:19:50 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 18:19:50 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 18:19:50 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 18:19:50 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 18:19:50 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 18:19:50 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.hasLoggedIn as haslogge5_0_, employee_.lname as lname6_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, hasLoggedIn, lname, employee_id) values (?, ?, ?, ?, ?, ?)
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, hasLoggedIn=?, lname=? where employee_id=?
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, hasLoggedIn, lname) values (?, ?, ?, ?, ?)
2021-03-12 18:19:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a22012]
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 18:19:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50c2c960]
2021-03-12 18:19:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7873a5c5]
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : hasLoggedIn
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 18:19:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:19:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:19:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 18:19:50 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.hasLoggedIn as haslogge5_0_0_, employee0_.lname as lname6_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.hasLoggedIn as haslogge3_2_, manager_.lname as lname4_2_, manager_.manager_password as manager_5_2_, manager_.manager_username as manager_6_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, hasLoggedIn, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?, ?)
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, hasLoggedIn=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, hasLoggedIn, lname, manager_password, manager_username) values (?, ?, ?, ?, ?)
2021-03-12 18:19:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38a57d60]
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 18:19:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@739d421e]
2021-03-12 18:19:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8104a90]
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : hasLoggedIn
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 18:19:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:19:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:19:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 18:19:50 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.hasLoggedIn as haslogge3_2_0_, manager0_.lname as lname4_2_0_, manager0_.manager_password as manager_5_2_0_, manager0_.manager_username as manager_6_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 18:19:50 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 18:19:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b4d688f]
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:19:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:19:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:19:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 18:19:50 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 18:19:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@234f4ed2]
2021-03-12 18:19:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c41e8d9]
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:19:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:19:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:19:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 18:19:50 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 18:19:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a41df93]
2021-03-12 18:19:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b0ac294]
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:19:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:19:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:19:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:19:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 18:19:50 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 18:19:50 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 18:19:50 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 18:19:50 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 18:19:50 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 18:19:50 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 18:19:50 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 18:19:50 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 18:19:50 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2f02b4e0
2021-03-12 18:19:50 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 431e4774-55b6-4fac-94f3-aced84cf2ac8 (<unnamed>)
2021-03-12 18:19:50 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 18:19:50 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 18:19:50 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 18:19:50 DEBUG TransactionImpl:81 - begin
2021-03-12 18:19:50 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 18:19:50 DEBUG SQL:144 - insert into employee (employee_password, employee_username, fname, hasLoggedIn, lname) values (?, ?, ?, ?, ?)
2021-03-12 18:19:50 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: column "hasloggedin" of relation "employee" does not exist
  Position: 68
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3200)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3806)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:194)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:179)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:636)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:629)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:624)
	at dev.lamp.daotests.EmployeeTests.setup(EmployeeTests.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 18:19:50 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42703
2021-03-12 18:19:50 ERROR SqlExceptionHelper:142 - ERROR: column "hasloggedin" of relation "employee" does not exist
  Position: 68
2021-03-12 18:27:59 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 18:27:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 18:27:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 18:27:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 18:27:59 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 18:27:59 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 18:27:59 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 18:27:59 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 18:27:59 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 18:27:59 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 18:27:59 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 18:27:59 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 18:27:59 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 18:27:59 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 18:27:59 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 18:27:59 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 18:28:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 18:28:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 18:28:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 18:28:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:28:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:28:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 18:28:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 18:28:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 18:28:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:28:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 18:28:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 18:28:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 18:28:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 18:28:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:28:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 18:28:00 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 18:28:00 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 18:28:00 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 18:28:00 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 18:28:00 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 18:28:00 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 18:28:00 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 18:28:00 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 18:28:00 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 18:28:00 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 18:28:00 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 18:28:01 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 18:28:01 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 18:28:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 18:28:01 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 18:28:01 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 18:28:01 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:28:01 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 18:28:01 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 18:28:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:28:01 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:28:01 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 18:28:01 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:28:01 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 18:28:01 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 18:28:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 18:28:01 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property status
2021-03-12 18:28:01 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:28:01 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 18:28:01 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 18:28:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 18:28:01 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:28:01 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 18:28:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:28:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 18:28:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 18:28:01 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 18:28:01 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 18:28:01 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 18:28:01 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 18:28:01 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 18:28:01 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 18:28:01 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 18:28:01 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 18:28:01 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 18:28:01 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 18:28:01 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 18:28:01 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 18:28:01 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 18:28:01 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 18:28:01 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 18:28:01 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 18:28:01 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 18:28:01 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 18:28:01 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 18:28:01 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 18:28:01 DEBUG Settings:72 - Statistics: disabled
2021-03-12 18:28:01 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 18:28:01 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 18:28:01 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 18:28:01 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 18:28:01 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 18:28:01 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 18:28:01 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 18:28:01 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 18:28:01 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 18:28:01 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 18:28:01 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 18:28:01 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 18:28:01 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 18:28:01 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 18:28:01 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 18:28:01 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 18:28:01 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 18:28:01 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 18:28:01 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 18:28:01 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 18:28:01 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 18:28:01 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 18:28:01 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 18:28:01 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 18:28:01 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 18:28:01 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 18:28:01 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 18:28:01 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 18:28:01 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 18:28:01 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 18:28:01 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 18:28:01 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 18:28:01 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 18:28:01 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 18:28:01 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 18:28:01 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=17, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 17', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51e11384, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 18:28:01 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 18:28:01 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 18:28:01 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22aa4376]
2021-03-12 18:28:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 18:28:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 18:28:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 18:28:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 18:28:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 18:28:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 18:28:01 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 18:28:01 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 18:28:01 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 18:28:01 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 18:28:01 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 18:28:01 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 18:28:01 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 18:28:01 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 18:28:01 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 18:28:01 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 18:28:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a66ab]
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 18:28:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16793313]
2021-03-12 18:28:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e501cb4]
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 18:28:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:28:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:28:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 18:28:01 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 18:28:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb6148]
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 18:28:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c64bdd8]
2021-03-12 18:28:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1beac4]
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 18:28:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:28:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:28:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 18:28:01 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 18:28:01 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 18:28:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b61dce]
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:28:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:28:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:28:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 18:28:01 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 18:28:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208dd958]
2021-03-12 18:28:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d46e32d]
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:28:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:28:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:28:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 18:28:01 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 18:28:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2a6e2a]
2021-03-12 18:28:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcb4152]
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:28:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:28:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:28:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:28:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 18:28:01 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 18:28:02 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 18:28:02 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 18:28:02 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 18:28:02 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 18:28:02 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 18:28:02 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 18:28:02 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 18:28:02 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef1123d
2021-03-12 18:28:02 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 0a8e391e-66e2-40dc-8b53-4f661eba86ca (<unnamed>)
2021-03-12 18:28:02 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 18:28:02 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 18:28:02 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 18:28:02 DEBUG TransactionImpl:81 - begin
2021-03-12 18:28:02 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 18:28:02 DEBUG SQL:144 - insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 18:28:02 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: permission denied for table employee
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3200)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3806)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:194)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:179)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:636)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:629)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:624)
	at dev.lamp.daotests.EmployeeTests.setup(EmployeeTests.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 18:28:02 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42501
2021-03-12 18:28:02 ERROR SqlExceptionHelper:142 - ERROR: permission denied for table employee
2021-03-12 18:53:19 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 18:53:19 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 18:53:19 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 18:53:19 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 18:53:19 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 18:53:19 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 18:53:19 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 18:53:19 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 18:53:19 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 18:53:20 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 18:53:20 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 18:53:20 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 18:53:20 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 18:53:20 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 18:53:20 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 18:53:20 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 18:53:20 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 18:53:20 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 18:53:20 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:53:20 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:53:20 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 18:53:20 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 18:53:20 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 18:53:20 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:53:20 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 18:53:20 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 18:53:20 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 18:53:20 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 18:53:20 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:53:20 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 18:53:20 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 18:53:20 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 18:53:20 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 18:53:20 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 18:53:20 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 18:53:20 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 18:53:21 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 18:53:21 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 18:53:21 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 18:53:21 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 18:53:21 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 18:53:21 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 18:53:21 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 18:53:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 18:53:21 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 18:53:21 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 18:53:21 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:53:21 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 18:53:21 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 18:53:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:53:21 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:53:21 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 18:53:21 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:53:21 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 18:53:21 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 18:53:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 18:53:21 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property status
2021-03-12 18:53:21 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:53:21 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 18:53:21 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 18:53:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 18:53:21 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:53:21 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 18:53:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:53:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 18:53:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 18:53:21 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 18:53:21 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 18:53:21 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 18:53:21 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 18:53:21 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 18:53:21 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 18:53:21 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 18:53:21 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 18:53:21 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 18:53:21 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 18:53:21 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 18:53:21 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 18:53:21 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 18:53:21 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 18:53:21 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 18:53:21 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 18:53:22 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 18:53:22 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 18:53:22 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 18:53:22 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 18:53:22 DEBUG Settings:72 - Statistics: disabled
2021-03-12 18:53:22 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 18:53:22 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 18:53:22 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 18:53:22 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 18:53:22 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 18:53:22 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 18:53:22 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 18:53:22 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 18:53:22 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 18:53:22 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 18:53:22 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 18:53:22 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 18:53:22 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 18:53:22 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 18:53:22 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 18:53:22 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 18:53:22 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 18:53:22 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 18:53:22 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 18:53:22 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 18:53:22 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 18:53:22 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 18:53:22 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 18:53:22 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 18:53:22 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 18:53:22 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 18:53:22 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 18:53:22 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 18:53:22 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 18:53:22 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 18:53:22 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 18:53:22 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 18:53:22 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 18:53:22 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 18:53:22 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 18:53:22 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=19, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 19', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51e11384, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 18:53:22 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 18:53:22 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 18:53:22 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22aa4376]
2021-03-12 18:53:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 18:53:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 18:53:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 18:53:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 18:53:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 18:53:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 18:53:22 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 18:53:22 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 18:53:22 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 18:53:22 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 18:53:22 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 18:53:22 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 18:53:22 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 18:53:22 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 18:53:22 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 18:53:22 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 18:53:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a66ab]
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 18:53:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16793313]
2021-03-12 18:53:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e501cb4]
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 18:53:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:53:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:53:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 18:53:22 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 18:53:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb6148]
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 18:53:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c64bdd8]
2021-03-12 18:53:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1beac4]
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 18:53:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:53:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:53:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 18:53:22 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 18:53:22 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 18:53:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b61dce]
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:53:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:53:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:53:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 18:53:22 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 18:53:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208dd958]
2021-03-12 18:53:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d46e32d]
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:53:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:53:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:53:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 18:53:22 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 18:53:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2a6e2a]
2021-03-12 18:53:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcb4152]
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:53:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:53:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:53:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:53:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 18:53:22 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 18:53:22 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 18:53:22 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 18:53:22 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 18:53:22 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 18:53:22 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 18:53:22 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 18:53:22 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 18:53:22 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef1123d
2021-03-12 18:53:22 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 2eea7616-efe6-4a4c-b2b1-684499c6624a (<unnamed>)
2021-03-12 18:53:22 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 18:53:22 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 18:53:23 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0
2021-03-12 18:53:23 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a8c126d
2021-03-12 18:53:23 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 18:53:23 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 18:53:23 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Employee'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 18:53:23 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 18:53:23 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 18:53:23 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 18:53:23 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 18:53:23 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) )
2021-03-12 18:53:23 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 18:53:23 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 18:53:23 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 18:53:23 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}

2021-03-12 18:53:23 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 18:53:23 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 18:53:23 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 18:53:23 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 18:53:23 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 18:53:23 DEBUG SqlExceptionHelper:126 - could not extract ResultSet [n/a]
org.postgresql.util.PSQLException: ERROR: permission denied for table employee
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:114)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2303)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2056)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2018)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2849)
	at org.hibernate.loader.Loader.doList(Loader.java:2831)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2663)
	at org.hibernate.loader.Loader.list(Loader.java:2658)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1625)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:76)
	at dev.lamp.dao.EmployeeDAOHibernate.getAllEmployees(EmployeeDAOHibernate.java:72)
	at dev.lamp.daotests.EmployeeTests.get_all_employees(EmployeeTests.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 18:53:23 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42501
2021-03-12 18:53:23 ERROR SqlExceptionHelper:142 - ERROR: permission denied for table employee
2021-03-12 18:53:23 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 18:53:23 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 18:54:13 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 18:54:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 18:54:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 18:54:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 18:54:13 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 18:54:13 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 18:54:13 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 18:54:13 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 18:54:13 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 18:54:14 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 18:54:14 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 18:54:14 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 18:54:14 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 18:54:14 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 18:54:14 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 18:54:14 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 18:54:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 18:54:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 18:54:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:54:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:54:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 18:54:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 18:54:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 18:54:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:54:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 18:54:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 18:54:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 18:54:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 18:54:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:54:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 18:54:14 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 18:54:14 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 18:54:14 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 18:54:14 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 18:54:14 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 18:54:14 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 18:54:15 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 18:54:15 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 18:54:15 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 18:54:15 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 18:54:15 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 18:54:15 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 18:54:15 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 18:54:15 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 18:54:15 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 18:54:15 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 18:54:15 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:54:15 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 18:54:15 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 18:54:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:54:15 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:54:15 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 18:54:15 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:54:15 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 18:54:15 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 18:54:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 18:54:15 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property status
2021-03-12 18:54:15 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:54:15 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 18:54:15 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 18:54:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 18:54:15 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:54:15 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 18:54:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:54:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 18:54:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 18:54:15 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 18:54:15 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 18:54:15 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 18:54:15 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 18:54:15 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 18:54:15 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 18:54:15 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 18:54:15 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 18:54:15 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 18:54:15 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 18:54:15 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 18:54:15 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 18:54:15 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 18:54:15 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 18:54:15 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 18:54:15 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 18:54:15 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 18:54:15 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 18:54:15 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 18:54:15 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 18:54:15 DEBUG Settings:72 - Statistics: disabled
2021-03-12 18:54:15 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 18:54:15 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 18:54:15 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 18:54:15 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 18:54:15 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 18:54:15 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 18:54:15 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 18:54:15 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 18:54:15 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 18:54:15 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 18:54:15 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 18:54:15 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 18:54:15 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 18:54:15 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 18:54:15 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 18:54:15 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 18:54:15 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 18:54:15 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 18:54:15 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 18:54:15 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 18:54:15 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 18:54:15 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 18:54:15 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 18:54:15 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 18:54:15 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 18:54:15 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 18:54:15 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 18:54:15 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 18:54:15 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 18:54:15 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 18:54:15 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 18:54:15 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 18:54:15 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 18:54:15 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 18:54:16 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 18:54:16 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=20, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 20', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51e11384, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 18:54:16 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 18:54:16 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 18:54:16 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22aa4376]
2021-03-12 18:54:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 18:54:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 18:54:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 18:54:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 18:54:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 18:54:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 18:54:16 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 18:54:16 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 18:54:16 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 18:54:16 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 18:54:16 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 18:54:16 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 18:54:16 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 18:54:16 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 18:54:16 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 18:54:16 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 18:54:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a66ab]
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 18:54:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16793313]
2021-03-12 18:54:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e501cb4]
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 18:54:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:54:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:54:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 18:54:16 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 18:54:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb6148]
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 18:54:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c64bdd8]
2021-03-12 18:54:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1beac4]
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 18:54:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:54:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:54:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 18:54:16 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 18:54:16 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 18:54:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b61dce]
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:54:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:54:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:54:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 18:54:16 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 18:54:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208dd958]
2021-03-12 18:54:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d46e32d]
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:54:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:54:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:54:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 18:54:16 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 18:54:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2a6e2a]
2021-03-12 18:54:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcb4152]
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:54:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:54:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:54:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:54:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 18:54:16 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 18:54:16 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 18:54:16 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 18:54:16 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 18:54:16 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 18:54:16 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 18:54:16 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 18:54:16 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 18:54:16 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef1123d
2021-03-12 18:54:16 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 304a6445-920d-40db-852a-34c3e3ef9c9e (<unnamed>)
2021-03-12 18:54:16 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 18:54:16 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 18:54:16 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0
2021-03-12 18:54:17 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@152496a5
2021-03-12 18:54:17 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 18:54:17 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 18:54:17 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Employee'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 18:54:17 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 18:54:17 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 18:54:17 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 18:54:17 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 18:54:17 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) )
2021-03-12 18:54:17 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 18:54:17 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 18:54:17 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 18:54:17 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}

2021-03-12 18:54:17 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 18:54:17 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 18:54:17 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 18:54:17 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 18:54:17 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 18:54:17 DEBUG SqlExceptionHelper:126 - could not extract ResultSet [n/a]
org.postgresql.util.PSQLException: ERROR: permission denied for table employee
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:114)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2303)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2056)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2018)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2849)
	at org.hibernate.loader.Loader.doList(Loader.java:2831)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2663)
	at org.hibernate.loader.Loader.list(Loader.java:2658)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1625)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:76)
	at dev.lamp.dao.EmployeeDAOHibernate.getAllEmployees(EmployeeDAOHibernate.java:72)
	at dev.lamp.daotests.EmployeeTests.get_all_employees(EmployeeTests.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 18:54:17 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42501
2021-03-12 18:54:17 ERROR SqlExceptionHelper:142 - ERROR: permission denied for table employee
2021-03-12 18:54:17 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 18:54:17 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 18:57:39 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 18:57:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 18:57:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 18:57:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 18:57:39 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 18:57:39 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 18:57:39 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 18:57:39 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 18:57:39 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 18:57:39 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 18:57:39 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 18:57:39 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 18:57:39 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 18:57:39 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 18:57:39 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2315f3f3
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2315f3f3
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2315f3f3
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4b043c39
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@789ea9f8
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@53f55b06
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@31115b69
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@31115b69
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@31115b69
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@44140f6a
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@44140f6a
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@44140f6a
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@67ceebaf
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@67ceebaf
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67ceebaf
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@7f15b503
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@7f15b503
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f15b503
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@22c27365
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@22c27365
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@22c27365
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@55ee3fe0
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@55ee3fe0
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@55ee3fe0
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@2b0fc987
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@2b0fc987
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2b0fc987
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2c47e08
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2c47e08
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2c2c9f74
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2c2c9f74
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@1b759540
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1b759540
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65aadbfb
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3aecfe4a
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@fd5a2aa
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@fd5a2aa
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@2447068a
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2447068a
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@783b43cc
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@783b43cc
2021-03-12 18:57:39 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@736495ce
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@736495ce
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@752c5653
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@752c5653
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@55c5a8c4
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@55c5a8c4
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e900ae4
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e900ae4
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4a953c91
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4a953c91
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5c08adfd
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5c08adfd
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@8c1415
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@8c1415
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@3dcd1aee
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3dcd1aee
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@28cf2030
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@28cf2030
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@28cf2030
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@f56dfb9
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@6ba91e0f
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6ba91e0f
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6ba91e0f
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3b0354df
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@726eb1b4
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@6d092f34
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d092f34
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@56b745e5
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@56b745e5
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b97f5e3
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b97f5e3
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@3d069a73
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3d069a73
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f7cf01d
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f7cf01d
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6207f671
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@36cdbc51
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@36cdbc51
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@36cdbc51
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@65a18ab0
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@65a18ab0
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@65a18ab0
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@309d3627
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@fb06340
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@78e7b3cc
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@78e7b3cc
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@78e7b3cc
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@52665561
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@52665561
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@52665561
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@23733118
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@600c9366
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@6a581ad0
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6a581ad0
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f76cd04
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@2fa17eac
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2fa17eac
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@71a41228
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@71a41228
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3f96074e
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2e3e689e
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7b12a35d
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@1c3b589c
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1c3b589c
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3caca0b2
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@78531795
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@31ac0abb
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@642a9702
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3d5a1205
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5dd54584
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@cfd6557
2021-03-12 18:57:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3cdf614d
2021-03-12 18:57:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 18:57:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 18:57:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:57:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 18:57:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 18:57:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 18:57:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 18:57:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:57:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 18:57:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 18:57:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 18:57:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 18:57:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 18:57:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 18:57:40 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 18:57:40 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 18:57:40 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 18:57:40 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 18:57:40 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 18:57:40 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 18:57:40 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 18:57:40 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 18:57:40 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 18:57:40 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 18:57:40 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 18:57:41 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 18:57:41 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@65124b77
2021-03-12 18:57:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@65124b77
2021-03-12 18:57:41 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1f7cf01d
2021-03-12 18:57:41 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d503821] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@634b7f76]
2021-03-12 18:57:41 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:57:41 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 18:57:41 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 18:57:41 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:57:41 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 18:57:41 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 18:57:41 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:57:41 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 18:57:41 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 18:57:41 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 18:57:41 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property status
2021-03-12 18:57:41 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 18:57:41 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 18:57:41 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 18:57:41 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 18:57:41 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 18:57:41 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 18:57:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 18:57:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 18:57:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 18:57:41 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 18:57:41 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 18:57:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 18:57:41 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 18:57:41 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 18:57:41 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 18:57:41 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 18:57:41 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 18:57:41 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 18:57:41 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 18:57:41 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 18:57:41 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 18:57:41 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 18:57:41 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 18:57:41 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 18:57:41 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 18:57:41 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 18:57:41 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 18:57:41 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 18:57:41 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 18:57:41 DEBUG Settings:72 - Statistics: disabled
2021-03-12 18:57:41 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 18:57:41 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 18:57:41 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 18:57:41 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 18:57:41 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 18:57:41 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 18:57:41 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 18:57:41 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 18:57:41 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 18:57:41 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 18:57:41 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 18:57:41 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 18:57:41 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 18:57:41 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 18:57:41 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 18:57:41 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 18:57:41 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 18:57:41 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 18:57:41 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 18:57:41 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 18:57:41 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 18:57:41 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 18:57:41 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 18:57:41 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 18:57:41 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 18:57:41 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 18:57:41 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 18:57:41 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 18:57:41 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 18:57:41 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 18:57:41 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 18:57:41 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 18:57:41 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 18:57:41 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 18:57:41 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 18:57:41 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=21, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 21', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3c5d94a6, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 18:57:41 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 18:57:41 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 18:57:41 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d503821] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@665d9659]
2021-03-12 18:57:41 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 18:57:41 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 18:57:41 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 18:57:41 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 18:57:41 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 18:57:41 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 18:57:42 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 18:57:42 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 18:57:42 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 18:57:42 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 18:57:42 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 18:57:42 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 18:57:42 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 18:57:42 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 18:57:42 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 18:57:42 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 18:57:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6673cb8a]
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 18:57:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2510be35]
2021-03-12 18:57:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c28c0db]
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 18:57:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:57:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:57:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 18:57:42 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 18:57:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33df6cd6]
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 18:57:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4fcafafe]
2021-03-12 18:57:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a27ed8d]
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 18:57:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:57:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:57:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 18:57:42 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 18:57:42 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 18:57:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62569dc3]
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:57:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:57:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:57:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 18:57:42 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 18:57:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3df4652a]
2021-03-12 18:57:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@474843d7]
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:57:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:57:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:57:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 18:57:42 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 18:57:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62f2e81d]
2021-03-12 18:57:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2078e4dd]
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 18:57:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 18:57:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 18:57:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 18:57:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 18:57:42 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 18:57:42 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 18:57:42 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 18:57:42 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 18:57:42 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 18:57:42 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 18:57:42 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 18:57:42 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 18:57:42 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@73d3a3f3
2021-03-12 18:57:42 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: d773a389-fcfc-4fad-9a69-386024d4a761 (<unnamed>)
2021-03-12 18:57:42 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 18:57:42 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:01:38 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:01:38 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:01:38 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:01:38 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:01:38 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:01:38 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:01:38 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:01:38 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:01:38 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:01:38 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:01:38 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:01:38 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:01:38 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:01:38 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:01:39 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73c2a5b7
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c185207
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6957972a
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@177ffeee
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@177ffeee
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2dc34d24
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2dc34d24
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@3a58c3f3
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3a58c3f3
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13c2d4e1
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2da1661
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@31c8b845
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@31c8b845
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@baf99a9
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@baf99a9
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6c3ba414
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6c3ba414
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4eaa03b9
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4eaa03b9
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7dc90914
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7dc90914
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@23969645
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@23969645
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7596b948
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7596b948
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5952c8bd
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5952c8bd
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56759e58
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56759e58
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6f691a4e
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6f691a4e
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@20eaeadc
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@20eaeadc
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31156d13
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@535b83ee
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3b8335c4
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@2b1f6f0d
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b1f6f0d
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@4190d4a8
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4190d4a8
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6096bc6d
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6096bc6d
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@fc26ffa
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fc26ffa
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50d66e7f
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2310a6ae
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@13850fb5
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@4c2ebcfc
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@1bf7079d
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@3290a021
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3290a021
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@636ebe23
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@69703809
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69703809
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@17f0d5b2
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@17f0d5b2
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@26e7becd
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@44adc839
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@62f1f6ff
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@c3f36b6
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c3f36b6
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c154f
2021-03-12 19:01:39 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e3b77be
2021-03-12 19:01:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:01:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:01:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:01:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:01:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:01:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:01:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:01:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:01:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:01:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:01:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:01:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:01:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:01:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:01:39 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:01:39 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:01:39 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 19:01:39 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:01:39 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:01:39 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:01:39 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:01:39 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:01:39 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:01:39 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:01:39 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:01:40 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:01:40 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3ceea9ee
2021-03-12 19:01:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3ceea9ee
2021-03-12 19:01:40 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:01:40 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e27600f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3ac17e09]
2021-03-12 19:01:40 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:01:40 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:01:40 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:01:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:01:40 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:01:40 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:01:40 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:01:40 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:01:40 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:01:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:01:40 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:01:40 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:01:40 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:01:40 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:01:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:01:40 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:01:40 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:01:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:01:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:01:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:01:40 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:01:40 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:01:40 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:01:40 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:01:40 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:01:40 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:01:40 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:01:40 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:01:40 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:01:40 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:01:40 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:01:40 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:01:40 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:01:40 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:01:40 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:01:40 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:01:40 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:01:40 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:01:40 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:01:40 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:01:40 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:01:40 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:01:40 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:01:40 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:01:40 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:01:40 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:01:40 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:01:40 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:01:40 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:01:40 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:01:40 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:01:40 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:01:40 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:01:40 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:01:40 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:01:40 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:01:40 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:01:40 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:01:40 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:01:40 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:01:40 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:01:40 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:01:40 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:01:40 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:01:40 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:01:40 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:01:40 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:01:40 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:01:40 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:01:40 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:01:40 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:01:40 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:01:40 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:01:40 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:01:40 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:01:40 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:01:40 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=22, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 22', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3cef5bc1, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:01:40 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:01:40 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:01:40 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e27600f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3120ebf1]
2021-03-12 19:01:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:01:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:01:41 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:01:41 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:01:41 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:01:41 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:01:41 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:01:41 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:01:41 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:01:41 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:01:41 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:01:41 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:01:41 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:01:41 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:01:41 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:01:41 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:01:41 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c6a3c3]
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:01:41 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@371f52af]
2021-03-12 19:01:41 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@121e7308]
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:01:41 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:01:41 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:01:41 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:01:41 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:01:41 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c64bdd8]
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:01:41 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57b61dce]
2021-03-12 19:01:41 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f590fc]
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:01:41 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:01:41 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:01:41 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:01:41 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:01:41 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:01:41 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e3673a7]
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:01:41 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:01:41 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:01:41 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:01:41 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:01:41 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e3e28e]
2021-03-12 19:01:41 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4051951b]
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:01:41 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:01:41 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:01:41 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:01:41 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:01:41 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77a48d5e]
2021-03-12 19:01:41 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b4f425]
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:01:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:01:41 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:01:41 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:01:41 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:01:41 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:01:41 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:01:41 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:01:41 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:01:41 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:01:41 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:01:41 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:01:41 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:01:41 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@28880293
2021-03-12 19:01:41 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 034f87e3-809e-4613-b902-81f5b800c42c (<unnamed>)
2021-03-12 19:01:41 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:01:41 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:01:41 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:01:41 DEBUG TransactionImpl:81 - begin
2021-03-12 19:01:41 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:01:41 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:01:41 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: column "amount" is of type money but expression is of type double precision
  Hint: You will need to rewrite or cast the expression.
  Position: 112
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3200)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3806)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:194)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:179)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:636)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:629)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:624)
	at dev.lamp.daotests.ExpenseTests.setup(ExpenseTests.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 19:01:41 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42804
2021-03-12 19:01:41 ERROR SqlExceptionHelper:142 - ERROR: column "amount" is of type money but expression is of type double precision
  Hint: You will need to rewrite or cast the expression.
  Position: 112
2021-03-12 19:03:43 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:03:43 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:03:43 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:03:43 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:03:43 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:03:43 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:03:44 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:03:44 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:03:44 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:03:44 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:03:44 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:03:44 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:03:44 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:03:44 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:03:44 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:03:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:03:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:03:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:03:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:03:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:03:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:03:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:03:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:03:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:03:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:03:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:03:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:03:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:03:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:03:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:03:44 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:03:44 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:03:44 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=postgres}
2021-03-12 19:03:44 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:03:44 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:03:44 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:03:45 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:03:45 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:03:45 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:03:45 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:03:45 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:03:45 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:03:45 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:03:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:03:45 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:03:45 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 19:03:46 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:03:46 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:03:46 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:03:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:03:46 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:03:46 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:03:46 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:03:46 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:03:46 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:03:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:03:46 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:03:46 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:03:46 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:03:46 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:03:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:03:46 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:03:46 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:03:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:03:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:03:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:03:46 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:03:46 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:03:46 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:03:46 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:03:46 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:03:46 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:03:46 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:03:46 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:03:46 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:03:46 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:03:46 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:03:46 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:03:46 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:03:46 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:03:46 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:03:46 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:03:46 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:03:46 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:03:46 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:03:46 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:03:46 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:03:46 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:03:46 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:03:46 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:03:46 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:03:46 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:03:46 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:03:46 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:03:46 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:03:46 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:03:46 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:03:46 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:03:46 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:03:46 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:03:46 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:03:46 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:03:46 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:03:46 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:03:46 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:03:46 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:03:46 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:03:46 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:03:46 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:03:46 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:03:46 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:03:46 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:03:46 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:03:46 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:03:46 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:03:46 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:03:46 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:03:46 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:03:46 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:03:46 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:03:46 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:03:46 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:03:46 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=23, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 23', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51e11384, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:03:46 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:03:46 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:03:46 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22aa4376]
2021-03-12 19:03:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:03:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:03:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:03:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:03:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:03:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:03:46 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:03:46 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:03:46 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:03:46 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:03:46 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:03:46 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:03:46 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:03:46 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:03:46 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:03:46 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:03:46 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a66ab]
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:03:46 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16793313]
2021-03-12 19:03:46 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e501cb4]
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:03:46 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:03:46 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:03:46 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:03:46 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:03:46 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb6148]
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:03:46 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c64bdd8]
2021-03-12 19:03:46 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1beac4]
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:03:46 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:03:46 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:03:46 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:03:46 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:03:46 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:03:46 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b61dce]
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:03:46 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:03:46 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:03:46 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:03:46 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:03:46 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208dd958]
2021-03-12 19:03:46 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d46e32d]
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:03:46 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:03:46 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:03:46 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:03:46 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:03:46 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2a6e2a]
2021-03-12 19:03:46 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcb4152]
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:03:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:03:46 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:03:46 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:03:46 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:03:46 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:03:46 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:03:46 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:03:47 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:03:47 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:03:47 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:03:47 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:03:47 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:03:47 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef1123d
2021-03-12 19:03:47 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: c3119da7-9b3a-4354-a8a8-50d2c344669a (<unnamed>)
2021-03-12 19:03:47 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:03:47 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:03:47 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0
2021-03-12 19:03:47 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@152496a5
2021-03-12 19:03:47 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:03:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:03:47 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Employee'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:03:47 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:03:47 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:03:47 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:03:47 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:03:47 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) )
2021-03-12 19:03:47 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:03:47 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:03:47 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:03:47 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}

2021-03-12 19:03:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:03:47 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:03:47 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:03:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:03:47 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:03:47 DEBUG SqlExceptionHelper:126 - could not extract ResultSet [n/a]
org.postgresql.util.PSQLException: ERROR: permission denied for table employee
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:114)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2303)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2056)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2018)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2849)
	at org.hibernate.loader.Loader.doList(Loader.java:2831)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2663)
	at org.hibernate.loader.Loader.list(Loader.java:2658)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1625)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1593)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:76)
	at dev.lamp.dao.EmployeeDAOHibernate.getAllEmployees(EmployeeDAOHibernate.java:78)
	at dev.lamp.daotests.EmployeeTests.get_all_employees(EmployeeTests.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 19:03:47 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42501
2021-03-12 19:03:47 ERROR SqlExceptionHelper:142 - ERROR: permission denied for table employee
2021-03-12 19:03:47 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:03:47 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:07:57 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:07:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:07:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:07:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:07:57 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:07:57 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:07:57 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:07:57 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:07:57 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:07:58 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:07:58 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:07:58 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:07:58 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:07:58 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:07:58 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:07:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:07:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:07:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:07:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:07:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:07:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:07:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:07:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:07:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:07:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:07:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:07:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:07:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:07:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:07:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:07:58 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:07:58 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:07:58 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:07:58 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:07:58 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:07:58 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:07:58 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:07:58 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:07:58 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:07:58 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:07:59 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:07:59 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:07:59 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:07:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:07:59 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:07:59 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 19:07:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:07:59 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:07:59 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:07:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:07:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:07:59 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:07:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:07:59 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:07:59 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:07:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:07:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:07:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:07:59 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:07:59 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:07:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:07:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:07:59 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:07:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:07:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:07:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:07:59 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:07:59 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:07:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:07:59 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:07:59 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:07:59 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:07:59 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:07:59 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:07:59 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:07:59 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:07:59 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:07:59 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:07:59 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:07:59 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:07:59 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:07:59 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:07:59 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:07:59 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:07:59 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:07:59 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:07:59 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:07:59 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:07:59 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:07:59 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:07:59 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:07:59 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:07:59 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:07:59 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:07:59 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:07:59 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:07:59 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:07:59 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:07:59 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:07:59 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:07:59 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:07:59 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:07:59 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:07:59 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:07:59 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:07:59 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:07:59 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:07:59 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:07:59 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:07:59 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:07:59 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:07:59 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:07:59 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:07:59 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:07:59 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:07:59 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:07:59 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:07:59 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:07:59 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:07:59 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:07:59 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:07:59 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:07:59 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=24, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 24', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51e11384, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:07:59 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:07:59 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:07:59 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22aa4376]
2021-03-12 19:07:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:07:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:08:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:08:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:08:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:08:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:08:00 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:08:00 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:08:00 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:08:00 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:08:00 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:08:00 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:08:00 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:08:00 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:08:00 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:08:00 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:08:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a66ab]
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:08:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16793313]
2021-03-12 19:08:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e501cb4]
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:08:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:08:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:08:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:08:00 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:08:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb6148]
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:08:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c64bdd8]
2021-03-12 19:08:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1beac4]
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:08:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:08:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:08:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:08:00 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:08:00 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:08:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b61dce]
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:08:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:08:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:08:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:08:00 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:08:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208dd958]
2021-03-12 19:08:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d46e32d]
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:08:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:08:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:08:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:08:00 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:08:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2a6e2a]
2021-03-12 19:08:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcb4152]
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:08:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:08:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:08:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:08:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:08:00 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:08:00 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:08:00 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:08:00 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:08:00 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:08:00 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:08:00 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:08:00 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:08:00 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef1123d
2021-03-12 19:08:00 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 5d378e4b-c4da-4838-954a-2ec0c4dd8a98 (<unnamed>)
2021-03-12 19:08:00 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:08:00 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:08:00 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0
2021-03-12 19:08:00 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@152496a5
2021-03-12 19:08:00 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:08:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:08:00 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Employee'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:08:00 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:08:00 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:08:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:08:00 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:08:00 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) )
2021-03-12 19:08:00 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:08:00 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:08:00 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:08:00 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}

2021-03-12 19:08:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:08:00 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:08:00 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:08:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:08:00 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:08:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:13:00 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:13:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:13:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:13:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:13:00 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:13:00 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:13:00 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:13:00 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:13:00 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:13:01 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:13:01 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:13:01 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:13:01 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:13:01 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:13:01 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:13:01 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:13:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:13:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:13:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:13:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:13:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:13:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:13:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:13:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:13:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:13:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:13:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:13:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:13:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:13:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:13:01 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:13:01 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:13:01 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:13:01 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:13:01 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:13:01 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:13:02 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:13:02 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:13:02 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:13:02 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:13:02 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:13:02 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:13:02 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:13:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:13:02 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:13:02 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 19:13:02 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:13:02 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:13:02 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:13:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:13:02 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:13:02 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:13:02 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:13:02 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:13:02 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:13:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:13:02 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:13:02 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:13:02 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:13:02 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:13:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:13:02 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:13:02 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:13:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:13:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:13:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:13:02 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:13:02 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:13:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:13:02 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:13:02 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:13:02 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:13:02 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:13:02 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:13:02 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:13:02 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:13:02 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:13:02 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:13:02 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:13:02 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:13:02 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:13:02 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:13:02 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:13:02 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:13:02 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:13:02 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:13:02 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:13:02 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:13:02 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:13:02 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:13:02 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:13:02 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:13:02 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:13:02 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:13:02 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:13:02 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:13:02 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:13:02 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:13:02 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:13:02 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:13:02 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:13:02 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:13:02 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:13:02 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:13:02 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:13:02 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:13:02 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:13:02 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:13:02 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:13:02 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:13:02 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:13:02 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:13:02 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:13:02 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:13:02 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:13:02 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:13:02 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:13:02 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:13:02 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:13:02 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:13:02 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:13:02 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:13:02 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=25, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 25', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51e11384, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:13:02 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:13:02 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:13:02 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22aa4376]
2021-03-12 19:13:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:13:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:13:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:13:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:13:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:13:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:13:03 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:13:03 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:13:03 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:13:03 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:13:03 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:13:03 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:13:03 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:13:03 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:13:03 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:13:03 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:13:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a66ab]
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:13:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16793313]
2021-03-12 19:13:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e501cb4]
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:13:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:13:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:13:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:13:03 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:13:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb6148]
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:13:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c64bdd8]
2021-03-12 19:13:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1beac4]
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:13:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:13:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:13:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:13:03 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:13:03 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:13:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b61dce]
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:13:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:13:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:13:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:13:03 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:13:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208dd958]
2021-03-12 19:13:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d46e32d]
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:13:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:13:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:13:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:13:03 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:13:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2a6e2a]
2021-03-12 19:13:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcb4152]
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:13:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:13:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:13:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:13:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:13:03 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:13:03 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:13:03 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:13:03 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:13:03 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:13:03 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:13:03 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:13:03 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:13:03 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef1123d
2021-03-12 19:13:03 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 396e5e05-8fe3-4ad0-a256-cbf658a42678 (<unnamed>)
2021-03-12 19:13:03 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:13:03 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:13:03 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0
2021-03-12 19:13:03 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@152496a5
2021-03-12 19:13:03 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:13:03 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:13:03 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Employee'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:13:03 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:13:03 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:13:03 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:13:03 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:13:03 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) )
2021-03-12 19:13:03 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:13:03 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:13:03 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:13:03 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}

2021-03-12 19:13:03 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:13:03 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:13:03 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:13:03 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:13:03 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:13:03 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:17:31 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:17:31 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:17:31 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:17:31 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:17:31 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:17:31 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:17:31 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:17:31 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:17:31 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:17:32 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:17:32 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:17:32 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:17:32 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:17:32 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:17:32 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:17:32 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:17:32 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:17:32 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:17:32 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:17:32 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:17:32 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:17:32 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:17:32 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:17:32 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:17:32 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:17:32 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:17:32 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:17:32 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:17:32 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:17:32 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:17:32 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:17:32 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:17:32 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:17:32 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:17:32 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:17:32 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:17:33 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:17:33 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:17:33 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:17:33 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:17:33 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:17:33 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:17:33 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:17:33 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:17:33 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:17:33 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 19:17:33 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:17:33 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:17:33 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:17:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:17:33 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:17:33 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:17:33 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:17:33 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:17:33 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:17:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:17:33 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:17:33 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:17:33 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:17:33 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:17:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:17:33 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:17:33 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:17:33 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:17:33 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:17:33 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:17:33 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:17:33 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:17:33 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:17:33 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:17:33 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:17:33 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:17:33 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:17:33 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:17:33 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:17:33 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:17:33 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:17:33 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:17:33 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:17:33 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:17:33 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:17:33 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:17:33 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:17:33 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:17:33 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:17:33 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:17:33 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:17:33 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:17:33 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:17:33 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:17:33 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:17:33 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:17:33 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:17:33 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:17:33 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:17:33 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:17:33 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:17:33 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:17:33 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:17:33 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:17:33 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:17:33 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:17:33 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:17:33 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:17:33 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:17:33 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:17:33 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:17:33 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:17:33 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:17:33 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:17:33 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:17:33 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:17:33 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:17:33 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:17:33 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:17:33 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:17:33 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:17:33 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:17:33 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:17:33 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:17:33 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:17:33 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:17:33 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=26, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 26', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51e11384, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:17:33 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:17:33 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:17:33 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22aa4376]
2021-03-12 19:17:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:17:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:17:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:17:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:17:34 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:17:34 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:17:34 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:17:34 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:17:34 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:17:34 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:17:34 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:17:34 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:17:34 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:17:34 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:17:34 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:17:34 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:17:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a66ab]
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:17:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16793313]
2021-03-12 19:17:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e501cb4]
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:17:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:17:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:17:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:17:34 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:17:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb6148]
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:17:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c64bdd8]
2021-03-12 19:17:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1beac4]
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:17:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:17:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:17:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:17:34 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:17:34 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:17:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b61dce]
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:17:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:17:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:17:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:17:34 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:17:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208dd958]
2021-03-12 19:17:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d46e32d]
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:17:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:17:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:17:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:17:34 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:17:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2a6e2a]
2021-03-12 19:17:34 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcb4152]
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:17:34 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:17:34 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:17:34 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:17:34 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:17:34 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:17:34 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:17:34 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:17:34 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:17:34 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:17:34 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:17:34 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:17:34 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:17:34 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef1123d
2021-03-12 19:17:34 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 9a0a0f59-bb69-4e97-b055-b5539021d9a8 (<unnamed>)
2021-03-12 19:17:34 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:17:34 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:17:34 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:17:34 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2639f297
2021-03-12 19:17:34 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:17:34 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:17:34 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'employeeId'
          \-[NUM_INT] Node: '1'

2021-03-12 19:17:34 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:17:34 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:17:34 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:17:34 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:17:34 DEBUG DotNode:696 - getDataType() : employeeId -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:17:34 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeeId -> employee0_.employee_id
2021-03-12 19:17:34 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:17:34 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( = ( employee0_.employee_id employee0_.employee_id employeeId ) 1 ) ) )
2021-03-12 19:17:34 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          | path: generatedAlias0.employeeId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: employeeId
          \-LiteralNode

2021-03-12 19:17:34 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:17:34 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:17:34 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_.employee_id' {propertyName=employeeId,dereferenceType=PRIMITIVE,getPropertyPath=employeeId,path=generatedAlias0.employeeId,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'employeeId' {originalText=employeeId}
          \-[NUM_INT] LiteralNode: '1'

2021-03-12 19:17:34 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:17:34 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:17:34 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:17:34 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:17:34 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:17:35 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:17:35 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0
2021-03-12 19:17:35 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:17:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:17:35 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Employee'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:17:35 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:17:35 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:17:35 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:17:35 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:17:35 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) )
2021-03-12 19:17:35 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:17:35 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:17:35 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:17:35 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}

2021-03-12 19:17:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:17:35 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:17:35 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:17:35 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:17:35 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:17:35 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:18:34 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:18:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:18:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:18:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:18:34 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:18:34 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:18:34 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:18:34 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:18:34 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:18:34 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:18:34 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:18:34 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:18:35 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:18:35 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:18:35 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:18:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:18:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:18:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:18:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:18:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:18:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:18:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:18:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:18:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:18:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:18:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:18:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:18:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:18:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:18:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:18:35 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:18:35 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:18:35 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:18:35 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:18:35 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:18:35 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:18:35 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:18:35 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:18:35 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:18:35 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:18:35 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:18:36 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:18:36 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:18:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:18:36 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:18:36 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 19:18:36 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:18:36 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:18:36 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:18:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:18:36 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:18:36 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:18:36 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:18:36 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:18:36 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:18:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:18:36 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:18:36 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:18:36 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:18:36 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:18:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:18:36 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:18:36 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:18:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:18:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:18:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:18:36 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:18:36 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:18:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:18:36 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:18:36 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:18:36 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:18:36 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:18:36 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:18:36 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:18:36 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:18:36 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:18:36 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:18:36 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:18:36 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:18:36 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:18:36 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:18:36 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:18:36 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:18:36 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:18:36 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:18:36 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:18:36 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:18:36 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:18:36 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:18:36 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:18:36 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:18:36 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:18:36 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:18:36 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:18:36 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:18:36 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:18:36 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:18:36 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:18:36 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:18:36 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:18:36 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:18:36 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:18:36 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:18:36 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:18:36 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:18:36 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:18:36 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:18:36 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:18:36 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:18:36 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:18:36 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:18:36 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:18:36 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:18:36 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:18:36 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:18:36 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:18:36 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:18:36 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:18:36 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:18:36 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:18:36 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:18:36 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=27, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 27', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51e11384, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:18:36 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:18:36 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:18:36 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22aa4376]
2021-03-12 19:18:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:18:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:18:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:18:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:18:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:18:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:18:37 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:18:37 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:18:37 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:18:37 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:18:37 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:18:37 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:18:37 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:18:37 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:18:37 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:18:37 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:18:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a66ab]
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:18:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16793313]
2021-03-12 19:18:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e501cb4]
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:18:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:18:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:18:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:18:37 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:18:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb6148]
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:18:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c64bdd8]
2021-03-12 19:18:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1beac4]
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:18:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:18:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:18:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:18:37 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:18:37 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:18:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b61dce]
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:18:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:18:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:18:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:18:37 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:18:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208dd958]
2021-03-12 19:18:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d46e32d]
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:18:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:18:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:18:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:18:37 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:18:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2a6e2a]
2021-03-12 19:18:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcb4152]
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:18:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:18:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:18:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:18:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:18:37 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:18:37 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:18:37 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:18:37 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:18:37 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:18:37 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:18:37 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:18:37 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:18:37 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef1123d
2021-03-12 19:18:37 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 72fa80d0-3d11-4a3e-bbd4-532475e7c9f8 (<unnamed>)
2021-03-12 19:18:37 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:18:37 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:18:37 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where generatedAlias0.employeePassword=:param0
2021-03-12 19:18:37 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@467c636c
2021-03-12 19:18:37 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeePassword=:param0
2021-03-12 19:18:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:18:37 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'employeePassword'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2021-03-12 19:18:37 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:18:37 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:18:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:18:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:18:37 DEBUG DotNode:696 - getDataType() : employeePassword -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:18:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeePassword -> employee0_.employee_password
2021-03-12 19:18:37 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:18:37 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( = ( employee0_.employee_password employee0_.employee_id employeePassword ) ? ) ) )
2021-03-12 19:18:37 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          | path: generatedAlias0.employeePassword
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: employeePassword
          \-ParameterNode

2021-03-12 19:18:37 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:18:37 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:18:37 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_.employee_password' {propertyName=employeePassword,dereferenceType=PRIMITIVE,getPropertyPath=employeePassword,path=generatedAlias0.employeePassword,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'employeePassword' {originalText=employeePassword}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2bc6d7d5}

2021-03-12 19:18:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:18:37 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeePassword=:param0
2021-03-12 19:18:37 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_password=?
2021-03-12 19:18:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:18:37 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_password=?
2021-03-12 19:18:37 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:18:37 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:18:37 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:18:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:18:37 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'employeeId'
          \-[NUM_INT] Node: '1'

2021-03-12 19:18:37 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:18:37 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:18:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:18:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:18:37 DEBUG DotNode:696 - getDataType() : employeeId -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:18:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeeId -> employee0_.employee_id
2021-03-12 19:18:37 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:18:37 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( = ( employee0_.employee_id employee0_.employee_id employeeId ) 1 ) ) )
2021-03-12 19:18:37 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          | path: generatedAlias0.employeeId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: employeeId
          \-LiteralNode

2021-03-12 19:18:37 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:18:37 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:18:37 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_.employee_id' {propertyName=employeeId,dereferenceType=PRIMITIVE,getPropertyPath=employeeId,path=generatedAlias0.employeeId,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'employeeId' {originalText=employeeId}
          \-[NUM_INT] LiteralNode: '1'

2021-03-12 19:18:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:18:37 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:18:37 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:18:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:18:37 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:18:37 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:18:37 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0
2021-03-12 19:18:37 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:18:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:18:37 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Employee'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:18:37 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:18:37 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:18:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:18:37 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:18:37 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) )
2021-03-12 19:18:37 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:18:37 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:18:37 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:18:37 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}

2021-03-12 19:18:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:18:37 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:18:37 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:18:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:18:37 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:18:37 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:20:24 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:20:24 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:20:24 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:20:24 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:20:24 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:20:24 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:20:24 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:20:24 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:20:24 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:20:24 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:20:24 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:20:24 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:20:24 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:20:24 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:20:24 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:20:25 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:20:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:20:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:20:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:20:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:20:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:20:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:20:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:20:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:20:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:20:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:20:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:20:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:20:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:20:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:20:25 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:20:25 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:20:25 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:20:25 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:20:25 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:20:25 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:20:25 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:20:25 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:20:25 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:20:25 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:20:25 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:20:26 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:20:26 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:20:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:20:26 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:20:26 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 19:20:26 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:20:26 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:20:26 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:20:26 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:20:26 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:20:26 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:20:26 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:20:26 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:20:26 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:20:26 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:20:26 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:20:26 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:20:26 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:20:26 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:20:26 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:20:26 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:20:26 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:20:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:20:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:20:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:20:26 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:20:26 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:20:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:20:26 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:20:26 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:20:26 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:20:26 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:20:26 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:20:26 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:20:26 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:20:26 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:20:26 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:20:26 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:20:26 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:20:26 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:20:26 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:20:26 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:20:26 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:20:26 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:20:26 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:20:26 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:20:26 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:20:26 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:20:26 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:20:26 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:20:26 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:20:26 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:20:26 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:20:26 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:20:26 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:20:26 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:20:26 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:20:26 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:20:26 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:20:26 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:20:26 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:20:26 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:20:26 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:20:26 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:20:26 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:20:26 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:20:26 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:20:26 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:20:26 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:20:26 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:20:26 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:20:26 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:20:26 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:20:26 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:20:26 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:20:26 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:20:26 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:20:26 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:20:26 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:20:26 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:20:26 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:20:26 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=28, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 28', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51e11384, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:20:26 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:20:26 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:20:26 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22aa4376]
2021-03-12 19:20:26 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:20:26 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:20:26 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:20:26 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:20:26 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:20:26 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:20:27 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:20:27 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:20:27 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:20:27 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:20:27 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:20:27 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:20:27 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:20:27 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:20:27 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:20:27 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:20:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a66ab]
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:20:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16793313]
2021-03-12 19:20:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e501cb4]
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:20:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:20:27 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:20:27 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:20:27 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:20:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb6148]
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:20:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c64bdd8]
2021-03-12 19:20:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1beac4]
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:20:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:20:27 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:20:27 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:20:27 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:20:27 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:20:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b61dce]
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:20:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:20:27 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:20:27 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:20:27 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:20:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208dd958]
2021-03-12 19:20:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d46e32d]
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:20:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:20:27 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:20:27 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:20:27 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:20:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2a6e2a]
2021-03-12 19:20:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcb4152]
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:20:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:20:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:20:27 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:20:27 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:20:27 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:20:27 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:20:27 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:20:27 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:20:27 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:20:27 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:20:27 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:20:27 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:20:27 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef1123d
2021-03-12 19:20:27 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 4667cdb6-2b4b-4eba-815e-2a1b575f01af (<unnamed>)
2021-03-12 19:20:27 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:20:27 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:20:27 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where generatedAlias0.employeePassword=:param0
2021-03-12 19:20:27 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@467c636c
2021-03-12 19:20:27 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeePassword=:param0
2021-03-12 19:20:27 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:20:27 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'employeePassword'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2021-03-12 19:20:27 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:20:27 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:20:27 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:20:27 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:20:27 DEBUG DotNode:696 - getDataType() : employeePassword -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:20:27 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeePassword -> employee0_.employee_password
2021-03-12 19:20:27 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:20:27 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( = ( employee0_.employee_password employee0_.employee_id employeePassword ) ? ) ) )
2021-03-12 19:20:27 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          | path: generatedAlias0.employeePassword
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: employeePassword
          \-ParameterNode

2021-03-12 19:20:27 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:20:27 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:20:27 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_.employee_password' {propertyName=employeePassword,dereferenceType=PRIMITIVE,getPropertyPath=employeePassword,path=generatedAlias0.employeePassword,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'employeePassword' {originalText=employeePassword}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2bc6d7d5}

2021-03-12 19:20:27 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:20:27 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeePassword=:param0
2021-03-12 19:20:27 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_password=?
2021-03-12 19:20:27 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:20:27 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_password=?
2021-03-12 19:20:27 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:20:27 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:20:27 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:20:27 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:20:27 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'employeeId'
          \-[NUM_INT] Node: '1'

2021-03-12 19:20:27 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:20:27 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:20:27 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:20:27 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:20:27 DEBUG DotNode:696 - getDataType() : employeeId -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:20:27 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeeId -> employee0_.employee_id
2021-03-12 19:20:27 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:20:27 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( = ( employee0_.employee_id employee0_.employee_id employeeId ) 1 ) ) )
2021-03-12 19:20:27 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          | path: generatedAlias0.employeeId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: employeeId
          \-LiteralNode

2021-03-12 19:20:27 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:20:27 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:20:27 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_.employee_id' {propertyName=employeeId,dereferenceType=PRIMITIVE,getPropertyPath=employeeId,path=generatedAlias0.employeeId,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'employeeId' {originalText=employeeId}
          \-[NUM_INT] LiteralNode: '1'

2021-03-12 19:20:27 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:20:27 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:20:27 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:20:27 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:20:27 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:20:27 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:20:27 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:20:27 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:20:27 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0
2021-03-12 19:20:27 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:20:27 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:20:27 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Employee'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:20:27 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:20:27 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:20:27 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:20:27 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:20:27 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) )
2021-03-12 19:20:27 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:20:27 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:20:27 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:20:27 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}

2021-03-12 19:20:27 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:20:27 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:20:27 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:20:27 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:20:27 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:20:27 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:20:27 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:20:27 DEBUG Loader:384 - Result set row: 1
2021-03-12 19:20:27 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#2]
2021-03-12 19:20:27 DEBUG Loader:384 - Result set row: 2
2021-03-12 19:20:27 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#3]
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#2]
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#2]
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#3]
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:20:27 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#3]
2021-03-12 19:20:27 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:22:33 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:22:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:22:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:22:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:22:34 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:22:34 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:22:34 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:22:34 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:22:34 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:22:34 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:22:34 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:22:34 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:22:34 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:22:34 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:22:34 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:22:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:22:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:22:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:22:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:22:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:22:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:22:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:22:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:22:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:22:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:22:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:22:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:22:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:22:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:22:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:22:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:22:35 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:22:35 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:22:35 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:22:35 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:22:35 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:22:35 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:22:35 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:22:35 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:22:35 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:22:35 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:22:35 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:22:36 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:22:36 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:22:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:22:36 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:22:36 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 19:22:36 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:22:36 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:22:36 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:22:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:22:36 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:22:36 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:22:36 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:22:36 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:22:36 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:22:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:22:36 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:22:36 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:22:36 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:22:36 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:22:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:22:36 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:22:36 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:22:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:22:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:22:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:22:36 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:22:36 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:22:36 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:22:36 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:22:36 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:22:36 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:22:36 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:22:36 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:22:36 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:22:36 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:22:36 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:22:36 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:22:36 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:22:36 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:22:36 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:22:36 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:22:36 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:22:36 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:22:36 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:22:36 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:22:36 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:22:36 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:22:36 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:22:36 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:22:36 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:22:36 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:22:36 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:22:36 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:22:36 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:22:36 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:22:36 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:22:36 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:22:36 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:22:36 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:22:36 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:22:36 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:22:36 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:22:36 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:22:36 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:22:36 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:22:36 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:22:36 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:22:36 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:22:36 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:22:36 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:22:36 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:22:36 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:22:36 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:22:36 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:22:36 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:22:36 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:22:36 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:22:36 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:22:36 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:22:36 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:22:36 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:22:36 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=29, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 29', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51e11384, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:22:36 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:22:36 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:22:36 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22aa4376]
2021-03-12 19:22:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:22:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:22:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:22:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:22:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:22:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:22:36 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:22:36 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:22:36 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:22:36 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:22:36 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:22:36 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:22:36 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:22:36 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:22:36 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:22:36 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:22:36 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:22:36 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:22:36 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:22:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:22:36 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:22:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:22:36 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:22:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a66ab]
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:22:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16793313]
2021-03-12 19:22:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e501cb4]
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:22:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:22:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:22:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:22:37 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:22:37 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:22:37 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:22:37 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:22:37 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:22:37 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:22:37 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:22:37 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:22:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb6148]
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:22:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c64bdd8]
2021-03-12 19:22:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1beac4]
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:22:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:22:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:22:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:22:37 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:22:37 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:22:37 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:22:37 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:22:37 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:22:37 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:22:37 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:22:37 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:22:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b61dce]
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:22:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:22:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:22:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:22:37 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:22:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208dd958]
2021-03-12 19:22:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d46e32d]
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:22:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:22:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:22:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:22:37 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:22:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2a6e2a]
2021-03-12 19:22:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcb4152]
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:22:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:22:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:22:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:22:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:22:37 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:22:37 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:22:37 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:22:37 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:22:37 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:22:37 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:22:37 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:22:37 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:22:37 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef1123d
2021-03-12 19:22:37 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 2ad2d056-d2de-4ab0-84a9-bafec0f11991 (<unnamed>)
2021-03-12 19:22:37 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:22:37 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:22:37 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where generatedAlias0.employeePassword=:param0
2021-03-12 19:22:37 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@467c636c
2021-03-12 19:22:37 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeePassword=:param0
2021-03-12 19:22:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:22:37 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'employeePassword'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2021-03-12 19:22:37 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:22:37 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:22:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:22:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:22:37 DEBUG DotNode:696 - getDataType() : employeePassword -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:22:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeePassword -> employee0_.employee_password
2021-03-12 19:22:37 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:22:37 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( = ( employee0_.employee_password employee0_.employee_id employeePassword ) ? ) ) )
2021-03-12 19:22:37 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          | path: generatedAlias0.employeePassword
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: employeePassword
          \-ParameterNode

2021-03-12 19:22:37 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:22:37 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:22:37 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_.employee_password' {propertyName=employeePassword,dereferenceType=PRIMITIVE,getPropertyPath=employeePassword,path=generatedAlias0.employeePassword,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'employeePassword' {originalText=employeePassword}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2bc6d7d5}

2021-03-12 19:22:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:22:37 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeePassword=:param0
2021-03-12 19:22:37 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_password=?
2021-03-12 19:22:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:22:37 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_password=?
2021-03-12 19:22:37 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:22:37 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:22:37 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:22:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:22:37 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'employeeId'
          \-[NUM_INT] Node: '1'

2021-03-12 19:22:37 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:22:37 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:22:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:22:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:22:37 DEBUG DotNode:696 - getDataType() : employeeId -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:22:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeeId -> employee0_.employee_id
2021-03-12 19:22:37 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:22:37 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( = ( employee0_.employee_id employee0_.employee_id employeeId ) 1 ) ) )
2021-03-12 19:22:37 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          | path: generatedAlias0.employeeId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: employeeId
          \-LiteralNode

2021-03-12 19:22:37 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:22:37 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:22:37 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_.employee_id' {propertyName=employeeId,dereferenceType=PRIMITIVE,getPropertyPath=employeeId,path=generatedAlias0.employeeId,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'employeeId' {originalText=employeeId}
          \-[NUM_INT] LiteralNode: '1'

2021-03-12 19:22:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:22:37 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:22:37 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:22:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:22:37 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:22:37 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:22:37 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:22:37 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:22:37 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0
2021-03-12 19:22:37 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:22:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:22:37 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Employee'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:22:37 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:22:37 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:22:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:22:37 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:22:37 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) )
2021-03-12 19:22:37 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:22:37 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:22:37 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:22:37 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}

2021-03-12 19:22:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:22:37 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:22:37 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:22:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:22:37 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:22:37 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:22:37 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:22:37 DEBUG Loader:384 - Result set row: 1
2021-03-12 19:22:37 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#2]
2021-03-12 19:22:37 DEBUG Loader:384 - Result set row: 2
2021-03-12 19:22:37 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#3]
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#2]
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#2]
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#3]
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:22:37 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#3]
2021-03-12 19:22:37 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:23:41 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:23:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:23:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:23:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:23:41 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:23:41 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:23:41 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:23:41 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:23:41 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:23:41 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:23:41 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:23:41 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:23:41 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:23:41 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:23:41 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 19:23:41 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 19:23:42 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:23:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:23:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:23:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:23:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:23:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:23:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:23:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:23:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:23:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:23:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:23:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:23:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:23:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:23:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:23:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:23:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:23:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:23:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:23:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:23:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:23:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:23:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:23:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:23:42 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:23:42 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:23:42 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:23:42 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:23:42 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:23:42 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:23:42 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:23:42 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:23:42 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:23:42 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:23:42 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:23:43 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:23:43 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:23:43 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 19:23:43 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:23:43 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:23:43 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:23:43 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:23:43 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:23:43 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:23:43 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:23:43 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:23:43 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:23:43 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:23:43 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:23:43 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:23:43 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:23:43 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:23:43 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:23:43 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:23:43 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:23:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:23:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:23:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:23:43 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:23:43 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:23:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:23:43 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:23:43 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:23:43 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:23:43 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:23:43 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:23:43 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:23:43 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:23:43 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:23:43 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:23:43 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:23:43 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:23:43 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:23:43 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:23:43 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:23:43 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:23:43 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:23:43 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:23:43 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:23:43 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:23:43 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:23:43 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:23:43 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:23:43 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:23:43 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:23:43 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:23:43 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:23:43 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:23:43 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:23:43 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:23:43 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:23:43 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:23:43 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:23:43 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:23:43 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:23:43 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:23:43 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:23:43 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:23:43 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:23:43 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:23:43 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:23:43 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:23:43 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:23:43 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:23:43 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:23:43 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:23:43 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:23:43 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:23:43 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:23:43 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:23:43 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:23:43 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:23:43 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:23:43 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:23:43 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=30, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 30', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51e11384, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:23:43 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:23:43 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:23:43 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22aa4376]
2021-03-12 19:23:43 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:23:43 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:23:43 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:23:43 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:23:43 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:23:43 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:23:43 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:23:43 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:23:43 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:23:43 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:23:43 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:23:43 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:23:43 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:23:43 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:23:43 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:23:43 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:23:43 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:23:43 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:23:43 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:23:43 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:23:43 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:23:43 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:23:43 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:23:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a66ab]
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16793313]
2021-03-12 19:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e501cb4]
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:23:44 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:23:44 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:23:44 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:23:44 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:23:44 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:23:44 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:23:44 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:23:44 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:23:44 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:23:44 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:23:44 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb6148]
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c64bdd8]
2021-03-12 19:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1beac4]
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:23:44 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:23:44 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:23:44 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:23:44 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:23:44 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:23:44 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:23:44 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:23:44 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:23:44 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:23:44 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:23:44 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b61dce]
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:23:44 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:23:44 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:23:44 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:23:44 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208dd958]
2021-03-12 19:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d46e32d]
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:23:44 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:23:44 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:23:44 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:23:44 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2a6e2a]
2021-03-12 19:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcb4152]
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:23:44 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:23:44 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:23:44 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:23:44 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:23:44 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:23:44 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:23:44 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:23:44 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:23:44 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:23:44 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:23:44 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:23:44 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef1123d
2021-03-12 19:23:44 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 5e5622c4-4787-4321-b38e-d1c03da4f258 (<unnamed>)
2021-03-12 19:23:44 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:23:44 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:23:44 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where generatedAlias0.employeePassword=:param0
2021-03-12 19:23:44 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@467c636c
2021-03-12 19:23:44 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeePassword=:param0
2021-03-12 19:23:44 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:23:44 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'employeePassword'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2021-03-12 19:23:44 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:23:44 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:23:44 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:23:44 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:23:44 DEBUG DotNode:696 - getDataType() : employeePassword -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:23:44 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeePassword -> employee0_.employee_password
2021-03-12 19:23:44 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:23:44 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( = ( employee0_.employee_password employee0_.employee_id employeePassword ) ? ) ) )
2021-03-12 19:23:44 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          | path: generatedAlias0.employeePassword
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: employeePassword
          \-ParameterNode

2021-03-12 19:23:44 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:23:44 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:23:44 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_.employee_password' {propertyName=employeePassword,dereferenceType=PRIMITIVE,getPropertyPath=employeePassword,path=generatedAlias0.employeePassword,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'employeePassword' {originalText=employeePassword}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2bc6d7d5}

2021-03-12 19:23:44 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:23:44 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeePassword=:param0
2021-03-12 19:23:44 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_password=?
2021-03-12 19:23:44 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:23:44 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_password=?
2021-03-12 19:23:44 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:23:44 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:23:44 DEBUG Loader:384 - Result set row: 1
2021-03-12 19:23:44 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#2]
2021-03-12 19:23:44 DEBUG Loader:384 - Result set row: 2
2021-03-12 19:23:44 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#3]
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#2]
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#2]
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#3]
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#3]
2021-03-12 19:23:44 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:23:44 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:23:44 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:23:44 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:23:44 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'employeeId'
          \-[NUM_INT] Node: '1'

2021-03-12 19:23:44 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:23:44 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:23:44 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:23:44 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:23:44 DEBUG DotNode:696 - getDataType() : employeeId -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:23:44 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeeId -> employee0_.employee_id
2021-03-12 19:23:44 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:23:44 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( = ( employee0_.employee_id employee0_.employee_id employeeId ) 1 ) ) )
2021-03-12 19:23:44 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          | path: generatedAlias0.employeeId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: employeeId
          \-LiteralNode

2021-03-12 19:23:44 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:23:44 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:23:44 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_.employee_id' {propertyName=employeeId,dereferenceType=PRIMITIVE,getPropertyPath=employeeId,path=generatedAlias0.employeeId,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'employeeId' {originalText=employeeId}
          \-[NUM_INT] LiteralNode: '1'

2021-03-12 19:23:44 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:23:44 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:23:44 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:23:44 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:23:44 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:23:44 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:23:44 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:23:44 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:23:44 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0
2021-03-12 19:23:44 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:23:44 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:23:44 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Employee'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:23:44 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:23:44 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:23:44 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:23:44 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:23:44 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) )
2021-03-12 19:23:44 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:23:44 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:23:44 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:23:44 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}

2021-03-12 19:23:44 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:23:44 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:23:44 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:23:44 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:23:44 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:23:44 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:23:44 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:23:44 DEBUG Loader:384 - Result set row: 1
2021-03-12 19:23:44 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#2]
2021-03-12 19:23:44 DEBUG Loader:384 - Result set row: 2
2021-03-12 19:23:44 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#3]
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#2]
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#2]
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#3]
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:23:44 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#3]
2021-03-12 19:23:44 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:25:49 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:25:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:25:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:25:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:25:49 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:25:49 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:25:50 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:25:50 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:25:50 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:25:50 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:25:50 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:25:50 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:25:50 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:25:50 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:25:50 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3dcc12ee
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3dcc12ee
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3dcc12ee
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3fe8d551
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@323f3a55
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3338d92c
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@45b08ff
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@45b08ff
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@45b08ff
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@538e388b
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@538e388b
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@538e388b
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@15842d97
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@15842d97
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15842d97
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@20b64d5b
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@20b64d5b
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20b64d5b
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@385a5de6
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@385a5de6
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@385a5de6
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@7aa1a131
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@7aa1a131
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7aa1a131
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@390c3535
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@390c3535
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@390c3535
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4597ae9a
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4597ae9a
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2c89b4b2
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2c89b4b2
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@162e4c19
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@162e4c19
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f5f5cb3
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6095a939
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@1187d073
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1187d073
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@728f3203
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@728f3203
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@51845a0b
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51845a0b
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d1b621d
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d1b621d
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3ca91959
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3ca91959
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6a7b609a
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6a7b609a
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f88e0c6
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f88e0c6
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1e4af9aa
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1e4af9aa
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69bb1250
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69bb1250
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@1347f0bc
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1347f0bc
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6aac363f
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6aac363f
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@29d84f3c
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@29d84f3c
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@29d84f3c
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@43853bba
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@7b700fb6
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7b700fb6
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7b700fb6
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63d608a1
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3b411969
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@77336c32
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@77336c32
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@7eee08c3
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7eee08c3
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@149bd231
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@149bd231
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@2ea390c4
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2ea390c4
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c2d9feb
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c2d9feb
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6fdee6de
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@3bc4e71d
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3bc4e71d
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@3bc4e71d
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c0c0416
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c0c0416
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c0c0416
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@15b60434
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@152f03a4
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@3f22f6d0
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3f22f6d0
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@3f22f6d0
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5884c3b6
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5884c3b6
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5884c3b6
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@2c01a5e8
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@27cee7b
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4c3c2a36
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3c2a36
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4718f037
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@20d46375
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@20d46375
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@58804f93
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58804f93
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b022758
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@514df03
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@e939fe5
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2cd075d
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2cd075d
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@762653a9
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58123490
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a15f8d4
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3caca0b2
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@78531795
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31ac0abb
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@642a9702
2021-03-12 19:25:50 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3d5a1205
2021-03-12 19:25:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:25:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:25:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:25:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:25:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:25:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:25:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:25:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:25:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:25:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:25:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:25:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:25:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:25:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:25:50 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:25:50 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:25:50 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:25:50 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:25:50 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:25:50 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:25:51 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:25:51 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:25:51 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:25:51 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:25:51 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:25:51 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:25:51 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3af6d508
2021-03-12 19:25:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3af6d508
2021-03-12 19:25:51 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1c2d9feb
2021-03-12 19:25:51 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5868cdb0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1314f214]
2021-03-12 19:25:51 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:25:51 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:25:51 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:25:51 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:25:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:51 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:25:51 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:25:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:25:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:25:51 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:25:51 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:25:51 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:25:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:25:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:25:51 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:25:51 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:25:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:25:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:25:51 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:25:51 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:25:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:25:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:25:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:25:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:25:51 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:25:51 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:25:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:25:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:25:51 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:25:51 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:25:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:25:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:25:51 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:25:51 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:25:51 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:25:51 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:25:51 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:25:51 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:25:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:25:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:25:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:25:52 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:25:52 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:25:52 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:25:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:25:52 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:25:52 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:25:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:25:52 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:25:52 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:25:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:25:52 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:25:52 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:25:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:25:52 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:25:52 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:25:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:25:52 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:25:52 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:25:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:25:52 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:25:52 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:25:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:25:52 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:25:52 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:25:52 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:25:52 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:25:52 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:25:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:25:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:25:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:25:52 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:25:52 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:25:52 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:25:52 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:25:52 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:25:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:25:52 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:25:52 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:25:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:25:52 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:25:52 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:25:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:25:52 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:25:52 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:25:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:25:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:25:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:25:52 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:25:52 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:25:52 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:25:52 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:25:52 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:25:52 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:25:52 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:25:52 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:25:52 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:25:52 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:25:52 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:25:52 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:25:52 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:25:52 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:25:52 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:25:52 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:25:52 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:25:52 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:25:52 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:25:52 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:25:52 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:25:52 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:25:52 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:25:52 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:25:52 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:25:52 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:25:52 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:25:52 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:25:52 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:25:52 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:25:52 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:25:52 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:25:52 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:25:52 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:25:52 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:25:52 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:25:52 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:25:52 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:25:52 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:25:52 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:25:52 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:25:52 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:25:52 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:25:52 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:25:52 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:25:52 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:25:52 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:25:52 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:25:52 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:25:52 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:25:52 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:25:52 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:25:52 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:25:52 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:25:52 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:25:52 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:25:52 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=31, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 31', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@37af3f0a, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:25:52 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:25:52 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:25:52 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5868cdb0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@42e393e6]
2021-03-12 19:25:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:25:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:25:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:25:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:25:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:25:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:25:52 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:25:52 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:25:52 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:25:52 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:25:52 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:25:52 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:25:52 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:25:52 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:25:52 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:25:52 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:25:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a29d571]
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:25:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10a74ab9]
2021-03-12 19:25:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29aa0a0f]
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:25:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:25:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:25:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:25:52 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:25:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7800d243]
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:25:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2bcf69c]
2021-03-12 19:25:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33df6cd6]
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:25:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:25:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:25:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:25:52 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:25:52 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:25:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4db33224]
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:25:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:25:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:25:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:25:52 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:25:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ffd734]
2021-03-12 19:25:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@95cd969]
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:25:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:25:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:25:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:25:52 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:25:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@158ae846]
2021-03-12 19:25:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42e32674]
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:25:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:25:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:25:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:25:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:25:52 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:25:52 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:25:52 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:25:52 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:25:52 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:25:52 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:25:52 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:25:52 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:25:52 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1f09aad2
2021-03-12 19:25:52 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 1c9dff10-006f-4c4d-ac18-690689dd7a0e (<unnamed>)
2021-03-12 19:25:52 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:25:53 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:25:53 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where generatedAlias0.employeePassword=:param0
2021-03-12 19:25:53 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6faedddb
2021-03-12 19:25:53 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeePassword=:param0
2021-03-12 19:25:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:25:53 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'employeePassword'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2021-03-12 19:25:53 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:25:53 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:25:53 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:25:53 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:25:53 DEBUG DotNode:696 - getDataType() : employeePassword -> org.hibernate.type.StringType@162e4c19
2021-03-12 19:25:53 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeePassword -> employee0_.employee_password
2021-03-12 19:25:53 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:25:53 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( = ( employee0_.employee_password employee0_.employee_id employeePassword ) ? ) ) )
2021-03-12 19:25:53 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          | path: generatedAlias0.employeePassword
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: employeePassword
          \-ParameterNode

2021-03-12 19:25:53 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:25:53 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:25:53 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_.employee_password' {propertyName=employeePassword,dereferenceType=PRIMITIVE,getPropertyPath=employeePassword,path=generatedAlias0.employeePassword,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'employeePassword' {originalText=employeePassword}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@162e4c19}

2021-03-12 19:25:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:25:53 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeePassword=:param0
2021-03-12 19:25:53 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_password=?
2021-03-12 19:25:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:25:53 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_password=?
2021-03-12 19:25:53 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:25:53 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:25:53 DEBUG Loader:384 - Result set row: 1
2021-03-12 19:25:53 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#2]
2021-03-12 19:25:53 DEBUG Loader:384 - Result set row: 2
2021-03-12 19:25:53 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#3]
2021-03-12 19:25:53 DEBUG Loader:384 - Result set row: 3
2021-03-12 19:25:53 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#4]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#2]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#2]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#3]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#3]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#4]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = Wast324
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#4]
2021-03-12 19:25:53 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:25:53 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:25:53 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:25:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:25:53 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'employeeId'
          \-[NUM_INT] Node: '1'

2021-03-12 19:25:53 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:25:53 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:25:53 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:25:53 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:25:53 DEBUG DotNode:696 - getDataType() : employeeId -> org.hibernate.type.IntegerType@20b64d5b
2021-03-12 19:25:53 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeeId -> employee0_.employee_id
2021-03-12 19:25:53 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:25:53 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( = ( employee0_.employee_id employee0_.employee_id employeeId ) 1 ) ) )
2021-03-12 19:25:53 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          | path: generatedAlias0.employeeId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: employeeId
          \-LiteralNode

2021-03-12 19:25:53 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:25:53 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:25:53 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_.employee_id' {propertyName=employeeId,dereferenceType=PRIMITIVE,getPropertyPath=employeeId,path=generatedAlias0.employeeId,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'employeeId' {originalText=employeeId}
          \-[NUM_INT] LiteralNode: '1'

2021-03-12 19:25:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:25:53 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:25:53 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:25:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:25:53 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:25:53 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:25:53 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:25:53 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:25:53 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0
2021-03-12 19:25:53 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:25:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:25:53 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Employee'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:25:53 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:25:53 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:25:53 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:25:53 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:25:53 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) )
2021-03-12 19:25:53 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:25:53 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:25:53 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:25:53 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}

2021-03-12 19:25:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:25:53 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:25:53 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:25:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:25:53 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:25:53 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:25:53 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:25:53 DEBUG Loader:384 - Result set row: 1
2021-03-12 19:25:53 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#2]
2021-03-12 19:25:53 DEBUG Loader:384 - Result set row: 2
2021-03-12 19:25:53 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#3]
2021-03-12 19:25:53 DEBUG Loader:384 - Result set row: 3
2021-03-12 19:25:53 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#4]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#2]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#2]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#3]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#3]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#4]
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = Wast324
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:25:53 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#4]
2021-03-12 19:25:53 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:28:56 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:28:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:28:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:28:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:28:56 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:28:56 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:28:57 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:28:57 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:28:57 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:28:57 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:28:57 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:28:57 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:28:57 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:28:57 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:28:57 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:28:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:28:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:28:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:28:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:28:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:28:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:28:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:28:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:28:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:28:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:28:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:28:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:28:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:28:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:28:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:28:57 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:28:57 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:28:57 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:28:57 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:28:57 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:28:57 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:28:58 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:28:58 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:28:58 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:28:58 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:28:58 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:28:58 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:28:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:28:58 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:28:58 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 19:28:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:28:59 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:28:59 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:28:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:28:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:28:59 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:28:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:28:59 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:28:59 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:28:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:28:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:28:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:28:59 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:28:59 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:28:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:28:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:28:59 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:28:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:28:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:28:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:28:59 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:28:59 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:28:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:28:59 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:28:59 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:28:59 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:28:59 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:28:59 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:28:59 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:28:59 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:28:59 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:28:59 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:28:59 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:28:59 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:28:59 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:28:59 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:28:59 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:28:59 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:28:59 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:28:59 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:28:59 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:28:59 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:28:59 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:28:59 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:28:59 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:28:59 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:28:59 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:28:59 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:28:59 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:28:59 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:28:59 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:28:59 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:28:59 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:28:59 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:28:59 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:28:59 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:28:59 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:28:59 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:28:59 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:28:59 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:28:59 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:28:59 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:28:59 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:28:59 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:28:59 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:28:59 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:28:59 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:28:59 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:28:59 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:28:59 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:28:59 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:28:59 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:28:59 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:28:59 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:28:59 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:28:59 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:28:59 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=32, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 32', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51e11384, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:28:59 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:28:59 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:28:59 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22aa4376]
2021-03-12 19:28:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:28:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:28:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:28:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:28:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:28:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:28:59 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:28:59 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:28:59 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:28:59 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:28:59 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:28:59 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:28:59 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:28:59 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:28:59 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:28:59 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:28:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a66ab]
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:28:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16793313]
2021-03-12 19:28:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e501cb4]
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:28:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:28:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:28:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:28:59 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:28:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb6148]
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:28:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c64bdd8]
2021-03-12 19:28:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1beac4]
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:28:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:28:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:28:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:28:59 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:28:59 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:28:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b61dce]
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:28:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:28:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:28:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:28:59 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:28:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208dd958]
2021-03-12 19:28:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d46e32d]
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:28:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:28:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:28:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:28:59 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:28:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2a6e2a]
2021-03-12 19:28:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcb4152]
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:28:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:28:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:28:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:28:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:28:59 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:29:00 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:29:00 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:29:00 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:29:00 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:29:00 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:29:00 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:29:00 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:29:00 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef1123d
2021-03-12 19:29:00 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 54124db7-9e26-4f90-8723-b0b97e100914 (<unnamed>)
2021-03-12 19:29:00 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:29:00 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:29:00 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where ( generatedAlias0.employeeUsername=:param0 ) and ( generatedAlias0.employeePassword=:param1 )
2021-03-12 19:29:00 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7e96dccd
2021-03-12 19:29:00 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where ( generatedAlias0.employeeUsername=:param0 ) and ( generatedAlias0.employeePassword=:param1 )
2021-03-12 19:29:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:29:00 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'employeeUsername'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'employeePassword'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

2021-03-12 19:29:00 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:29:00 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:29:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:29:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:29:00 DEBUG DotNode:696 - getDataType() : employeeUsername -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:29:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeeUsername -> employee0_.employee_username
2021-03-12 19:29:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:29:00 DEBUG DotNode:696 - getDataType() : employeePassword -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:29:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeePassword -> employee0_.employee_password
2021-03-12 19:29:00 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:29:00 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( and ( = ( employee0_.employee_username employee0_.employee_id employeeUsername ) ? ) ( = ( employee0_.employee_password employee0_.employee_id employeePassword ) ? ) ) ) )
2021-03-12 19:29:00 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | path: generatedAlias0.employeeUsername
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: employeeUsername
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
             | path: generatedAlias0.employeePassword
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: employeePassword
             \-ParameterNode

2021-03-12 19:29:00 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:29:00 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:29:00 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'employee0_.employee_username' {propertyName=employeeUsername,dereferenceType=PRIMITIVE,getPropertyPath=employeeUsername,path=generatedAlias0.employeeUsername,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  |  \-[IDENT] IdentNode: 'employeeUsername' {originalText=employeeUsername}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2bc6d7d5}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'employee0_.employee_password' {propertyName=employeePassword,dereferenceType=PRIMITIVE,getPropertyPath=employeePassword,path=generatedAlias0.employeePassword,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
             |  \-[IDENT] IdentNode: 'employeePassword' {originalText=employeePassword}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@2bc6d7d5}

2021-03-12 19:29:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:29:00 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where ( generatedAlias0.employeeUsername=:param0 ) and ( generatedAlias0.employeePassword=:param1 )
2021-03-12 19:29:00 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_username=? and employee0_.employee_password=?
2021-03-12 19:29:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:29:00 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_username=? and employee0_.employee_password=?
2021-03-12 19:29:00 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:29:00 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#4]
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#4]
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = Wast324
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#4]
2021-03-12 19:29:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:29:00 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:29:00 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:29:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:29:00 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'employeeId'
          \-[NUM_INT] Node: '1'

2021-03-12 19:29:00 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:29:00 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:29:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:29:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:29:00 DEBUG DotNode:696 - getDataType() : employeeId -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:29:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeeId -> employee0_.employee_id
2021-03-12 19:29:00 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:29:00 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( = ( employee0_.employee_id employee0_.employee_id employeeId ) 1 ) ) )
2021-03-12 19:29:00 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          | path: generatedAlias0.employeeId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: employeeId
          \-LiteralNode

2021-03-12 19:29:00 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:29:00 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:29:00 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_.employee_id' {propertyName=employeeId,dereferenceType=PRIMITIVE,getPropertyPath=employeeId,path=generatedAlias0.employeeId,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'employeeId' {originalText=employeeId}
          \-[NUM_INT] LiteralNode: '1'

2021-03-12 19:29:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:29:00 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:29:00 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:29:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:29:00 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:29:00 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:29:00 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:29:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:29:00 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0
2021-03-12 19:29:00 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:29:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:29:00 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Employee'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:29:00 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:29:00 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:29:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:29:00 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:29:00 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) )
2021-03-12 19:29:00 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:29:00 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:29:00 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:29:00 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}

2021-03-12 19:29:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:29:00 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:29:00 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:29:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:29:00 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:29:00 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:29:00 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:29:00 DEBUG Loader:384 - Result set row: 1
2021-03-12 19:29:00 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#2]
2021-03-12 19:29:00 DEBUG Loader:384 - Result set row: 2
2021-03-12 19:29:00 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#3]
2021-03-12 19:29:00 DEBUG Loader:384 - Result set row: 3
2021-03-12 19:29:00 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#4]
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#2]
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#2]
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#3]
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#3]
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#4]
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = Wast324
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:29:00 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#4]
2021-03-12 19:29:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:37:24 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:37:24 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:37:24 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:37:24 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:37:24 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:37:24 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:37:24 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:37:24 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:37:24 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:37:24 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:37:24 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:37:24 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:37:25 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:37:25 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:37:25 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a5e8571
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@73c2a5b7
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7c185207
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5f5f41cc
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5f5f41cc
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4bfb1dc7
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4bfb1dc7
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3a58c3f3
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@13c2d4e1
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@b733332
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@b733332
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@2ed3ee11
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ed3ee11
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@257414aa
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@257414aa
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1493ab69
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1493ab69
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@211dd027
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@211dd027
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@875b7af
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@875b7af
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6966b1f1
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6966b1f1
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3cd12cd
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3cd12cd
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c490755
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c490755
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@7db0f0f6
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7db0f0f6
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@3e44c54a
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3e44c54a
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@716bba20
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@b80b347
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@62ecdc7a
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@27d2a1d1
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@27d2a1d1
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@35136c33
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@35136c33
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6fdff530
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6fdff530
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5f2d144a
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5f2d144a
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e29ecd6
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@20889642
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2310a6ae
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@79dd0677
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4c2ebcfc
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@28bcf9ed
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28bcf9ed
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3290a021
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@342a9404
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@342a9404
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@1bdd079e
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1bdd079e
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@17f0d5b2
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26e7becd
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1aa695ec
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7a703f33
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a703f33
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c3f36b6
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f420776
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:37:25 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:37:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:37:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:37:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:37:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:37:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:37:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:37:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:37:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:37:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:37:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:37:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:37:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:37:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:37:25 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:37:25 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:37:25 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:37:25 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:37:25 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:37:25 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:37:25 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:37:25 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:37:25 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:37:25 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:37:25 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:37:26 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:37:26 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:37:26 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@70b8b506
2021-03-12 19:37:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@70b8b506
2021-03-12 19:37:26 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:37:26 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@707ec98d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@45fe358f]
2021-03-12 19:37:26 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:37:26 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:37:26 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:37:26 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:37:26 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:37:26 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:37:26 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:37:26 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:37:26 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:37:26 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:37:26 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:37:26 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:37:26 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:37:26 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:37:26 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:37:26 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:37:26 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:37:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:37:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:37:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:37:26 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:37:26 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:37:26 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:37:26 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:37:26 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:37:26 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:37:26 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:37:26 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:37:26 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:37:26 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:37:26 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:37:26 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:37:26 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:37:26 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:37:26 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:37:26 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:37:26 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:37:26 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:37:26 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:37:26 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:37:26 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:37:26 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:37:26 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:37:26 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:37:26 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:37:26 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:37:26 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:37:26 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:37:26 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:37:26 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:37:26 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:37:26 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:37:26 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:37:26 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:37:26 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:37:26 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:37:26 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:37:26 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:37:26 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:37:26 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:37:26 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:37:26 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:37:26 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:37:26 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:37:26 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:37:26 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:37:26 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:37:26 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:37:26 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:37:26 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:37:26 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:37:26 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:37:26 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:37:26 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:37:26 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:37:26 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:37:26 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=33, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 33', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@267175f, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:37:26 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:37:26 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:37:26 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@707ec98d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7aaf5895]
2021-03-12 19:37:26 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:37:26 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:37:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:37:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:37:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:37:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:37:27 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:37:27 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:37:27 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:37:27 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:37:27 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:37:27 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:37:27 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:37:27 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:37:27 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:37:27 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:37:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23edee09]
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:37:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ed3e5c7]
2021-03-12 19:37:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12ee164e]
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:37:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:37:27 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:37:27 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:37:27 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:37:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aba6af0]
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:37:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37cb6148]
2021-03-12 19:37:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7510a460]
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:37:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:37:27 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:37:27 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:37:27 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:37:27 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:37:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c64bdd8]
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:37:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:37:27 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:37:27 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:37:27 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:37:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f1a9083]
2021-03-12 19:37:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@306ec35a]
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:37:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:37:27 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:37:27 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:37:27 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:37:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1501bed3]
2021-03-12 19:37:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d07cc9b]
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:37:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:37:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:37:27 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:37:27 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:37:27 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:37:27 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:37:27 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:37:27 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:37:27 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:37:27 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:37:27 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:37:27 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:37:27 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@e60e0ca
2021-03-12 19:37:27 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 6bd1b5c7-875d-4cc0-9076-0fda3c2ff12c (<unnamed>)
2021-03-12 19:37:27 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:37:27 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:37:27 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:37:27 DEBUG TransactionImpl:81 - begin
2021-03-12 19:37:27 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:37:27 DEBUG SQL:144 - insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:37:27 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: null value in column "fname" violates not-null constraint
  Detail: Failing row contains (5, null, null, charmander, charchar).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3200)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3806)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:194)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:179)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:636)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:629)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:624)
	at dev.lamp.daotests.ManagerTests.setup(ManagerTests.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 19:37:27 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 23502
2021-03-12 19:37:27 ERROR SqlExceptionHelper:142 - ERROR: null value in column "fname" violates not-null constraint
  Detail: Failing row contains (5, null, null, charmander, charchar).
2021-03-12 19:38:33 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:38:33 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:38:33 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:38:33 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:38:33 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:38:33 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:38:33 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:38:33 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:38:33 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:38:34 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:38:34 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:38:34 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:38:34 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:38:34 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:38:34 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a5e8571
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@73c2a5b7
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7c185207
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5f5f41cc
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5f5f41cc
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4bfb1dc7
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4bfb1dc7
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3a58c3f3
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@13c2d4e1
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@b733332
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@b733332
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@2ed3ee11
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ed3ee11
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@257414aa
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@257414aa
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1493ab69
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1493ab69
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@211dd027
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@211dd027
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@875b7af
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@875b7af
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6966b1f1
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6966b1f1
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3cd12cd
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3cd12cd
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c490755
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c490755
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@7db0f0f6
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7db0f0f6
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@3e44c54a
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3e44c54a
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@716bba20
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@b80b347
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@62ecdc7a
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@27d2a1d1
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@27d2a1d1
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@35136c33
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@35136c33
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6fdff530
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6fdff530
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5f2d144a
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5f2d144a
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e29ecd6
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@20889642
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2310a6ae
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@79dd0677
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4c2ebcfc
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@28bcf9ed
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28bcf9ed
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3290a021
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@342a9404
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@342a9404
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@1bdd079e
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1bdd079e
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@17f0d5b2
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26e7becd
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1aa695ec
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7a703f33
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a703f33
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c3f36b6
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f420776
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:38:34 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:38:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:38:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:38:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:38:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:38:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:38:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:38:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:38:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:38:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:38:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:38:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:38:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:38:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:38:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:38:34 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:38:34 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:38:34 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:38:34 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:38:34 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:38:34 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:38:35 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:38:35 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:38:35 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:38:35 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:38:35 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:38:35 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:38:35 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@70b8b506
2021-03-12 19:38:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@70b8b506
2021-03-12 19:38:35 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:38:35 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@707ec98d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@45fe358f]
2021-03-12 19:38:35 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:38:35 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:38:35 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:38:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:38:35 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:38:35 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:38:35 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:38:35 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:38:35 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:38:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:38:35 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:38:35 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:38:35 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:38:35 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:38:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:38:35 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:38:35 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:38:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:38:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:38:35 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:38:35 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:38:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:38:35 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:38:35 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:38:35 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:38:35 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:38:35 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:38:35 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:38:35 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:38:35 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:38:35 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:38:36 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:38:36 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:38:36 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:38:36 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:38:36 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:38:36 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:38:36 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:38:36 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:38:36 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:38:36 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:38:36 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:38:36 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:38:36 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:38:36 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:38:36 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:38:36 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:38:36 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:38:36 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:38:36 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:38:36 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:38:36 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:38:36 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:38:36 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:38:36 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:38:36 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:38:36 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:38:36 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:38:36 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:38:36 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:38:36 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:38:36 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:38:36 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:38:36 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:38:36 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:38:36 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:38:36 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:38:36 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:38:36 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:38:36 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:38:36 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:38:36 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:38:36 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:38:36 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:38:36 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:38:36 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=34, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 34', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@267175f, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:38:36 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:38:36 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:38:36 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@707ec98d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7aaf5895]
2021-03-12 19:38:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:38:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:38:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:38:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:38:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:38:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:38:36 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:38:36 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:38:36 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:38:36 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:38:36 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:38:36 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:38:36 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:38:36 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:38:36 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:38:36 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:38:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23edee09]
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:38:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ed3e5c7]
2021-03-12 19:38:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12ee164e]
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:38:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:38:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:38:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:38:36 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:38:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aba6af0]
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:38:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37cb6148]
2021-03-12 19:38:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7510a460]
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:38:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:38:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:38:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:38:36 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:38:36 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:38:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c64bdd8]
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:38:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:38:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:38:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:38:36 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:38:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f1a9083]
2021-03-12 19:38:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@306ec35a]
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:38:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:38:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:38:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:38:36 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:38:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1501bed3]
2021-03-12 19:38:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d07cc9b]
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:38:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:38:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:38:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:38:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:38:36 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:38:36 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:38:36 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:38:36 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:38:36 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:38:36 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:38:36 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:38:36 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:38:36 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@e60e0ca
2021-03-12 19:38:36 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: ea30f305-c532-449c-8b88-7ba9ddc057a7 (<unnamed>)
2021-03-12 19:38:36 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:38:36 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:38:36 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:38:36 DEBUG TransactionImpl:81 - begin
2021-03-12 19:38:36 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:38:37 DEBUG SQL:144 - insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:38:37 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: null value in column "fname" violates not-null constraint
  Detail: Failing row contains (6, null, null, charmander, charchar).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3200)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3806)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:194)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:179)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:636)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:629)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:624)
	at dev.lamp.daotests.ManagerTests.setup(ManagerTests.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 19:38:37 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 23502
2021-03-12 19:38:37 ERROR SqlExceptionHelper:142 - ERROR: null value in column "fname" violates not-null constraint
  Detail: Failing row contains (6, null, null, charmander, charchar).
2021-03-12 19:38:41 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:38:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:38:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:38:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:38:41 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:38:41 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:38:41 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:38:41 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:38:41 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:38:42 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:38:42 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:38:42 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:38:42 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:38:42 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:38:42 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:38:42 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:38:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:38:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:38:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:38:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:38:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:38:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:38:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:38:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:38:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:38:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:38:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:38:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:38:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:38:42 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:38:42 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:38:42 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:38:42 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:38:42 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:38:42 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:38:42 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:38:43 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:38:43 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:38:43 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:38:43 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:38:43 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:38:43 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:38:43 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:38:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:38:43 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:38:43 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 19:38:43 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:38:43 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:38:43 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:38:43 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:38:43 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:38:43 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:38:43 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:38:43 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:38:43 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:38:43 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:38:43 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:38:43 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:38:43 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:38:43 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:38:43 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:38:43 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:38:43 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:38:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:38:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:38:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:38:43 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:38:43 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:38:43 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:38:43 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:38:43 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:38:43 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:38:43 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:38:43 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:38:43 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:38:43 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:38:43 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:38:43 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:38:43 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:38:43 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:38:43 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:38:43 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:38:43 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:38:43 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:38:43 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:38:43 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:38:43 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:38:43 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:38:43 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:38:43 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:38:43 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:38:43 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:38:43 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:38:43 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:38:43 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:38:43 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:38:43 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:38:43 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:38:43 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:38:43 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:38:43 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:38:43 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:38:43 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:38:43 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:38:43 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:38:43 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:38:43 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:38:43 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:38:43 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:38:43 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:38:43 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:38:43 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:38:43 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:38:43 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:38:43 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:38:43 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:38:43 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:38:43 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:38:43 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:38:43 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:38:43 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:38:44 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:38:44 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=35, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 35', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51e11384, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:38:44 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:38:44 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:38:44 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22aa4376]
2021-03-12 19:38:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:38:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:38:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:38:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:38:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:38:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:38:44 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:38:44 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:38:44 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:38:44 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:38:44 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:38:44 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:38:44 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:38:44 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:38:44 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:38:44 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:38:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a66ab]
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:38:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16793313]
2021-03-12 19:38:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e501cb4]
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:38:44 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:38:44 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:38:44 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:38:44 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:38:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb6148]
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:38:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c64bdd8]
2021-03-12 19:38:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1beac4]
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:38:44 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:38:44 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:38:44 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:38:44 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:38:44 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:38:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b61dce]
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:38:44 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:38:44 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:38:44 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:38:44 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:38:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208dd958]
2021-03-12 19:38:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d46e32d]
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:38:44 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:38:44 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:38:44 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:38:44 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:38:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2a6e2a]
2021-03-12 19:38:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcb4152]
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:38:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:38:44 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:38:44 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:38:44 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:38:44 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:38:44 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:38:44 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:38:44 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:38:44 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:38:44 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:38:44 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:38:44 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:38:44 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef1123d
2021-03-12 19:38:44 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 4a70a626-5a2c-4d67-bac3-902192c42064 (<unnamed>)
2021-03-12 19:38:44 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:38:44 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:38:45 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where ( generatedAlias0.employeeUsername=:param0 ) and ( generatedAlias0.employeePassword=:param1 )
2021-03-12 19:38:45 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7e96dccd
2021-03-12 19:38:45 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where ( generatedAlias0.employeeUsername=:param0 ) and ( generatedAlias0.employeePassword=:param1 )
2021-03-12 19:38:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:38:45 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'employeeUsername'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'employeePassword'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

2021-03-12 19:38:45 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:38:45 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:38:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:38:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:38:45 DEBUG DotNode:696 - getDataType() : employeeUsername -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:38:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeeUsername -> employee0_.employee_username
2021-03-12 19:38:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:38:45 DEBUG DotNode:696 - getDataType() : employeePassword -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:38:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeePassword -> employee0_.employee_password
2021-03-12 19:38:45 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:38:45 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( and ( = ( employee0_.employee_username employee0_.employee_id employeeUsername ) ? ) ( = ( employee0_.employee_password employee0_.employee_id employeePassword ) ? ) ) ) )
2021-03-12 19:38:45 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | path: generatedAlias0.employeeUsername
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: employeeUsername
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
             | path: generatedAlias0.employeePassword
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: employeePassword
             \-ParameterNode

2021-03-12 19:38:45 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:38:45 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:38:45 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'employee0_.employee_username' {propertyName=employeeUsername,dereferenceType=PRIMITIVE,getPropertyPath=employeeUsername,path=generatedAlias0.employeeUsername,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  |  \-[IDENT] IdentNode: 'employeeUsername' {originalText=employeeUsername}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2bc6d7d5}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'employee0_.employee_password' {propertyName=employeePassword,dereferenceType=PRIMITIVE,getPropertyPath=employeePassword,path=generatedAlias0.employeePassword,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
             |  \-[IDENT] IdentNode: 'employeePassword' {originalText=employeePassword}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@2bc6d7d5}

2021-03-12 19:38:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:38:45 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where ( generatedAlias0.employeeUsername=:param0 ) and ( generatedAlias0.employeePassword=:param1 )
2021-03-12 19:38:45 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_username=? and employee0_.employee_password=?
2021-03-12 19:38:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:38:45 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_username=? and employee0_.employee_password=?
2021-03-12 19:38:45 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:38:45 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#4]
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#4]
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = Wast324
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#4]
2021-03-12 19:38:45 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:38:45 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.lamp.models.Employee.expenseList#4]
2021-03-12 19:38:45 DEBUG SQL:144 - select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:38:45 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [dev.lamp.models.Employee.expenseList#4]
2021-03-12 19:38:45 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.lamp.models.Employee.expenseList
2021-03-12 19:38:45 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.lamp.models.Employee.expenseList#4]
2021-03-12 19:38:45 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.lamp.models.Employee.expenseList
2021-03-12 19:38:45 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-03-12 19:38:45 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:38:45 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:38:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:38:45 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'employeeId'
          \-[NUM_INT] Node: '1'

2021-03-12 19:38:45 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:38:45 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:38:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:38:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:38:45 DEBUG DotNode:696 - getDataType() : employeeId -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:38:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeeId -> employee0_.employee_id
2021-03-12 19:38:45 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:38:45 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( = ( employee0_.employee_id employee0_.employee_id employeeId ) 1 ) ) )
2021-03-12 19:38:45 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          | path: generatedAlias0.employeeId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: employeeId
          \-LiteralNode

2021-03-12 19:38:45 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:38:45 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:38:45 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_.employee_id' {propertyName=employeeId,dereferenceType=PRIMITIVE,getPropertyPath=employeeId,path=generatedAlias0.employeeId,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'employeeId' {originalText=employeeId}
          \-[NUM_INT] LiteralNode: '1'

2021-03-12 19:38:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:38:45 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:38:45 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:38:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:38:45 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:38:45 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:38:45 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:38:45 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:38:45 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0
2021-03-12 19:38:45 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:38:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:38:45 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Employee'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:38:45 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:38:45 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:38:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:38:45 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:38:45 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) )
2021-03-12 19:38:45 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:38:45 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:38:45 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:38:45 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}

2021-03-12 19:38:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:38:45 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:38:45 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:38:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:38:45 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:38:45 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:38:45 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:38:45 DEBUG Loader:384 - Result set row: 1
2021-03-12 19:38:45 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#2]
2021-03-12 19:38:45 DEBUG Loader:384 - Result set row: 2
2021-03-12 19:38:45 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#3]
2021-03-12 19:38:45 DEBUG Loader:384 - Result set row: 3
2021-03-12 19:38:45 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#4]
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#2]
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#2]
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#3]
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#3]
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#4]
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = Wast324
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:38:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#4]
2021-03-12 19:38:45 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:40:08 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:40:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:40:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:40:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:40:08 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:40:08 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:40:08 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:40:08 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:40:08 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:40:08 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:40:08 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:40:08 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:40:08 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:40:08 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:40:09 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:40:09 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:40:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:40:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:40:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:40:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:40:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:40:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:40:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:40:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:40:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:40:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:40:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:40:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:40:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:40:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:40:09 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:40:09 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:40:09 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:40:09 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:40:09 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:40:09 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:40:09 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:40:09 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:40:09 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:40:10 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:40:10 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:40:10 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:40:10 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:40:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:40:10 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:40:10 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 19:40:10 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:40:10 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:40:10 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:40:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:40:10 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:40:10 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:40:10 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:40:10 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:40:10 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:40:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:40:10 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:40:10 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:40:10 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:40:10 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:40:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:40:10 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:40:10 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:40:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:40:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:40:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:40:10 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:40:10 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:40:10 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:40:10 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:40:10 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:40:10 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:40:10 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:40:10 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:40:10 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:40:10 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:40:10 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:40:10 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:40:10 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:40:10 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:40:10 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:40:10 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:40:10 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:40:10 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:40:10 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:40:10 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:40:10 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:40:10 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:40:10 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:40:10 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:40:10 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:40:10 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:40:10 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:40:10 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:40:10 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:40:10 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:40:10 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:40:10 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:40:10 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:40:10 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:40:10 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:40:10 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:40:10 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:40:10 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:40:10 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:40:10 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:40:10 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:40:10 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:40:10 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:40:10 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:40:10 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:40:10 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:40:10 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:40:10 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:40:10 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:40:10 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:40:10 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:40:10 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:40:10 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:40:10 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:40:10 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:40:10 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:40:10 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=36, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 36', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51e11384, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:40:10 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:40:10 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:40:10 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22aa4376]
2021-03-12 19:40:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:40:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:40:11 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:40:11 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:40:11 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:40:11 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:40:11 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:40:11 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:40:11 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:40:11 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:40:11 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:40:11 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:40:11 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:40:11 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:40:11 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:40:11 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:40:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a66ab]
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:40:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16793313]
2021-03-12 19:40:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e501cb4]
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:40:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:40:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:40:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:40:11 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:40:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb6148]
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:40:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c64bdd8]
2021-03-12 19:40:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1beac4]
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:40:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:40:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:40:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:40:11 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:40:11 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:40:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b61dce]
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:40:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:40:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:40:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:40:11 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:40:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208dd958]
2021-03-12 19:40:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d46e32d]
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:40:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:40:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:40:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:40:11 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:40:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2a6e2a]
2021-03-12 19:40:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcb4152]
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:40:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:40:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:40:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:40:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:40:11 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:40:11 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:40:11 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:40:11 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:40:11 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:40:11 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:40:11 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:40:11 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:40:11 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef1123d
2021-03-12 19:40:11 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 6ce15a2e-8d2a-4a0c-9409-600cf5baf2dd (<unnamed>)
2021-03-12 19:40:11 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:40:11 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:40:11 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where ( generatedAlias0.employeeUsername=:param0 ) and ( generatedAlias0.employeePassword=:param1 )
2021-03-12 19:40:11 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7e96dccd
2021-03-12 19:40:11 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where ( generatedAlias0.employeeUsername=:param0 ) and ( generatedAlias0.employeePassword=:param1 )
2021-03-12 19:40:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:40:11 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'employeeUsername'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'employeePassword'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

2021-03-12 19:40:11 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:40:11 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:40:11 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:40:11 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:40:11 DEBUG DotNode:696 - getDataType() : employeeUsername -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:40:11 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeeUsername -> employee0_.employee_username
2021-03-12 19:40:11 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:40:11 DEBUG DotNode:696 - getDataType() : employeePassword -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:40:11 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeePassword -> employee0_.employee_password
2021-03-12 19:40:11 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:40:11 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( and ( = ( employee0_.employee_username employee0_.employee_id employeeUsername ) ? ) ( = ( employee0_.employee_password employee0_.employee_id employeePassword ) ? ) ) ) )
2021-03-12 19:40:11 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | path: generatedAlias0.employeeUsername
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: employeeUsername
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
             | path: generatedAlias0.employeePassword
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: employeePassword
             \-ParameterNode

2021-03-12 19:40:11 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:40:11 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:40:11 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'employee0_.employee_username' {propertyName=employeeUsername,dereferenceType=PRIMITIVE,getPropertyPath=employeeUsername,path=generatedAlias0.employeeUsername,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  |  \-[IDENT] IdentNode: 'employeeUsername' {originalText=employeeUsername}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2bc6d7d5}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'employee0_.employee_password' {propertyName=employeePassword,dereferenceType=PRIMITIVE,getPropertyPath=employeePassword,path=generatedAlias0.employeePassword,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
             |  \-[IDENT] IdentNode: 'employeePassword' {originalText=employeePassword}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@2bc6d7d5}

2021-03-12 19:40:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:40:11 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where ( generatedAlias0.employeeUsername=:param0 ) and ( generatedAlias0.employeePassword=:param1 )
2021-03-12 19:40:11 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_username=? and employee0_.employee_password=?
2021-03-12 19:40:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:40:11 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_username=? and employee0_.employee_password=?
2021-03-12 19:40:11 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:40:11 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#4]
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#4]
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = Wast324
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#4]
2021-03-12 19:40:11 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:40:11 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.lamp.models.Employee.expenseList#4]
2021-03-12 19:40:11 DEBUG SQL:144 - select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:40:11 DEBUG ResultSetProcessorImpl:193 - Preparing collection initializer : [dev.lamp.models.Employee.expenseList#4]
2021-03-12 19:40:11 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.lamp.models.Employee.expenseList
2021-03-12 19:40:11 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.lamp.models.Employee.expenseList#4]
2021-03-12 19:40:11 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.lamp.models.Employee.expenseList
2021-03-12 19:40:11 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-03-12 19:40:11 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:40:11 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:40:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:40:11 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'employeeId'
          \-[NUM_INT] Node: '1'

2021-03-12 19:40:11 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:40:11 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:40:11 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:40:11 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:40:11 DEBUG DotNode:696 - getDataType() : employeeId -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:40:11 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeeId -> employee0_.employee_id
2021-03-12 19:40:11 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:40:11 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( = ( employee0_.employee_id employee0_.employee_id employeeId ) 1 ) ) )
2021-03-12 19:40:11 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          | path: generatedAlias0.employeeId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: employeeId
          \-LiteralNode

2021-03-12 19:40:11 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:40:11 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:40:11 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_.employee_id' {propertyName=employeeId,dereferenceType=PRIMITIVE,getPropertyPath=employeeId,path=generatedAlias0.employeeId,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'employeeId' {originalText=employeeId}
          \-[NUM_INT] LiteralNode: '1'

2021-03-12 19:40:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:40:11 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:40:11 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:40:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:40:11 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:40:11 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:40:11 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:40:11 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:40:11 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0
2021-03-12 19:40:11 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:40:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:40:11 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Employee'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:40:11 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:40:11 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:40:11 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:40:11 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:40:11 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) )
2021-03-12 19:40:11 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:40:11 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:40:11 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:40:11 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}

2021-03-12 19:40:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:40:11 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:40:11 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:40:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:40:11 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:40:11 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:40:11 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:40:11 DEBUG Loader:384 - Result set row: 1
2021-03-12 19:40:11 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#2]
2021-03-12 19:40:11 DEBUG Loader:384 - Result set row: 2
2021-03-12 19:40:11 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#3]
2021-03-12 19:40:11 DEBUG Loader:384 - Result set row: 3
2021-03-12 19:40:11 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#4]
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#2]
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#2]
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#3]
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#3]
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#4]
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = Wast324
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:40:11 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#4]
2021-03-12 19:40:11 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:41:10 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:41:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:41:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:41:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:41:10 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:41:10 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:41:10 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:41:10 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:41:10 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:41:11 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:41:11 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:41:11 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:41:11 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:41:11 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:41:11 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:41:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:41:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:41:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:41:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:41:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:41:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:41:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:41:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:41:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:41:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:41:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:41:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:41:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:41:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:41:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:41:11 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:41:11 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:41:11 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:41:11 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:41:11 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:41:11 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:41:12 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:41:12 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:41:12 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:41:12 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:41:12 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:41:12 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:41:12 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:41:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:41:12 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:41:12 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 19:41:12 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:41:12 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:41:12 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:41:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:41:12 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:41:12 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:41:12 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:41:12 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:41:12 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:41:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:41:12 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:41:12 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:41:12 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:41:12 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:41:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:41:12 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:41:12 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:41:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:41:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:41:12 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:41:12 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:41:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:41:12 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:41:12 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:41:12 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:41:12 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:41:12 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:41:12 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:41:12 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:41:12 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:41:12 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:41:12 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:41:12 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:41:12 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:41:12 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:41:12 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:41:12 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:41:12 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:41:12 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:41:12 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:41:12 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:41:12 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:41:12 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:41:12 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:41:12 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:41:12 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:41:12 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:41:12 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:41:12 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:41:12 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:41:12 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:41:12 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:41:12 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:41:12 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:41:12 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:41:12 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:41:12 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:41:12 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:41:12 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:41:12 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:41:12 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:41:12 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:41:12 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:41:12 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:41:12 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:41:12 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:41:12 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:41:12 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:41:12 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:41:12 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:41:12 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:41:12 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:41:12 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:41:12 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:41:12 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:41:12 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=37, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 37', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51e11384, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:41:12 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:41:12 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:41:12 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22aa4376]
2021-03-12 19:41:13 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:41:13 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:41:13 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:41:13 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:41:13 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:41:13 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:41:13 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:41:13 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:41:13 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:41:13 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:41:13 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:41:13 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:41:13 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:41:13 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:41:13 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:41:13 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:41:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a66ab]
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:41:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16793313]
2021-03-12 19:41:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e501cb4]
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:41:13 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:41:13 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:41:13 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:41:13 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:41:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb6148]
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:41:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c64bdd8]
2021-03-12 19:41:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1beac4]
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:41:13 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:41:13 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:41:13 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:41:13 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:41:13 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:41:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b61dce]
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:41:13 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:41:13 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:41:13 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:41:13 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:41:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208dd958]
2021-03-12 19:41:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d46e32d]
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:41:13 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:41:13 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:41:13 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:41:13 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:41:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2a6e2a]
2021-03-12 19:41:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcb4152]
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:41:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:41:13 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:41:13 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:41:13 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:41:13 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:41:13 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:41:13 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:41:13 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:41:13 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:41:13 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:41:13 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:41:13 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:41:13 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef1123d
2021-03-12 19:41:13 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: c36402b7-3290-4de6-92dd-56f107210ee2 (<unnamed>)
2021-03-12 19:41:13 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:41:13 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:41:13 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where ( generatedAlias0.employeeUsername=:param0 ) and ( generatedAlias0.employeePassword=:param1 )
2021-03-12 19:41:13 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7e96dccd
2021-03-12 19:41:13 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where ( generatedAlias0.employeeUsername=:param0 ) and ( generatedAlias0.employeePassword=:param1 )
2021-03-12 19:41:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:41:13 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'employeeUsername'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'employeePassword'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

2021-03-12 19:41:13 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:41:13 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:41:13 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:41:13 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:41:13 DEBUG DotNode:696 - getDataType() : employeeUsername -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:41:13 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeeUsername -> employee0_.employee_username
2021-03-12 19:41:13 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:41:13 DEBUG DotNode:696 - getDataType() : employeePassword -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:41:13 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeePassword -> employee0_.employee_password
2021-03-12 19:41:13 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:41:13 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( and ( = ( employee0_.employee_username employee0_.employee_id employeeUsername ) ? ) ( = ( employee0_.employee_password employee0_.employee_id employeePassword ) ? ) ) ) )
2021-03-12 19:41:13 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | path: generatedAlias0.employeeUsername
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: employeeUsername
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
             | path: generatedAlias0.employeePassword
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: employeePassword
             \-ParameterNode

2021-03-12 19:41:13 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:41:13 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:41:13 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'employee0_.employee_username' {propertyName=employeeUsername,dereferenceType=PRIMITIVE,getPropertyPath=employeeUsername,path=generatedAlias0.employeeUsername,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  |  \-[IDENT] IdentNode: 'employeeUsername' {originalText=employeeUsername}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2bc6d7d5}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'employee0_.employee_password' {propertyName=employeePassword,dereferenceType=PRIMITIVE,getPropertyPath=employeePassword,path=generatedAlias0.employeePassword,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
             |  \-[IDENT] IdentNode: 'employeePassword' {originalText=employeePassword}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@2bc6d7d5}

2021-03-12 19:41:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:41:13 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where ( generatedAlias0.employeeUsername=:param0 ) and ( generatedAlias0.employeePassword=:param1 )
2021-03-12 19:41:13 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_username=? and employee0_.employee_password=?
2021-03-12 19:41:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:41:13 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_username=? and employee0_.employee_password=?
2021-03-12 19:41:13 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:41:13 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#4]
2021-03-12 19:41:13 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#4]
2021-03-12 19:41:13 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:41:13 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:13 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = Wast324
2021-03-12 19:41:13 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:13 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:41:13 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:13 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:41:13 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:13 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:41:13 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:13 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#4]
2021-03-12 19:41:13 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:41:13 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:41:13 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:41:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:41:13 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'employeeId'
          \-[NUM_INT] Node: '1'

2021-03-12 19:41:13 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:41:13 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:41:13 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:41:13 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:41:13 DEBUG DotNode:696 - getDataType() : employeeId -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:41:13 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeeId -> employee0_.employee_id
2021-03-12 19:41:13 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:41:13 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( = ( employee0_.employee_id employee0_.employee_id employeeId ) 1 ) ) )
2021-03-12 19:41:13 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          | path: generatedAlias0.employeeId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: employeeId
          \-LiteralNode

2021-03-12 19:41:13 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:41:13 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:41:13 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_.employee_id' {propertyName=employeeId,dereferenceType=PRIMITIVE,getPropertyPath=employeeId,path=generatedAlias0.employeeId,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'employeeId' {originalText=employeeId}
          \-[NUM_INT] LiteralNode: '1'

2021-03-12 19:41:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:41:13 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:41:13 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:41:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:41:13 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:41:14 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:41:14 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:41:14 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:41:14 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0
2021-03-12 19:41:14 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:41:14 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:41:14 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Employee'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:41:14 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:41:14 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:41:14 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:41:14 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:41:14 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) )
2021-03-12 19:41:14 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:41:14 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:41:14 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:41:14 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}

2021-03-12 19:41:14 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:41:14 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:41:14 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:41:14 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:41:14 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:41:14 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:41:14 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:41:14 DEBUG Loader:384 - Result set row: 1
2021-03-12 19:41:14 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#2]
2021-03-12 19:41:14 DEBUG Loader:384 - Result set row: 2
2021-03-12 19:41:14 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#3]
2021-03-12 19:41:14 DEBUG Loader:384 - Result set row: 3
2021-03-12 19:41:14 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#4]
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#2]
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#2]
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#3]
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#3]
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#4]
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = Wast324
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:41:14 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#4]
2021-03-12 19:41:14 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:41:39 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:41:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:41:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:41:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:41:39 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:41:39 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:41:40 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:41:40 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:41:40 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:41:40 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:41:40 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:41:40 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:41:40 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:41:40 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:41:40 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a5e8571
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@73c2a5b7
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7c185207
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5f5f41cc
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5f5f41cc
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4bfb1dc7
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4bfb1dc7
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3a58c3f3
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@13c2d4e1
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@b733332
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@b733332
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@2ed3ee11
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ed3ee11
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@257414aa
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@257414aa
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1493ab69
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1493ab69
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@211dd027
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@211dd027
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@875b7af
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@875b7af
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6966b1f1
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6966b1f1
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3cd12cd
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3cd12cd
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c490755
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c490755
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@7db0f0f6
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7db0f0f6
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@3e44c54a
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3e44c54a
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@716bba20
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@b80b347
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@62ecdc7a
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@27d2a1d1
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@27d2a1d1
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@35136c33
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@35136c33
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6fdff530
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6fdff530
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5f2d144a
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5f2d144a
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e29ecd6
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@20889642
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2310a6ae
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@79dd0677
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4c2ebcfc
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@28bcf9ed
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28bcf9ed
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3290a021
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@342a9404
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@342a9404
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@1bdd079e
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1bdd079e
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@17f0d5b2
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26e7becd
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1aa695ec
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7a703f33
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a703f33
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c3f36b6
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f420776
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:41:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:41:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:41:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:41:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:41:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:41:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:41:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:41:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:41:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:41:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:41:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:41:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:41:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:41:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:41:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:41:41 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:41:41 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:41:41 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:41:41 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:41:41 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:41:41 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:41:41 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:41:41 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:41:41 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:41:41 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:41:41 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:41:42 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@70b8b506
2021-03-12 19:41:42 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@70b8b506
2021-03-12 19:41:42 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:41:42 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@707ec98d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@45fe358f]
2021-03-12 19:41:42 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:41:42 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:41:42 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:41:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:41:42 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:41:42 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:41:42 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:41:42 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:41:42 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:41:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:41:42 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:41:42 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:41:42 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:41:42 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:41:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:41:42 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:41:42 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:41:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:41:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:41:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:41:42 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:41:42 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:41:42 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:41:42 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:41:42 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:41:42 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:41:42 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:41:42 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:41:42 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:41:42 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:41:42 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:41:42 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:41:42 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:41:42 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:41:42 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:41:42 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:41:42 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:41:42 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:41:42 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:41:42 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:41:42 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:41:42 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:41:42 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:41:42 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:41:42 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:41:42 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:41:42 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:41:42 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:41:42 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:41:42 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:41:42 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:41:42 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:41:42 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:41:42 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:41:42 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:41:42 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:41:42 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:41:42 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:41:42 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:41:42 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:41:42 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:41:42 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:41:42 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:41:42 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:41:42 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:41:42 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:41:42 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:41:42 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:41:42 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:41:42 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:41:42 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:41:42 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:41:42 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:41:42 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:41:42 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:41:42 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:41:42 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=38, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 38', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@267175f, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:41:42 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:41:42 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:41:42 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@707ec98d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7aaf5895]
2021-03-12 19:41:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:41:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:41:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:41:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:41:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:41:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:41:42 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:41:42 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:41:42 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:41:42 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:41:42 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:41:42 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:41:42 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:41:42 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:41:42 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:41:42 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:41:42 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:41:42 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:41:42 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:41:42 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:41:42 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:41:42 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:41:42 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:41:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23edee09]
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:41:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ed3e5c7]
2021-03-12 19:41:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12ee164e]
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:41:43 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:41:43 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:41:43 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:41:43 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:41:43 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:41:43 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:41:43 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:41:43 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:41:43 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:41:43 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:41:43 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:41:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aba6af0]
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:41:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37cb6148]
2021-03-12 19:41:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7510a460]
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:41:43 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:41:43 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:41:43 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:41:43 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:41:43 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:41:43 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:41:43 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:41:43 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:41:43 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:41:43 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:41:43 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:41:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c64bdd8]
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:41:43 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:41:43 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:41:43 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:41:43 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:41:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f1a9083]
2021-03-12 19:41:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@306ec35a]
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:41:43 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:41:43 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:41:43 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:41:43 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:41:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1501bed3]
2021-03-12 19:41:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d07cc9b]
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:41:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:41:43 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:41:43 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:41:43 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:41:43 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:41:43 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:41:43 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:41:43 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:41:43 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:41:43 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:41:43 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:41:43 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:41:43 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@e60e0ca
2021-03-12 19:41:43 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 0c6692db-7de6-4112-8296-b4c130512319 (<unnamed>)
2021-03-12 19:41:43 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:41:43 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:41:43 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:41:43 DEBUG TransactionImpl:81 - begin
2021-03-12 19:41:43 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:41:43 DEBUG SQL:144 - insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:41:43 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: null value in column "fname" violates not-null constraint
  Detail: Failing row contains (7, null, null, charmander, charchar).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3200)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3806)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:194)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:179)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:636)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:629)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:624)
	at dev.lamp.daotests.ManagerTests.setup(ManagerTests.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 19:41:43 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 23502
2021-03-12 19:41:43 ERROR SqlExceptionHelper:142 - ERROR: null value in column "fname" violates not-null constraint
  Detail: Failing row contains (7, null, null, charmander, charchar).
2021-03-12 19:43:42 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:43:42 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:43:42 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:43:42 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:43:42 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:43:42 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:43:42 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:43:42 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:43:42 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:43:42 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:43:42 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:43:42 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:43:42 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:43:42 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:43:42 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a5e8571
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@73c2a5b7
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7c185207
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5f5f41cc
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5f5f41cc
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4bfb1dc7
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4bfb1dc7
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3a58c3f3
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@13c2d4e1
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@b733332
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@b733332
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@2ed3ee11
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ed3ee11
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@257414aa
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@257414aa
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1493ab69
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1493ab69
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@211dd027
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@211dd027
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@875b7af
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@875b7af
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6966b1f1
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6966b1f1
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3cd12cd
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3cd12cd
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c490755
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c490755
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@7db0f0f6
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7db0f0f6
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@3e44c54a
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3e44c54a
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@716bba20
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@b80b347
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@62ecdc7a
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@27d2a1d1
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@27d2a1d1
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@35136c33
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@35136c33
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6fdff530
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6fdff530
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5f2d144a
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5f2d144a
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e29ecd6
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@20889642
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2310a6ae
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@79dd0677
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4c2ebcfc
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@28bcf9ed
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28bcf9ed
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3290a021
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@342a9404
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@342a9404
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@1bdd079e
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1bdd079e
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@17f0d5b2
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26e7becd
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1aa695ec
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7a703f33
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a703f33
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c3f36b6
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f420776
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:43:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:43:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:43:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:43:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:43:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:43:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:43:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:43:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:43:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:43:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:43:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:43:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:43:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:43:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:43:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:43:43 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:43:43 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:43:43 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:43:43 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:43:43 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:43:43 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:43:43 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:43:43 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:43:43 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:43:43 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:43:43 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:43:44 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:43:44 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@70b8b506
2021-03-12 19:43:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@70b8b506
2021-03-12 19:43:44 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:43:44 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@707ec98d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@45fe358f]
2021-03-12 19:43:44 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:43:44 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:43:44 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:43:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:43:44 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:43:44 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:43:44 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:43:44 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:43:44 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:43:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:43:44 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:43:44 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:43:44 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:43:44 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:43:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:43:44 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:43:44 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:43:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:43:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:43:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:43:44 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:43:44 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:43:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:43:44 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:43:44 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:43:44 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:43:44 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:43:44 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:43:44 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:43:44 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:43:44 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:43:44 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:43:44 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:43:44 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:43:44 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:43:44 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:43:44 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:43:44 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:43:44 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:43:44 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:43:44 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:43:44 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:43:44 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:43:44 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:43:44 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:43:44 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:43:44 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:43:44 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:43:44 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:43:44 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:43:44 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:43:44 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:43:44 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:43:44 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:43:44 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:43:44 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:43:44 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:43:44 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:43:44 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:43:44 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:43:44 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:43:44 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:43:44 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:43:44 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:43:44 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:43:44 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:43:44 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:43:44 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:43:44 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:43:44 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:43:44 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:43:44 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:43:44 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:43:44 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:43:44 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:43:44 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:43:44 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=39, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 39', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@267175f, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:43:44 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:43:44 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:43:44 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@707ec98d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7aaf5895]
2021-03-12 19:43:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:43:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:43:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:43:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:43:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:43:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:43:45 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:43:45 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:43:45 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:43:45 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:43:45 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:43:45 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:43:45 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:43:45 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:43:45 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:43:45 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:43:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23edee09]
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:43:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ed3e5c7]
2021-03-12 19:43:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12ee164e]
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:43:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:43:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:43:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:43:45 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:43:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aba6af0]
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:43:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37cb6148]
2021-03-12 19:43:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7510a460]
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:43:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:43:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:43:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:43:45 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:43:45 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:43:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c64bdd8]
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:43:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:43:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:43:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:43:45 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:43:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f1a9083]
2021-03-12 19:43:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@306ec35a]
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:43:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:43:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:43:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:43:45 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:43:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1501bed3]
2021-03-12 19:43:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d07cc9b]
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:43:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:43:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:43:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:43:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:43:45 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:43:45 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:43:45 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:43:45 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:43:45 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:43:45 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:43:45 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:43:45 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:43:45 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@e60e0ca
2021-03-12 19:43:45 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 10428882-bc22-4441-b4bc-aa7b75fef3f0 (<unnamed>)
2021-03-12 19:43:45 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:43:45 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:43:45 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Manager as generatedAlias0 where ( generatedAlias0.managerUsername=:param0 ) and ( generatedAlias0.managerPassword=:param1 )
2021-03-12 19:43:45 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@739639e8
2021-03-12 19:43:45 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Manager as generatedAlias0 where ( generatedAlias0.managerUsername=:param0 ) and ( generatedAlias0.managerPassword=:param1 )
2021-03-12 19:43:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:43:45 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Manager'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'managerUsername'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'managerPassword'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

2021-03-12 19:43:45 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:43:45 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Manager (generatedAlias0) -> manager0_
2021-03-12 19:43:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> manager0_.manager_id
2021-03-12 19:43:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> manager0_.manager_id
2021-03-12 19:43:45 DEBUG DotNode:696 - getDataType() : managerUsername -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:43:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.managerUsername -> manager0_.manager_username
2021-03-12 19:43:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> manager0_.manager_id
2021-03-12 19:43:45 DEBUG DotNode:696 - getDataType() : managerPassword -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:43:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.managerPassword -> manager0_.manager_password
2021-03-12 19:43:45 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:43:45 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} manager0_.manager_id ) ( FromClause{level=1} manager manager0_ ) ( where ( and ( = ( manager0_.manager_username manager0_.manager_id managerUsername ) ? ) ( = ( manager0_.manager_password manager0_.manager_id managerPassword ) ? ) ) ) )
2021-03-12 19:43:45 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Manager): [manager]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
          |  | path: generatedAlias0.managerUsername
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: managerUsername
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
             | path: generatedAlias0.managerPassword
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: managerPassword
             \-ParameterNode

2021-03-12 19:43:45 DEBUG JoinProcessor:304 - Using FROM fragment [manager manager0_]
2021-03-12 19:43:45 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:43:45 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (manager)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'manager0_.manager_id as manager_1_2_' {alias=generatedAlias0, className=dev.lamp.models.Manager, tableAlias=manager0_}
    |  \-[SQL_TOKEN] SqlFragment: 'manager0_.fname as fname2_2_, manager0_.lname as lname3_2_, manager0_.manager_password as manager_4_2_, manager0_.manager_username as manager_5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[manager0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'manager manager0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=manager,tableAlias=manager0_,origin=null,columns={,className=dev.lamp.models.Manager}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'manager0_.manager_username' {propertyName=managerUsername,dereferenceType=PRIMITIVE,getPropertyPath=managerUsername,path=generatedAlias0.managerUsername,tableAlias=manager0_,className=dev.lamp.models.Manager,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'manager0_.manager_id' {alias=generatedAlias0, className=dev.lamp.models.Manager, tableAlias=manager0_}
          |  |  \-[IDENT] IdentNode: 'managerUsername' {originalText=managerUsername}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@62ac385e}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'manager0_.manager_password' {propertyName=managerPassword,dereferenceType=PRIMITIVE,getPropertyPath=managerPassword,path=generatedAlias0.managerPassword,tableAlias=manager0_,className=dev.lamp.models.Manager,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'manager0_.manager_id' {alias=generatedAlias0, className=dev.lamp.models.Manager, tableAlias=manager0_}
             |  \-[IDENT] IdentNode: 'managerPassword' {originalText=managerPassword}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@62ac385e}

2021-03-12 19:43:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:43:45 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Manager as generatedAlias0 where ( generatedAlias0.managerUsername=:param0 ) and ( generatedAlias0.managerPassword=:param1 )
2021-03-12 19:43:45 DEBUG QueryTranslatorImpl:259 - SQL: select manager0_.manager_id as manager_1_2_, manager0_.fname as fname2_2_, manager0_.lname as lname3_2_, manager0_.manager_password as manager_4_2_, manager0_.manager_username as manager_5_2_ from manager manager0_ where manager0_.manager_username=? and manager0_.manager_password=?
2021-03-12 19:43:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:43:45 DEBUG SQL:144 - select manager0_.manager_id as manager_1_2_, manager0_.fname as fname2_2_, manager0_.lname as lname3_2_, manager0_.manager_password as manager_4_2_, manager0_.manager_username as manager_5_2_ from manager manager0_ where manager0_.manager_username=? and manager0_.manager_password=?
2021-03-12 19:43:45 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:47:54 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:47:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:47:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:47:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:47:54 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:47:54 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:47:54 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:47:54 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:47:54 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:47:55 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:47:55 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:47:55 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:47:55 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:47:55 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:47:55 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a5e8571
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@73c2a5b7
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7c185207
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5f5f41cc
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5f5f41cc
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4bfb1dc7
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4bfb1dc7
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3a58c3f3
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@13c2d4e1
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@b733332
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@b733332
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@2ed3ee11
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ed3ee11
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@257414aa
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@257414aa
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1493ab69
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1493ab69
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@211dd027
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@211dd027
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@875b7af
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@875b7af
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6966b1f1
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6966b1f1
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3cd12cd
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3cd12cd
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c490755
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c490755
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@7db0f0f6
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7db0f0f6
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@3e44c54a
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3e44c54a
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@716bba20
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@b80b347
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@62ecdc7a
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@27d2a1d1
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@27d2a1d1
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@35136c33
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@35136c33
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6fdff530
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6fdff530
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5f2d144a
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5f2d144a
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e29ecd6
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@20889642
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2310a6ae
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@79dd0677
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4c2ebcfc
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@28bcf9ed
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28bcf9ed
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3290a021
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@342a9404
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@342a9404
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@1bdd079e
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1bdd079e
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@17f0d5b2
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26e7becd
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1aa695ec
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7a703f33
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a703f33
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c3f36b6
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f420776
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:47:55 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:47:55 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:47:55 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:47:55 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:47:55 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:47:55 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:47:55 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:47:55 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:47:55 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:47:55 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:47:55 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:47:55 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:47:55 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:47:55 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:47:55 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:47:55 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:47:55 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:47:55 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:47:55 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:47:55 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:47:55 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:47:55 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:47:55 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:47:55 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:47:55 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:47:56 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:47:56 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:47:56 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@70b8b506
2021-03-12 19:47:56 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@70b8b506
2021-03-12 19:47:56 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:47:56 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@707ec98d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@45fe358f]
2021-03-12 19:47:56 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:47:56 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:47:56 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:47:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:47:56 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:47:56 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:47:56 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:47:56 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:47:56 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:47:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:47:56 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:47:56 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:47:56 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:47:56 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:47:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:47:56 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:47:56 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:47:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:47:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:47:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:47:56 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:47:56 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:47:56 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:47:56 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:47:56 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:47:56 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:47:56 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:47:56 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:47:56 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:47:56 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:47:56 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:47:56 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:47:56 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:47:56 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:47:56 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:47:56 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:47:56 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:47:56 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:47:56 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:47:56 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:47:56 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:47:56 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:47:56 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:47:56 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:47:56 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:47:56 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:47:56 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:47:56 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:47:56 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:47:56 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:47:56 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:47:56 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:47:56 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:47:56 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:47:56 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:47:56 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:47:56 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:47:56 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:47:56 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:47:56 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:47:56 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:47:56 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:47:56 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:47:56 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:47:56 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:47:56 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:47:56 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:47:56 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:47:56 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:47:56 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:47:56 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:47:56 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:47:56 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:47:56 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:47:56 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:47:56 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:47:56 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=40, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 40', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@267175f, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:47:56 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:47:56 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:47:56 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@707ec98d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7aaf5895]
2021-03-12 19:47:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:47:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:47:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:47:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:47:57 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:47:57 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:47:57 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:47:57 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:47:57 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:47:57 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:47:57 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:47:57 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:47:57 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:47:57 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:47:57 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:47:57 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:47:57 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23edee09]
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:47:57 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ed3e5c7]
2021-03-12 19:47:57 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12ee164e]
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:47:57 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:47:57 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:47:57 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:47:57 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:47:57 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aba6af0]
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:47:57 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37cb6148]
2021-03-12 19:47:57 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7510a460]
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:47:57 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:47:57 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:47:57 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:47:57 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:47:57 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:47:57 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c64bdd8]
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:47:57 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:47:57 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:47:57 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:47:57 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:47:57 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f1a9083]
2021-03-12 19:47:57 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@306ec35a]
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:47:57 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:47:57 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:47:57 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:47:57 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:47:57 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1501bed3]
2021-03-12 19:47:57 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d07cc9b]
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:47:57 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:47:57 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:47:57 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:47:57 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:47:57 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:47:57 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:47:57 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:47:57 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:47:57 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:47:57 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:47:57 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:47:57 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:47:57 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@e60e0ca
2021-03-12 19:47:57 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 60cb09d7-bee0-4d39-b4b4-5a1de4c6f615 (<unnamed>)
2021-03-12 19:47:57 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:47:57 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:47:57 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Manager as generatedAlias0 where ( generatedAlias0.managerUsername=:param0 ) and ( generatedAlias0.managerPassword=:param1 )
2021-03-12 19:47:57 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1cac9a3e
2021-03-12 19:47:57 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Manager as generatedAlias0 where ( generatedAlias0.managerUsername=:param0 ) and ( generatedAlias0.managerPassword=:param1 )
2021-03-12 19:47:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:47:57 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Manager'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'managerUsername'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'managerPassword'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

2021-03-12 19:47:57 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:47:57 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Manager (generatedAlias0) -> manager0_
2021-03-12 19:47:57 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> manager0_.manager_id
2021-03-12 19:47:57 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> manager0_.manager_id
2021-03-12 19:47:57 DEBUG DotNode:696 - getDataType() : managerUsername -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:47:57 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.managerUsername -> manager0_.manager_username
2021-03-12 19:47:57 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> manager0_.manager_id
2021-03-12 19:47:57 DEBUG DotNode:696 - getDataType() : managerPassword -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:47:57 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.managerPassword -> manager0_.manager_password
2021-03-12 19:47:57 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:47:57 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} manager0_.manager_id ) ( FromClause{level=1} manager manager0_ ) ( where ( and ( = ( manager0_.manager_username manager0_.manager_id managerUsername ) ? ) ( = ( manager0_.manager_password manager0_.manager_id managerPassword ) ? ) ) ) )
2021-03-12 19:47:57 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Manager): [manager]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
          |  | path: generatedAlias0.managerUsername
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: managerUsername
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
             | path: generatedAlias0.managerPassword
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: managerPassword
             \-ParameterNode

2021-03-12 19:47:57 DEBUG JoinProcessor:304 - Using FROM fragment [manager manager0_]
2021-03-12 19:47:57 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:47:57 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (manager)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'manager0_.manager_id as manager_1_2_' {alias=generatedAlias0, className=dev.lamp.models.Manager, tableAlias=manager0_}
    |  \-[SQL_TOKEN] SqlFragment: 'manager0_.fname as fname2_2_, manager0_.lname as lname3_2_, manager0_.manager_password as manager_4_2_, manager0_.manager_username as manager_5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[manager0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'manager manager0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=manager,tableAlias=manager0_,origin=null,columns={,className=dev.lamp.models.Manager}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'manager0_.manager_username' {propertyName=managerUsername,dereferenceType=PRIMITIVE,getPropertyPath=managerUsername,path=generatedAlias0.managerUsername,tableAlias=manager0_,className=dev.lamp.models.Manager,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'manager0_.manager_id' {alias=generatedAlias0, className=dev.lamp.models.Manager, tableAlias=manager0_}
          |  |  \-[IDENT] IdentNode: 'managerUsername' {originalText=managerUsername}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@62ac385e}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'manager0_.manager_password' {propertyName=managerPassword,dereferenceType=PRIMITIVE,getPropertyPath=managerPassword,path=generatedAlias0.managerPassword,tableAlias=manager0_,className=dev.lamp.models.Manager,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'manager0_.manager_id' {alias=generatedAlias0, className=dev.lamp.models.Manager, tableAlias=manager0_}
             |  \-[IDENT] IdentNode: 'managerPassword' {originalText=managerPassword}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@62ac385e}

2021-03-12 19:47:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:47:57 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Manager as generatedAlias0 where ( generatedAlias0.managerUsername=:param0 ) and ( generatedAlias0.managerPassword=:param1 )
2021-03-12 19:47:57 DEBUG QueryTranslatorImpl:259 - SQL: select manager0_.manager_id as manager_1_2_, manager0_.fname as fname2_2_, manager0_.lname as lname3_2_, manager0_.manager_password as manager_4_2_, manager0_.manager_username as manager_5_2_ from manager manager0_ where manager0_.manager_username=? and manager0_.manager_password=?
2021-03-12 19:47:57 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:47:57 DEBUG SQL:144 - select manager0_.manager_id as manager_1_2_, manager0_.fname as fname2_2_, manager0_.lname as lname3_2_, manager0_.manager_password as manager_4_2_, manager0_.manager_username as manager_5_2_ from manager manager0_ where manager0_.manager_username=? and manager0_.manager_password=?
2021-03-12 19:47:57 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:47:57 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Manager#1]
2021-03-12 19:47:57 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Manager#1]
2021-03-12 19:47:57 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:47:57 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:47:57 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Sun
2021-03-12 19:47:57 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:47:57 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Day
2021-03-12 19:47:57 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:47:57 DEBUG TwoPhaseLoad:211 - Processing attribute `managerPassword` : value = 10
2021-03-12 19:47:57 DEBUG TwoPhaseLoad:242 - Attribute (`managerPassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:47:57 DEBUG TwoPhaseLoad:211 - Processing attribute `managerUsername` : value = day3
2021-03-12 19:47:57 DEBUG TwoPhaseLoad:242 - Attribute (`managerUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:47:57 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Manager#1]
2021-03-12 19:47:57 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:48:25 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:48:25 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:48:25 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:48:25 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:48:25 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:48:25 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:48:25 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:48:25 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:48:25 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:48:25 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:48:25 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:48:25 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:48:25 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:48:25 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:48:25 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63618898
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a5e8571
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@73c2a5b7
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7c185207
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6e739eca
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@77e16322
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@9b3c274
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1012e55a
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b0c287c
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@712a3256
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5f5f41cc
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5f5f41cc
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4bfb1dc7
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4bfb1dc7
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3a58c3f3
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@13c2d4e1
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@b733332
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@b733332
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@2ed3ee11
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ed3ee11
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@257414aa
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@257414aa
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1493ab69
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1493ab69
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@211dd027
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@211dd027
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@875b7af
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@875b7af
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6966b1f1
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6966b1f1
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3cd12cd
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3cd12cd
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c490755
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c490755
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@7db0f0f6
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7db0f0f6
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@3e44c54a
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3e44c54a
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3160a3c2
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@716bba20
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@377747c9
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@b80b347
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@62ecdc7a
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@27d2a1d1
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@27d2a1d1
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@35136c33
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@35136c33
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6fdff530
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6fdff530
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5f2d144a
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5f2d144a
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e29ecd6
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@3f7aab8d
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@44ae3d35
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@20889642
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2310a6ae
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@4eab0cc3
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@323c1d99
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@79dd0677
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4c2ebcfc
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@28bcf9ed
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28bcf9ed
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3290a021
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@342a9404
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@342a9404
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@1bdd079e
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1bdd079e
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@17f0d5b2
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26e7becd
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1aa695ec
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7a703f33
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a703f33
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c3f36b6
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f420776
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:48:26 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:48:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:48:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:48:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:48:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:48:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:48:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:48:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:48:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:48:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:48:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:48:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:48:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:48:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:48:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:48:26 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:48:26 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:48:26 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:48:26 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:48:26 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:48:26 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:48:26 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:48:26 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:48:26 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:48:26 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:48:26 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:48:27 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:48:27 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@70b8b506
2021-03-12 19:48:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@70b8b506
2021-03-12 19:48:27 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3ab2fd1
2021-03-12 19:48:27 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@707ec98d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@45fe358f]
2021-03-12 19:48:27 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:48:27 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:48:27 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:48:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:48:27 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:48:27 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:48:27 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:48:27 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:48:27 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:48:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:48:27 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:48:27 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:48:27 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:48:27 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:48:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:48:27 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:48:27 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:48:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:48:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:48:27 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:48:27 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:48:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:48:27 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:48:27 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:48:27 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:48:27 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:48:27 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:48:27 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:48:27 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:48:27 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:48:27 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:48:27 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:48:27 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:48:27 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:48:27 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:48:27 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:48:27 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:48:27 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:48:27 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:48:27 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:48:27 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:48:27 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:48:27 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:48:27 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:48:27 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:48:27 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:48:27 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:48:27 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:48:27 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:48:27 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:48:27 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:48:27 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:48:27 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:48:27 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:48:27 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:48:27 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:48:27 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:48:27 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:48:27 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:48:27 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:48:27 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:48:27 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:48:27 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:48:27 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:48:27 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:48:27 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:48:27 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:48:27 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:48:27 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:48:27 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:48:27 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:48:27 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:48:27 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:48:27 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:48:27 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:48:27 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=41, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 41', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@267175f, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:48:27 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:48:27 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:48:27 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@707ec98d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7aaf5895]
2021-03-12 19:48:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:48:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:48:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:48:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:48:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:48:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:48:28 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:48:28 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:48:28 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:48:28 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:48:28 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:48:28 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:48:28 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:48:28 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:48:28 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:48:28 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:48:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23edee09]
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:48:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ed3e5c7]
2021-03-12 19:48:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12ee164e]
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:48:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:48:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:48:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:48:28 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:48:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aba6af0]
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:48:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37cb6148]
2021-03-12 19:48:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7510a460]
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:48:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:48:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:48:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:48:28 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:48:28 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:48:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c64bdd8]
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:48:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:48:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:48:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:48:28 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:48:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f1a9083]
2021-03-12 19:48:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@306ec35a]
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:48:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:48:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:48:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:48:28 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:48:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1501bed3]
2021-03-12 19:48:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d07cc9b]
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:48:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:48:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:48:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:48:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:48:28 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:48:28 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:48:28 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:48:28 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:48:28 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:48:28 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:48:28 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:48:28 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:48:28 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@e60e0ca
2021-03-12 19:48:28 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 817b3dbd-a935-4e9e-b59c-c89e1fa731bd (<unnamed>)
2021-03-12 19:48:28 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:48:28 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:48:28 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Manager as generatedAlias0 where ( generatedAlias0.managerUsername=:param0 ) and ( generatedAlias0.managerPassword=:param1 )
2021-03-12 19:48:28 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1cac9a3e
2021-03-12 19:48:28 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Manager as generatedAlias0 where ( generatedAlias0.managerUsername=:param0 ) and ( generatedAlias0.managerPassword=:param1 )
2021-03-12 19:48:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:48:28 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Manager'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'managerUsername'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'managerPassword'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

2021-03-12 19:48:28 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:48:28 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Manager (generatedAlias0) -> manager0_
2021-03-12 19:48:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> manager0_.manager_id
2021-03-12 19:48:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> manager0_.manager_id
2021-03-12 19:48:28 DEBUG DotNode:696 - getDataType() : managerUsername -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:48:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.managerUsername -> manager0_.manager_username
2021-03-12 19:48:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> manager0_.manager_id
2021-03-12 19:48:28 DEBUG DotNode:696 - getDataType() : managerPassword -> org.hibernate.type.StringType@62ac385e
2021-03-12 19:48:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.managerPassword -> manager0_.manager_password
2021-03-12 19:48:28 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:48:28 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} manager0_.manager_id ) ( FromClause{level=1} manager manager0_ ) ( where ( and ( = ( manager0_.manager_username manager0_.manager_id managerUsername ) ? ) ( = ( manager0_.manager_password manager0_.manager_id managerPassword ) ? ) ) ) )
2021-03-12 19:48:28 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Manager): [manager]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
          |  | path: generatedAlias0.managerUsername
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: managerUsername
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
             | path: generatedAlias0.managerPassword
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: managerPassword
             \-ParameterNode

2021-03-12 19:48:28 DEBUG JoinProcessor:304 - Using FROM fragment [manager manager0_]
2021-03-12 19:48:28 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:48:28 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (manager)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'manager0_.manager_id as manager_1_2_' {alias=generatedAlias0, className=dev.lamp.models.Manager, tableAlias=manager0_}
    |  \-[SQL_TOKEN] SqlFragment: 'manager0_.fname as fname2_2_, manager0_.lname as lname3_2_, manager0_.manager_password as manager_4_2_, manager0_.manager_username as manager_5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[manager0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'manager manager0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=manager,tableAlias=manager0_,origin=null,columns={,className=dev.lamp.models.Manager}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'manager0_.manager_username' {propertyName=managerUsername,dereferenceType=PRIMITIVE,getPropertyPath=managerUsername,path=generatedAlias0.managerUsername,tableAlias=manager0_,className=dev.lamp.models.Manager,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'manager0_.manager_id' {alias=generatedAlias0, className=dev.lamp.models.Manager, tableAlias=manager0_}
          |  |  \-[IDENT] IdentNode: 'managerUsername' {originalText=managerUsername}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@62ac385e}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'manager0_.manager_password' {propertyName=managerPassword,dereferenceType=PRIMITIVE,getPropertyPath=managerPassword,path=generatedAlias0.managerPassword,tableAlias=manager0_,className=dev.lamp.models.Manager,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'manager0_.manager_id' {alias=generatedAlias0, className=dev.lamp.models.Manager, tableAlias=manager0_}
             |  \-[IDENT] IdentNode: 'managerPassword' {originalText=managerPassword}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@62ac385e}

2021-03-12 19:48:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:48:28 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Manager as generatedAlias0 where ( generatedAlias0.managerUsername=:param0 ) and ( generatedAlias0.managerPassword=:param1 )
2021-03-12 19:48:28 DEBUG QueryTranslatorImpl:259 - SQL: select manager0_.manager_id as manager_1_2_, manager0_.fname as fname2_2_, manager0_.lname as lname3_2_, manager0_.manager_password as manager_4_2_, manager0_.manager_username as manager_5_2_ from manager manager0_ where manager0_.manager_username=? and manager0_.manager_password=?
2021-03-12 19:48:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:48:28 DEBUG SQL:144 - select manager0_.manager_id as manager_1_2_, manager0_.fname as fname2_2_, manager0_.lname as lname3_2_, manager0_.manager_password as manager_4_2_, manager0_.manager_username as manager_5_2_ from manager manager0_ where manager0_.manager_username=? and manager0_.manager_password=?
2021-03-12 19:48:28 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:48:28 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Manager#1]
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Manager#1]
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Sun
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Day
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:211 - Processing attribute `managerPassword` : value = 10
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:242 - Attribute (`managerPassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:211 - Processing attribute `managerUsername` : value = day3
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:242 - Attribute (`managerUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Manager#1]
2021-03-12 19:48:28 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:48:28 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Manager as generatedAlias0 where generatedAlias0.managerId=1
2021-03-12 19:48:28 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Manager as generatedAlias0 where generatedAlias0.managerId=1
2021-03-12 19:48:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:48:28 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Manager'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'managerId'
          \-[NUM_INT] Node: '1'

2021-03-12 19:48:28 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:48:28 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Manager (generatedAlias0) -> manager0_
2021-03-12 19:48:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> manager0_.manager_id
2021-03-12 19:48:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> manager0_.manager_id
2021-03-12 19:48:28 DEBUG DotNode:696 - getDataType() : managerId -> org.hibernate.type.IntegerType@229fdda6
2021-03-12 19:48:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.managerId -> manager0_.manager_id
2021-03-12 19:48:28 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:48:28 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} manager0_.manager_id ) ( FromClause{level=1} manager manager0_ ) ( where ( = ( manager0_.manager_id manager0_.manager_id managerId ) 1 ) ) )
2021-03-12 19:48:28 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Manager): [manager]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
          | path: generatedAlias0.managerId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Manager)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: managerId
          \-LiteralNode

2021-03-12 19:48:28 DEBUG JoinProcessor:304 - Using FROM fragment [manager manager0_]
2021-03-12 19:48:28 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:48:28 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (manager)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'manager0_.manager_id as manager_1_2_' {alias=generatedAlias0, className=dev.lamp.models.Manager, tableAlias=manager0_}
    |  \-[SQL_TOKEN] SqlFragment: 'manager0_.fname as fname2_2_, manager0_.lname as lname3_2_, manager0_.manager_password as manager_4_2_, manager0_.manager_username as manager_5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[manager0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'manager manager0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=manager,tableAlias=manager0_,origin=null,columns={,className=dev.lamp.models.Manager}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'manager0_.manager_id' {propertyName=managerId,dereferenceType=PRIMITIVE,getPropertyPath=managerId,path=generatedAlias0.managerId,tableAlias=manager0_,className=dev.lamp.models.Manager,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'manager0_.manager_id' {alias=generatedAlias0, className=dev.lamp.models.Manager, tableAlias=manager0_}
          |  \-[IDENT] IdentNode: 'managerId' {originalText=managerId}
          \-[NUM_INT] LiteralNode: '1'

2021-03-12 19:48:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:48:28 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Manager as generatedAlias0 where generatedAlias0.managerId=1
2021-03-12 19:48:28 DEBUG QueryTranslatorImpl:259 - SQL: select manager0_.manager_id as manager_1_2_, manager0_.fname as fname2_2_, manager0_.lname as lname3_2_, manager0_.manager_password as manager_4_2_, manager0_.manager_username as manager_5_2_ from manager manager0_ where manager0_.manager_id=1
2021-03-12 19:48:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:48:28 DEBUG SQL:144 - select manager0_.manager_id as manager_1_2_, manager0_.fname as fname2_2_, manager0_.lname as lname3_2_, manager0_.manager_password as manager_4_2_, manager0_.manager_username as manager_5_2_ from manager manager0_ where manager0_.manager_id=1
2021-03-12 19:48:28 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:48:28 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Manager#1]
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Manager#1]
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Sun
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = Day
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:211 - Processing attribute `managerPassword` : value = 10
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:242 - Attribute (`managerPassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:211 - Processing attribute `managerUsername` : value = day3
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:242 - Attribute (`managerUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Manager#1]
2021-03-12 19:48:28 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:48:44 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:48:44 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:48:44 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:48:44 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:48:44 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:48:44 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:48:45 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:48:45 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:48:45 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:48:45 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:48:45 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:48:45 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:48:45 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:48:45 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:48:45 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a1b9ae9
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2029b1c6
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4968cefc
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@40f83210
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e66f12
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bbae7b5
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11f80fe9
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@177b8731
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c7b0558
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6088ca6b
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6179924f
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@799b1473
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dcc87a6
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26cf1ab1
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4afd40b7
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60b54a5b
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6153c3e6
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1601e74b
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7aee92cb
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7deb8296
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e09a0dc
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b52b1b0
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1df2b9e3
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aadc243
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6127d7de
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b7a244e
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5393ed69
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a407b2
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fd78a45
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@28e39658
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30fa5cab
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72c31ab
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@751f9c7
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19b3e9d5
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71af527b
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@9d967aa
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d23f478
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@7360f8b
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@2eb2ab9
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@2acef966
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bfb7311
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@eef1d94
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@70b87afa
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4acbdc4b
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b14ca24
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6bba6853
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35e39db9
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4541c757
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35e0f7fd
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7749981
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fa9bd54
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@de354d7
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1287f07e
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:48:45 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:48:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:48:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:48:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:48:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:48:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:48:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:48:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:48:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:48:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:48:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:48:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:48:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:48:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:48:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:48:45 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:48:45 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:48:45 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:48:45 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:48:45 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:48:45 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:48:46 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:48:46 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:48:46 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:48:46 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:48:46 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:48:46 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:48:46 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:48:46 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5d0316a1
2021-03-12 19:48:46 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3712d3d7
2021-03-12 19:48:46 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@813f221]
2021-03-12 19:48:46 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:48:46 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:48:46 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:48:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:48:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:48:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:48:46 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:48:46 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:48:46 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:48:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:48:46 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:48:46 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:48:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:48:46 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:48:46 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:48:46 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:48:46 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:48:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:48:46 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:48:46 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:48:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:48:46 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:48:46 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:48:46 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:48:46 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:48:46 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:48:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:48:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:48:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:48:46 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:48:46 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:48:46 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:48:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:48:46 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:48:46 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:48:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:48:46 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:48:46 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:48:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:48:46 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:48:46 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:48:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:48:46 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:48:46 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:48:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:48:46 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:48:46 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:48:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:48:46 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:48:46 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:48:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:48:46 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:48:46 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:48:46 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:48:46 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:48:46 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:48:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:48:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:48:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:48:46 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:48:46 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:48:46 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:48:46 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:48:46 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:48:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:48:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:48:47 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:48:47 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:48:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:48:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:48:47 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:48:47 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:48:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:48:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:48:47 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:48:47 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:48:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:48:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:48:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:48:47 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:48:47 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:48:47 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:48:47 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:48:47 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:48:47 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:48:47 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:48:47 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:48:47 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:48:47 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:48:47 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:48:47 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:48:47 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:48:47 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:48:47 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:48:47 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:48:47 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:48:47 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:48:47 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:48:47 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:48:47 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:48:47 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:48:47 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:48:47 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:48:47 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:48:47 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:48:47 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:48:47 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:48:47 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:48:47 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:48:47 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:48:47 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:48:47 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:48:47 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:48:47 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:48:47 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:48:47 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:48:47 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:48:47 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:48:47 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:48:47 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:48:47 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:48:47 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:48:47 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:48:47 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:48:47 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:48:47 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:48:47 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:48:47 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:48:47 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:48:47 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:48:47 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:48:47 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:48:47 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:48:47 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:48:47 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:48:47 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=42, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 42', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51e11384, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:48:47 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:48:47 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:48:47 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29046e42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22aa4376]
2021-03-12 19:48:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:48:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:48:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:48:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:48:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:48:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:48:47 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:48:47 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:48:47 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:48:47 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:48:47 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:48:47 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:48:47 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:48:47 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:48:47 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:48:47 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:48:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9a66ab]
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:48:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16793313]
2021-03-12 19:48:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e501cb4]
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:48:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:48:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:48:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:48:47 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:48:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cb6148]
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:48:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c64bdd8]
2021-03-12 19:48:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1beac4]
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:48:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:48:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:48:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:48:47 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:48:47 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:48:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b61dce]
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:48:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:48:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:48:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:48:47 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:48:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@208dd958]
2021-03-12 19:48:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d46e32d]
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:48:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:48:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:48:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:48:47 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:48:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2a6e2a]
2021-03-12 19:48:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcb4152]
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:48:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:48:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:48:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:48:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:48:47 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:48:47 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:48:47 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:48:47 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:48:47 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:48:47 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:48:47 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:48:47 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:48:47 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ef1123d
2021-03-12 19:48:47 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 04d43f42-4595-479f-984f-576acb205a6e (<unnamed>)
2021-03-12 19:48:47 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:48:47 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:48:47 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where ( generatedAlias0.employeeUsername=:param0 ) and ( generatedAlias0.employeePassword=:param1 )
2021-03-12 19:48:47 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@739639e8
2021-03-12 19:48:48 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where ( generatedAlias0.employeeUsername=:param0 ) and ( generatedAlias0.employeePassword=:param1 )
2021-03-12 19:48:48 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:48:48 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'employeeUsername'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'employeePassword'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

2021-03-12 19:48:48 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:48:48 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:48:48 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:48:48 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:48:48 DEBUG DotNode:696 - getDataType() : employeeUsername -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:48:48 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeeUsername -> employee0_.employee_username
2021-03-12 19:48:48 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:48:48 DEBUG DotNode:696 - getDataType() : employeePassword -> org.hibernate.type.StringType@2bc6d7d5
2021-03-12 19:48:48 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeePassword -> employee0_.employee_password
2021-03-12 19:48:48 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:48:48 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( and ( = ( employee0_.employee_username employee0_.employee_id employeeUsername ) ? ) ( = ( employee0_.employee_password employee0_.employee_id employeePassword ) ? ) ) ) )
2021-03-12 19:48:48 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | path: generatedAlias0.employeeUsername
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: employeeUsername
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
             | path: generatedAlias0.employeePassword
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: employeePassword
             \-ParameterNode

2021-03-12 19:48:48 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:48:48 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:48:48 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'employee0_.employee_username' {propertyName=employeeUsername,dereferenceType=PRIMITIVE,getPropertyPath=employeeUsername,path=generatedAlias0.employeeUsername,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  |  \-[IDENT] IdentNode: 'employeeUsername' {originalText=employeeUsername}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2bc6d7d5}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'employee0_.employee_password' {propertyName=employeePassword,dereferenceType=PRIMITIVE,getPropertyPath=employeePassword,path=generatedAlias0.employeePassword,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
             |  \-[IDENT] IdentNode: 'employeePassword' {originalText=employeePassword}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@2bc6d7d5}

2021-03-12 19:48:48 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:48:48 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where ( generatedAlias0.employeeUsername=:param0 ) and ( generatedAlias0.employeePassword=:param1 )
2021-03-12 19:48:48 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_username=? and employee0_.employee_password=?
2021-03-12 19:48:48 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:48:48 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_username=? and employee0_.employee_password=?
2021-03-12 19:48:48 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:48:48 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#4]
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#4]
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = Wast324
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#4]
2021-03-12 19:48:48 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:48:48 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:48:48 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:48:48 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:48:48 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'employeeId'
          \-[NUM_INT] Node: '1'

2021-03-12 19:48:48 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:48:48 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:48:48 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:48:48 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:48:48 DEBUG DotNode:696 - getDataType() : employeeId -> org.hibernate.type.IntegerType@732b31c4
2021-03-12 19:48:48 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.employeeId -> employee0_.employee_id
2021-03-12 19:48:48 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:48:48 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) ( where ( = ( employee0_.employee_id employee0_.employee_id employeeId ) 1 ) ) )
2021-03-12 19:48:48 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          | path: generatedAlias0.employeeId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: employeeId
          \-LiteralNode

2021-03-12 19:48:48 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:48:48 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:48:48 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_.employee_id' {propertyName=employeeId,dereferenceType=PRIMITIVE,getPropertyPath=employeeId,path=generatedAlias0.employeeId,tableAlias=employee0_,className=dev.lamp.models.Employee,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'employeeId' {originalText=employeeId}
          \-[NUM_INT] LiteralNode: '1'

2021-03-12 19:48:48 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:48:48 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0 where generatedAlias0.employeeId=1
2021-03-12 19:48:48 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:48:48 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:48:48 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_ where employee0_.employee_id=1
2021-03-12 19:48:48 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:48:48 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:48:48 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:48:48 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Employee as generatedAlias0
2021-03-12 19:48:48 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:48:48 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:48:48 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Employee'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:48:48 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:48:48 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Employee (generatedAlias0) -> employee0_
2021-03-12 19:48:48 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> employee0_.employee_id
2021-03-12 19:48:48 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:48:48 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} employee0_.employee_id ) ( FromClause{level=1} employee employee0_ ) )
2021-03-12 19:48:48 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Employee): [employee]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Employee)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:48:48 DEBUG JoinProcessor:304 - Using FROM fragment [employee employee0_]
2021-03-12 19:48:48 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:48:48 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'employee0_.employee_id as employee1_0_' {alias=generatedAlias0, className=dev.lamp.models.Employee, tableAlias=employee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'employee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=employee,tableAlias=employee0_,origin=null,columns={,className=dev.lamp.models.Employee}}

2021-03-12 19:48:48 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:48:48 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Employee as generatedAlias0
2021-03-12 19:48:48 DEBUG QueryTranslatorImpl:259 - SQL: select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:48:48 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:48:48 DEBUG SQL:144 - select employee0_.employee_id as employee1_0_, employee0_.employee_password as employee2_0_, employee0_.employee_username as employee3_0_, employee0_.fname as fname4_0_, employee0_.lname as lname5_0_ from employee employee0_
2021-03-12 19:48:48 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:48:48 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#1]
2021-03-12 19:48:48 DEBUG Loader:384 - Result set row: 1
2021-03-12 19:48:48 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#2]
2021-03-12 19:48:48 DEBUG Loader:384 - Result set row: 2
2021-03-12 19:48:48 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#3]
2021-03-12 19:48:48 DEBUG Loader:384 - Result set row: 3
2021-03-12 19:48:48 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Employee#4]
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#1]
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#1]
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#2]
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#2]
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#3]
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = east324
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#3]
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Employee#4]
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `employeePassword` : value = 333
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`employeePassword`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeUsername` : value = Wast324
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`employeeUsername`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `expenseList` : value = NOT NULL COLLECTION
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`expenseList`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `fname` : value = Shelley
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`fname`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:211 - Processing attribute `lname` : value = East
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:242 - Attribute (`lname`)  - enhanced for lazy-loading? - false
2021-03-12 19:48:48 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Employee#4]
2021-03-12 19:48:48 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:48:58 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:48:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:48:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:48:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:48:58 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:48:58 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:48:58 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:48:58 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:48:58 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:48:58 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:48:58 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:48:58 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:48:58 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:48:58 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:48:58 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5c01de4e
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5c01de4e
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5c01de4e
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5060da20
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1291aa67
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5ea9f842
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@413b9b66
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@413b9b66
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@413b9b66
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@531b916b
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@531b916b
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@531b916b
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@6e54eefd
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@6e54eefd
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6e54eefd
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@6561841d
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@6561841d
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6561841d
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@6237ea0d
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@6237ea0d
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6237ea0d
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@537225f2
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@537225f2
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@537225f2
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@7ea15dfe
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@7ea15dfe
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7ea15dfe
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1aaa654f
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1aaa654f
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4421f550
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4421f550
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@48eb4ed6
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@48eb4ed6
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52c28b76
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@9aa9987
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@60b6b322
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@60b6b322
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@1cc0906e
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cc0906e
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5e44680e
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e44680e
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1fbc5fc5
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1fbc5fc5
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3f0ab62d
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3f0ab62d
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@392657ae
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@392657ae
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56a0c509
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56a0c509
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@32ddc2e8
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@32ddc2e8
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@18547001
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@18547001
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@9e0173c
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@9e0173c
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@66bf1a85
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@66bf1a85
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1dde3873
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1dde3873
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1dde3873
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e49bae0
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@132e65e
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@132e65e
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@132e65e
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@563a3352
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@400365e5
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@21969073
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@21969073
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@5b618122
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5b618122
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6a3cca18
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6a3cca18
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@3d9dd481
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3d9dd481
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@432a5b
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@432a5b
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1a030134
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@7c713129
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7c713129
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@7c713129
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@42e28583
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@42e28583
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@42e28583
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@133d9af6
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@56454ba1
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@6abdc739
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6abdc739
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@6abdc739
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cd026ef
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cd026ef
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cd026ef
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@435ea94f
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@5acd92d6
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@41f9843a
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41f9843a
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15d2dbf4
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@4355d62a
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4355d62a
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@356ccc25
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@356ccc25
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6e727dfa
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@211db784
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1eb4cf58
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@20b052b4
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20b052b4
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7a15f8d4
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3caca0b2
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@78531795
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31ac0abb
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@642a9702
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3d5a1205
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5dd54584
2021-03-12 19:48:59 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@cfd6557
2021-03-12 19:48:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:48:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:48:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:48:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:48:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:48:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:48:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:48:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:48:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:48:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:48:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:48:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:48:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:48:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:48:59 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:48:59 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:48:59 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:48:59 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:48:59 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:48:59 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:48:59 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:48:59 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:48:59 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:48:59 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:48:59 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:49:00 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:49:00 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@71aaaf6b
2021-03-12 19:49:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@71aaaf6b
2021-03-12 19:49:00 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@432a5b
2021-03-12 19:49:00 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1941c91] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7d503821]
2021-03-12 19:49:00 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:49:00 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:49:00 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:49:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:49:00 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:49:00 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:49:00 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:49:00 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:49:00 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:49:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:49:00 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:49:00 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:49:00 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:49:00 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:49:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:49:00 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:49:00 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:49:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:49:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:49:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:49:00 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:49:00 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:49:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:49:00 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:49:00 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:49:00 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:49:00 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:49:00 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:49:00 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:49:00 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:49:00 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:49:00 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:49:00 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:49:00 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:49:00 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:49:00 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:49:00 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:49:00 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:49:00 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:49:00 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:49:00 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:49:00 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:49:00 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:49:00 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:49:00 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:49:00 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:49:00 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:49:00 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:49:00 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:49:00 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:49:00 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:49:00 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:49:00 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:49:00 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:49:00 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:49:00 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:49:00 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:49:00 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:49:00 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:49:00 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:49:00 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:49:00 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:49:00 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:49:00 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:49:00 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:49:00 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:49:00 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:49:00 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:49:00 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:49:00 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:49:00 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:49:00 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:49:00 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:49:00 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:49:00 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:49:00 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:49:00 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=43, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 43', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@39dcf619, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:49:00 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:49:00 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:49:00 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1941c91] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3d55c4c5]
2021-03-12 19:49:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:49:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:49:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:49:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:49:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:49:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:49:01 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:49:01 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:49:01 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:49:01 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:49:01 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:49:01 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:49:01 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:49:01 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:49:01 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:49:01 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:49:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@430359ce]
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:49:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7909083e]
2021-03-12 19:49:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d881fdd]
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:49:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:49:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:49:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:49:01 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:49:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bcf69c]
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:49:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4db33224]
2021-03-12 19:49:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fcafafe]
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:49:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:49:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:49:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:49:01 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:49:01 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:49:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a27ed8d]
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:49:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:49:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:49:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:49:01 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:49:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a810c66]
2021-03-12 19:49:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3df4652a]
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:49:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:49:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:49:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:49:01 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:49:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23a808f4]
2021-03-12 19:49:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62f2e81d]
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:49:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:49:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:49:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:49:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:49:01 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:49:01 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:49:01 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:49:01 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:49:01 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:49:01 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:49:01 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:49:01 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:49:01 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1f4378e2
2021-03-12 19:49:01 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: f40a767c-563d-455c-bd8d-5a3fc574e81a (<unnamed>)
2021-03-12 19:49:01 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:49:01 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:49:01 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:49:01 DEBUG TransactionImpl:81 - begin
2021-03-12 19:49:01 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:49:01 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:49:01 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: insert or update on table "expense" violates foreign key constraint "fk_manager"
  Detail: Key (manager_id)=(2) is not present in table "manager".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3200)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3806)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:194)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:179)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:636)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:629)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:624)
	at dev.lamp.daotests.ExpenseTests.setup(ExpenseTests.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 19:49:01 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 23503
2021-03-12 19:49:01 ERROR SqlExceptionHelper:142 - ERROR: insert or update on table "expense" violates foreign key constraint "fk_manager"
  Detail: Key (manager_id)=(2) is not present in table "manager".
2021-03-12 19:50:57 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:50:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:50:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:50:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:50:57 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:50:57 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:50:57 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:50:57 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:50:57 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:50:57 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:50:57 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:50:57 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:50:57 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:50:57 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:50:57 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73c2a5b7
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c185207
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6957972a
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@177ffeee
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@177ffeee
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2dc34d24
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2dc34d24
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@3a58c3f3
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3a58c3f3
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13c2d4e1
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2da1661
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@31c8b845
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@31c8b845
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@baf99a9
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@baf99a9
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6c3ba414
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6c3ba414
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4eaa03b9
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4eaa03b9
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7dc90914
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7dc90914
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@23969645
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@23969645
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7596b948
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7596b948
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5952c8bd
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5952c8bd
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56759e58
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56759e58
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6f691a4e
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6f691a4e
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@20eaeadc
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@20eaeadc
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31156d13
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@535b83ee
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3b8335c4
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@2b1f6f0d
2021-03-12 19:50:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b1f6f0d
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@4190d4a8
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4190d4a8
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6096bc6d
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6096bc6d
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@fc26ffa
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fc26ffa
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50d66e7f
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2310a6ae
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@13850fb5
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@4c2ebcfc
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@1bf7079d
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@3290a021
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3290a021
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@636ebe23
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@69703809
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69703809
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@17f0d5b2
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@17f0d5b2
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@26e7becd
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@44adc839
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@62f1f6ff
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@c3f36b6
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c3f36b6
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c154f
2021-03-12 19:50:58 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e3b77be
2021-03-12 19:50:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:50:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:50:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:50:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:50:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:50:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:50:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:50:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:50:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:50:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:50:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:50:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:50:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:50:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:50:58 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:50:58 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:50:58 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:50:58 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:50:58 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:50:58 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:50:58 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:50:58 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:50:58 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:50:58 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:50:58 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:50:59 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:50:59 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3ceea9ee
2021-03-12 19:50:59 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3ceea9ee
2021-03-12 19:50:59 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:50:59 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e27600f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3ac17e09]
2021-03-12 19:50:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:50:59 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:50:59 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:50:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:50:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:50:59 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:50:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:50:59 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:50:59 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:50:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:50:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:50:59 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:50:59 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:50:59 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:50:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:50:59 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:50:59 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:50:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:50:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:50:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:50:59 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:50:59 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:50:59 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:50:59 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:50:59 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:50:59 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:50:59 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:50:59 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:50:59 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:50:59 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:50:59 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:50:59 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:50:59 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:50:59 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:50:59 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:50:59 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:50:59 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:50:59 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:50:59 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:50:59 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:50:59 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:50:59 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:50:59 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:50:59 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:50:59 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:50:59 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:50:59 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:50:59 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:50:59 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:50:59 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:50:59 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:50:59 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:50:59 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:50:59 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:50:59 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:50:59 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:50:59 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:50:59 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:50:59 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:50:59 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:50:59 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:50:59 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:50:59 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:50:59 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:50:59 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:50:59 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:50:59 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:50:59 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:50:59 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:50:59 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:50:59 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:50:59 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:50:59 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:50:59 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:50:59 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:50:59 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:50:59 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=44, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 44', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3cef5bc1, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:50:59 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:50:59 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:50:59 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e27600f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3120ebf1]
2021-03-12 19:50:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:50:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:50:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:50:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:50:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:50:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:51:00 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:51:00 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:51:00 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:51:00 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:51:00 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:51:00 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:51:00 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:51:00 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:51:00 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:51:00 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:51:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c6a3c3]
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:51:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@371f52af]
2021-03-12 19:51:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@121e7308]
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:51:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:51:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:51:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:51:00 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:51:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c64bdd8]
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:51:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57b61dce]
2021-03-12 19:51:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f590fc]
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:51:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:51:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:51:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:51:00 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:51:00 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:51:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e3673a7]
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:51:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:51:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:51:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:51:00 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:51:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e3e28e]
2021-03-12 19:51:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4051951b]
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:51:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:51:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:51:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:51:00 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:51:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77a48d5e]
2021-03-12 19:51:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b4f425]
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:51:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:51:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:51:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:51:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:51:00 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:51:00 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:51:00 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:51:00 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:51:00 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:51:00 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:51:00 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:51:00 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:51:00 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@28880293
2021-03-12 19:51:00 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 826c8ece-c2ed-4558-9591-2dfd0a6c31d6 (<unnamed>)
2021-03-12 19:51:00 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:51:00 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:51:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:51:00 DEBUG TransactionImpl:81 - begin
2021-03-12 19:51:00 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:51:00 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:51:00 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2021-03-12 19:51:00 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:51:00 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:51:00 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:51:00 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2021-03-12 19:51:00 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:51:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:51:00 DEBUG TransactionImpl:81 - begin
2021-03-12 19:51:00 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:51:00 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:51:00 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 4
2021-03-12 19:51:00 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:51:00 DEBUG TransactionImpl:98 - committing
2021-03-12 19:51:00 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 19:51:00 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 19:51:00 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 19:51:00 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 19:51:00 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 19:51:00 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=250.0, dateDetermined=null, expenseId=4, employeeId=1, managerId=2, dateSubmitted=Fri Mar 12 19:51:00 PST 2021, status=Pending}
2021-03-12 19:51:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:51:00 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:51:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:51:00 DEBUG TransactionImpl:81 - begin
2021-03-12 19:51:00 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:51:00 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:51:00 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: insert or update on table "expense" violates foreign key constraint "fk_employee"
  Detail: Key (employee_id)=(0) is not present in table "employee".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3200)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3806)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:194)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:179)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:636)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:629)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:624)
	at dev.lamp.dao.ExpenseDAOHibernate.submitExpense(ExpenseDAOHibernate.java:29)
	at dev.lamp.daotests.ExpenseTests.get_all_expenses_by_employee(ExpenseTests.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 19:51:00 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 23503
2021-03-12 19:51:00 ERROR SqlExceptionHelper:142 - ERROR: insert or update on table "expense" violates foreign key constraint "fk_employee"
  Detail: Key (employee_id)=(0) is not present in table "employee".
2021-03-12 19:51:00 ERROR ExpenseDAOHibernate:35 - Unable to submit expense
2021-03-12 19:51:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:51:00 DEBUG TransactionImpl:81 - begin
2021-03-12 19:51:00 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:51:00 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:51:00 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: insert or update on table "expense" violates foreign key constraint "fk_employee"
  Detail: Key (employee_id)=(0) is not present in table "employee".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3200)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3806)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:194)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:179)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:636)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:629)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:624)
	at dev.lamp.dao.ExpenseDAOHibernate.submitExpense(ExpenseDAOHibernate.java:29)
	at dev.lamp.daotests.ExpenseTests.get_all_expenses_by_employee(ExpenseTests.java:81)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 19:51:00 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 23503
2021-03-12 19:51:00 ERROR SqlExceptionHelper:142 - ERROR: insert or update on table "expense" violates foreign key constraint "fk_employee"
  Detail: Key (employee_id)=(0) is not present in table "employee".
2021-03-12 19:51:00 ERROR ExpenseDAOHibernate:35 - Unable to submit expense
2021-03-12 19:51:00 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Expense as generatedAlias0
2021-03-12 19:51:00 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@16dda76d
2021-03-12 19:51:00 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0
2021-03-12 19:51:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:51:00 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Expense'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:51:01 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:51:01 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Expense (generatedAlias0) -> expense0_
2021-03-12 19:51:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> expense0_.expense_id
2021-03-12 19:51:01 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:51:01 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} expense0_.expense_id ) ( FromClause{level=1} expense expense0_ ) )
2021-03-12 19:51:01 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Expense): [expense]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:51:01 DEBUG JoinProcessor:304 - Using FROM fragment [expense expense0_]
2021-03-12 19:51:01 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:51:01 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (expense)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'expense0_.expense_id as expense_1_1_' {alias=generatedAlias0, className=dev.lamp.models.Expense, tableAlias=expense0_}
    |  \-[SQL_TOKEN] SqlFragment: 'expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[expense0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'expense expense0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=expense,tableAlias=expense0_,origin=null,columns={,className=dev.lamp.models.Expense}}

2021-03-12 19:51:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:51:01 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0
2021-03-12 19:51:01 DEBUG QueryTranslatorImpl:259 - SQL: select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_
2021-03-12 19:51:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:54:09 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:54:09 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:54:09 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:54:09 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:54:09 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:54:09 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:54:09 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:54:09 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:54:09 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:54:10 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:54:10 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:54:10 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:54:10 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:54:10 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:54:10 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73c2a5b7
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c185207
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6957972a
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@177ffeee
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@177ffeee
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2dc34d24
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2dc34d24
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@3a58c3f3
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3a58c3f3
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13c2d4e1
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2da1661
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@31c8b845
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@31c8b845
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@baf99a9
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@baf99a9
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6c3ba414
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6c3ba414
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4eaa03b9
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4eaa03b9
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7dc90914
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7dc90914
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@23969645
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@23969645
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7596b948
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7596b948
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5952c8bd
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5952c8bd
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56759e58
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56759e58
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6f691a4e
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6f691a4e
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@20eaeadc
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@20eaeadc
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31156d13
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@535b83ee
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3b8335c4
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@2b1f6f0d
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b1f6f0d
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@4190d4a8
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4190d4a8
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6096bc6d
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6096bc6d
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@fc26ffa
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fc26ffa
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50d66e7f
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2310a6ae
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@13850fb5
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@4c2ebcfc
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@1bf7079d
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@3290a021
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3290a021
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@636ebe23
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@69703809
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69703809
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@17f0d5b2
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@17f0d5b2
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@26e7becd
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@44adc839
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@62f1f6ff
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@c3f36b6
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c3f36b6
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c154f
2021-03-12 19:54:10 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e3b77be
2021-03-12 19:54:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:54:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:54:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:54:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:54:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:54:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:54:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:54:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:54:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:54:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:54:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:54:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:54:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:54:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:54:10 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:54:10 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:54:10 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:54:10 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:54:10 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:54:10 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:54:11 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:54:11 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:54:11 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:54:11 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:54:11 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:54:11 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:54:11 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3ceea9ee
2021-03-12 19:54:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3ceea9ee
2021-03-12 19:54:11 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:54:11 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e27600f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3ac17e09]
2021-03-12 19:54:11 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:54:11 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:54:11 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:54:11 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:54:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:54:12 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:54:12 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:54:12 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:54:12 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:54:12 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:54:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:54:12 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:54:12 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:54:12 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:54:12 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:54:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:54:12 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:54:12 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:54:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:54:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:54:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:54:12 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:54:12 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:54:12 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:54:12 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:54:12 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:54:12 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:54:12 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:54:12 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:54:12 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:54:12 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:54:12 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:54:12 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:54:12 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:54:12 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:54:12 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:54:12 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:54:12 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:54:12 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:54:12 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:54:12 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:54:12 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:54:12 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:54:12 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:54:12 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:54:12 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:54:12 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:54:12 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:54:12 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:54:12 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:54:12 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:54:12 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:54:12 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:54:12 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:54:12 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:54:12 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:54:12 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:54:12 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:54:12 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:54:12 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:54:12 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:54:12 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:54:12 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:54:12 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:54:12 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:54:12 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:54:12 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:54:12 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:54:12 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:54:12 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:54:12 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:54:12 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:54:12 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:54:12 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:54:12 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:54:12 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:54:12 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:54:12 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=45, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 45', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3cef5bc1, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:54:12 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:54:12 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:54:12 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e27600f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3120ebf1]
2021-03-12 19:54:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:54:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:54:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:54:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:54:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:54:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:54:12 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:54:12 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:54:12 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:54:12 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:54:12 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:54:12 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:54:12 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:54:12 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:54:12 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:54:12 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:54:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c6a3c3]
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:54:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@371f52af]
2021-03-12 19:54:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@121e7308]
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:54:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:54:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:54:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:54:12 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:54:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c64bdd8]
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:54:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57b61dce]
2021-03-12 19:54:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f590fc]
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:54:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:54:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:54:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:54:12 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:54:12 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:54:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e3673a7]
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:54:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:54:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:54:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:54:12 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:54:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e3e28e]
2021-03-12 19:54:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4051951b]
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:54:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:54:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:54:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:54:12 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:54:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77a48d5e]
2021-03-12 19:54:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b4f425]
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:54:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:54:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:54:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:54:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:54:12 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:54:12 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:54:12 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:54:12 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:54:12 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:54:12 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:54:12 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:54:12 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:54:12 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@28880293
2021-03-12 19:54:12 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: fc8afc67-19a6-4094-9f66-d7aac0c47f8d (<unnamed>)
2021-03-12 19:54:12 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:54:13 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:54:13 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:54:13 DEBUG TransactionImpl:81 - begin
2021-03-12 19:54:13 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:54:13 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:54:13 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 7
2021-03-12 19:54:13 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:54:13 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:54:13 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:54:13 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 8
2021-03-12 19:54:13 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:54:13 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:54:13 DEBUG TransactionImpl:81 - begin
2021-03-12 19:54:13 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:54:13 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:54:13 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 9
2021-03-12 19:54:13 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:54:13 DEBUG TransactionImpl:98 - committing
2021-03-12 19:54:13 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 19:54:13 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 19:54:13 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 19:54:13 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 19:54:13 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 19:54:13 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=250.0, dateDetermined=null, expenseId=9, employeeId=1, managerId=2, dateSubmitted=Fri Mar 12 19:54:13 PST 2021, status=Pending}
2021-03-12 19:54:13 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:54:13 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:54:13 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:54:13 DEBUG TransactionImpl:81 - begin
2021-03-12 19:54:13 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:54:13 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:54:13 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: insert or update on table "expense" violates foreign key constraint "fk_employee"
  Detail: Key (employee_id)=(0) is not present in table "employee".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3200)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3806)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:194)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:179)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:636)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:629)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:624)
	at dev.lamp.dao.ExpenseDAOHibernate.submitExpense(ExpenseDAOHibernate.java:29)
	at dev.lamp.daotests.ExpenseTests.get_all_expenses_by_employee(ExpenseTests.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 19:54:13 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 23503
2021-03-12 19:54:13 ERROR SqlExceptionHelper:142 - ERROR: insert or update on table "expense" violates foreign key constraint "fk_employee"
  Detail: Key (employee_id)=(0) is not present in table "employee".
2021-03-12 19:54:13 ERROR ExpenseDAOHibernate:35 - Unable to submit expense
2021-03-12 19:54:13 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:54:13 DEBUG TransactionImpl:81 - begin
2021-03-12 19:54:13 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:54:13 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:54:13 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: insert or update on table "expense" violates foreign key constraint "fk_employee"
  Detail: Key (employee_id)=(0) is not present in table "employee".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3200)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3806)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:194)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:179)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:636)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:629)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:624)
	at dev.lamp.dao.ExpenseDAOHibernate.submitExpense(ExpenseDAOHibernate.java:29)
	at dev.lamp.daotests.ExpenseTests.get_all_expenses_by_employee(ExpenseTests.java:81)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-03-12 19:54:13 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 23503
2021-03-12 19:54:13 ERROR SqlExceptionHelper:142 - ERROR: insert or update on table "expense" violates foreign key constraint "fk_employee"
  Detail: Key (employee_id)=(0) is not present in table "employee".
2021-03-12 19:54:13 ERROR ExpenseDAOHibernate:35 - Unable to submit expense
2021-03-12 19:54:13 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Expense as generatedAlias0
2021-03-12 19:54:13 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@16dda76d
2021-03-12 19:54:13 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0
2021-03-12 19:54:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:54:13 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Expense'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:54:13 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:54:13 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Expense (generatedAlias0) -> expense0_
2021-03-12 19:54:13 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> expense0_.expense_id
2021-03-12 19:54:13 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:54:13 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} expense0_.expense_id ) ( FromClause{level=1} expense expense0_ ) )
2021-03-12 19:54:13 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Expense): [expense]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:54:13 DEBUG JoinProcessor:304 - Using FROM fragment [expense expense0_]
2021-03-12 19:54:13 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:54:13 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (expense)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'expense0_.expense_id as expense_1_1_' {alias=generatedAlias0, className=dev.lamp.models.Expense, tableAlias=expense0_}
    |  \-[SQL_TOKEN] SqlFragment: 'expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[expense0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'expense expense0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=expense,tableAlias=expense0_,origin=null,columns={,className=dev.lamp.models.Expense}}

2021-03-12 19:54:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:54:13 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0
2021-03-12 19:54:13 DEBUG QueryTranslatorImpl:259 - SQL: select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_
2021-03-12 19:54:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:56:51 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:56:51 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:56:51 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:56:51 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:56:51 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:56:51 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:56:51 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:56:51 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:56:51 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:56:51 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:56:51 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:56:51 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:56:52 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:56:52 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:56:52 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73c2a5b7
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c185207
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6957972a
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@177ffeee
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@177ffeee
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2dc34d24
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2dc34d24
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@3a58c3f3
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3a58c3f3
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13c2d4e1
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2da1661
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@31c8b845
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@31c8b845
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@baf99a9
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@baf99a9
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6c3ba414
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6c3ba414
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4eaa03b9
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4eaa03b9
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7dc90914
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7dc90914
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@23969645
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@23969645
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7596b948
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7596b948
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5952c8bd
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5952c8bd
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56759e58
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56759e58
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6f691a4e
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6f691a4e
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@20eaeadc
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@20eaeadc
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31156d13
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@535b83ee
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3b8335c4
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@2b1f6f0d
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b1f6f0d
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@4190d4a8
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4190d4a8
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6096bc6d
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6096bc6d
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@fc26ffa
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fc26ffa
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50d66e7f
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2310a6ae
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@13850fb5
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@4c2ebcfc
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@1bf7079d
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@3290a021
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3290a021
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@636ebe23
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@69703809
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69703809
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@17f0d5b2
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@17f0d5b2
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@26e7becd
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@44adc839
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@62f1f6ff
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@c3f36b6
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c3f36b6
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c154f
2021-03-12 19:56:52 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e3b77be
2021-03-12 19:56:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:56:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:56:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:56:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:56:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:56:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:56:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:56:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:56:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:56:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:56:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:56:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:56:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:56:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:56:52 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:56:52 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:56:52 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:56:52 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:56:52 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:56:52 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:56:52 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:56:52 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:56:52 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:56:52 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:56:52 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:56:53 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:56:53 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3ceea9ee
2021-03-12 19:56:53 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3ceea9ee
2021-03-12 19:56:53 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:56:53 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e27600f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3ac17e09]
2021-03-12 19:56:53 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:56:53 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:56:53 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:56:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:56:53 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:56:53 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:56:53 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:56:53 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:56:53 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:56:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:56:53 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:56:53 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:56:53 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:56:53 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:56:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:56:53 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:56:53 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:56:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:56:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:56:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:56:53 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:56:53 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:56:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:56:53 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:56:53 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:56:53 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:56:53 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:56:53 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:56:53 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:56:53 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:56:53 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:56:53 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:56:53 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:56:53 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:56:53 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:56:53 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:56:53 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:56:53 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:56:53 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:56:53 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:56:53 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:56:53 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:56:53 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:56:53 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:56:53 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:56:53 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:56:53 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:56:53 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:56:53 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:56:53 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:56:53 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:56:53 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:56:53 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:56:53 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:56:53 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:56:53 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:56:53 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:56:53 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:56:53 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:56:53 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:56:53 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:56:53 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:56:53 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:56:53 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:56:53 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:56:53 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:56:53 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:56:53 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:56:53 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:56:53 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:56:53 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:56:53 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:56:53 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:56:53 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:56:53 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:56:53 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:56:53 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=46, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 46', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3cef5bc1, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:56:53 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:56:53 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:56:53 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e27600f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3120ebf1]
2021-03-12 19:56:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:56:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:56:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:56:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:56:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:56:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:56:54 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:56:54 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:56:54 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:56:54 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:56:54 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:56:54 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:56:54 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:56:54 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:56:54 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:56:54 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:56:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c6a3c3]
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:56:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@371f52af]
2021-03-12 19:56:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@121e7308]
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:56:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:56:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:56:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:56:54 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:56:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c64bdd8]
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:56:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57b61dce]
2021-03-12 19:56:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f590fc]
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:56:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:56:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:56:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:56:54 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:56:54 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:56:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e3673a7]
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:56:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:56:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:56:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:56:54 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:56:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e3e28e]
2021-03-12 19:56:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4051951b]
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:56:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:56:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:56:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:56:54 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:56:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77a48d5e]
2021-03-12 19:56:54 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b4f425]
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:56:54 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:56:54 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:56:54 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:56:54 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:56:54 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:56:54 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:56:54 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:56:54 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:56:54 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:56:54 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:56:54 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:56:54 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:56:54 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@28880293
2021-03-12 19:56:54 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: b0862dad-ab0a-4f81-ab59-9f3f327bad82 (<unnamed>)
2021-03-12 19:56:54 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:56:54 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:56:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:56:54 DEBUG TransactionImpl:81 - begin
2021-03-12 19:56:54 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:56:54 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:56:54 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 12
2021-03-12 19:56:54 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:56:54 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:56:54 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:56:54 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 13
2021-03-12 19:56:54 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:56:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:56:54 DEBUG TransactionImpl:81 - begin
2021-03-12 19:56:54 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:56:54 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:56:54 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 14
2021-03-12 19:56:54 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:56:54 DEBUG TransactionImpl:98 - committing
2021-03-12 19:56:54 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 19:56:54 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 19:56:54 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 19:56:54 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 19:56:54 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 19:56:54 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=250.0, dateDetermined=null, expenseId=14, employeeId=1, managerId=2, dateSubmitted=Fri Mar 12 19:56:54 PST 2021, status=Pending}
2021-03-12 19:56:54 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:56:54 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:56:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:56:54 DEBUG TransactionImpl:81 - begin
2021-03-12 19:56:54 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:56:54 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:56:54 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 15
2021-03-12 19:56:54 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:56:54 DEBUG TransactionImpl:98 - committing
2021-03-12 19:56:54 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 19:56:54 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 19:56:54 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 19:56:54 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 19:56:54 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 19:56:54 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=250.0, dateDetermined=null, expenseId=15, employeeId=2, managerId=2, dateSubmitted=Fri Mar 12 19:56:54 PST 2021, status=Pending}
2021-03-12 19:56:54 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:56:54 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:56:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:56:54 DEBUG TransactionImpl:81 - begin
2021-03-12 19:56:54 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:56:54 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:56:54 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 16
2021-03-12 19:56:54 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:56:54 DEBUG TransactionImpl:98 - committing
2021-03-12 19:56:54 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 19:56:54 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 19:56:54 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 19:56:54 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 19:56:54 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 19:56:54 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=450.0, dateDetermined=null, expenseId=16, employeeId=3, managerId=2, dateSubmitted=Fri Mar 12 19:56:54 PST 2021, status=Pending}
2021-03-12 19:56:54 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:56:54 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:56:54 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Expense as generatedAlias0
2021-03-12 19:56:54 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2a862a1b
2021-03-12 19:56:54 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0
2021-03-12 19:56:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:56:54 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Expense'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:56:54 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:56:54 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Expense (generatedAlias0) -> expense0_
2021-03-12 19:56:54 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> expense0_.expense_id
2021-03-12 19:56:54 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:56:54 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} expense0_.expense_id ) ( FromClause{level=1} expense expense0_ ) )
2021-03-12 19:56:54 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Expense): [expense]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:56:54 DEBUG JoinProcessor:304 - Using FROM fragment [expense expense0_]
2021-03-12 19:56:54 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:56:54 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (expense)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'expense0_.expense_id as expense_1_1_' {alias=generatedAlias0, className=dev.lamp.models.Expense, tableAlias=expense0_}
    |  \-[SQL_TOKEN] SqlFragment: 'expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[expense0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'expense expense0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=expense,tableAlias=expense0_,origin=null,columns={,className=dev.lamp.models.Expense}}

2021-03-12 19:56:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:56:54 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0
2021-03-12 19:56:54 DEBUG QueryTranslatorImpl:259 - SQL: select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_
2021-03-12 19:56:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:57:50 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:57:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:57:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:57:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:57:50 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:57:50 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:57:50 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:57:50 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:57:51 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:57:51 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:57:51 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:57:51 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:57:51 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:57:51 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:57:51 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73c2a5b7
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c185207
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6957972a
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@177ffeee
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@177ffeee
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2dc34d24
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2dc34d24
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@3a58c3f3
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3a58c3f3
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13c2d4e1
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2da1661
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@31c8b845
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@31c8b845
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@baf99a9
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@baf99a9
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6c3ba414
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6c3ba414
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4eaa03b9
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4eaa03b9
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7dc90914
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7dc90914
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@23969645
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@23969645
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7596b948
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7596b948
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5952c8bd
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5952c8bd
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56759e58
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56759e58
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6f691a4e
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6f691a4e
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@20eaeadc
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@20eaeadc
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31156d13
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@535b83ee
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3b8335c4
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@2b1f6f0d
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b1f6f0d
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@4190d4a8
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4190d4a8
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6096bc6d
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6096bc6d
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@fc26ffa
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fc26ffa
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50d66e7f
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2310a6ae
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@13850fb5
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@4c2ebcfc
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@1bf7079d
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@3290a021
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3290a021
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@636ebe23
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@69703809
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69703809
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@17f0d5b2
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@17f0d5b2
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@26e7becd
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@44adc839
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@62f1f6ff
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@c3f36b6
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c3f36b6
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c154f
2021-03-12 19:57:51 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e3b77be
2021-03-12 19:57:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:57:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:57:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:57:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:57:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:57:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:57:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:57:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:57:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:57:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:57:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:57:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:57:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:57:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:57:51 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:57:51 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:57:51 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:57:51 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:57:51 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:57:51 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:57:52 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:57:52 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:57:52 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:57:52 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:57:52 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:57:52 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:57:52 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3ceea9ee
2021-03-12 19:57:52 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3ceea9ee
2021-03-12 19:57:52 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:57:52 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e27600f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3ac17e09]
2021-03-12 19:57:52 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:57:52 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:57:52 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:57:52 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:57:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:57:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:57:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:57:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:57:53 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:57:53 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:57:53 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:57:53 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:57:53 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:57:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:57:53 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:57:53 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:57:53 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:57:53 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:57:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:57:53 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:57:53 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:57:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:57:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:57:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:57:53 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:57:53 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:57:53 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:57:53 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:57:53 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:57:53 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:57:53 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:57:53 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:57:53 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:57:53 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:57:53 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:57:53 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:57:53 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:57:53 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:57:53 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:57:53 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:57:53 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:57:53 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:57:53 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:57:53 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:57:53 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:57:53 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:57:53 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:57:53 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:57:53 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:57:53 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:57:53 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:57:53 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:57:53 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:57:53 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:57:53 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:57:53 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:57:53 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:57:53 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:57:53 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:57:53 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:57:53 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:57:53 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:57:53 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:57:53 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:57:53 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:57:53 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:57:53 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:57:53 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:57:53 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:57:53 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:57:53 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:57:53 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:57:53 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:57:53 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:57:53 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:57:53 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:57:53 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:57:53 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:57:53 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:57:53 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:57:53 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=47, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 47', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3cef5bc1, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:57:53 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:57:53 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:57:53 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e27600f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3120ebf1]
2021-03-12 19:57:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:57:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:57:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:57:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:57:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:57:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:57:53 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:57:53 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:57:53 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:57:53 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:57:53 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:57:53 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:57:53 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:57:53 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:57:53 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:57:53 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:57:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c6a3c3]
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:57:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@371f52af]
2021-03-12 19:57:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@121e7308]
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:57:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:57:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:57:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:57:53 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:57:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c64bdd8]
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:57:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57b61dce]
2021-03-12 19:57:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f590fc]
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:57:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:57:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:57:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:57:53 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:57:53 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:57:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e3673a7]
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:57:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:57:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:57:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:57:53 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:57:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e3e28e]
2021-03-12 19:57:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4051951b]
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:57:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:57:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:57:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:57:53 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:57:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77a48d5e]
2021-03-12 19:57:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b4f425]
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:57:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:57:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:57:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:57:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:57:53 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:57:53 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:57:53 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:57:53 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:57:53 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:57:53 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:57:53 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:57:53 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:57:53 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@28880293
2021-03-12 19:57:53 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 83f4764c-37e8-41fe-8a5c-ae6fc93762ab (<unnamed>)
2021-03-12 19:57:53 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:57:54 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:57:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:57:54 DEBUG TransactionImpl:81 - begin
2021-03-12 19:57:54 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:57:54 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:57:54 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 17
2021-03-12 19:57:54 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:57:54 DEBUG TransactionImpl:98 - committing
2021-03-12 19:57:54 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 19:57:54 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 19:57:54 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 19:57:54 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 19:57:54 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 19:57:54 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=250.0, dateDetermined=null, expenseId=17, employeeId=1, managerId=2, dateSubmitted=Fri Mar 12 19:57:54 PST 2021, status=Pending}
2021-03-12 19:57:54 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:57:54 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:57:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:57:54 DEBUG TransactionImpl:81 - begin
2021-03-12 19:57:54 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:57:54 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:57:54 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 18
2021-03-12 19:57:54 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:57:54 DEBUG TransactionImpl:98 - committing
2021-03-12 19:57:54 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 19:57:54 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 19:57:54 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 19:57:54 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 19:57:54 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 19:57:54 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=250.0, dateDetermined=null, expenseId=18, employeeId=2, managerId=2, dateSubmitted=Fri Mar 12 19:57:54 PST 2021, status=Pending}
2021-03-12 19:57:54 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:57:54 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:57:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:57:54 DEBUG TransactionImpl:81 - begin
2021-03-12 19:57:54 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:57:54 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:57:54 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 19
2021-03-12 19:57:54 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:57:54 DEBUG TransactionImpl:98 - committing
2021-03-12 19:57:54 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 19:57:54 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 19:57:54 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 19:57:54 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 19:57:54 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 19:57:54 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=450.0, dateDetermined=null, expenseId=19, employeeId=3, managerId=2, dateSubmitted=Fri Mar 12 19:57:54 PST 2021, status=Pending}
2021-03-12 19:57:54 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:57:54 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:57:54 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Expense as generatedAlias0
2021-03-12 19:57:54 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@40f2e11
2021-03-12 19:57:54 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0
2021-03-12 19:57:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:57:54 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Expense'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:57:54 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:57:54 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Expense (generatedAlias0) -> expense0_
2021-03-12 19:57:54 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> expense0_.expense_id
2021-03-12 19:57:54 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:57:54 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} expense0_.expense_id ) ( FromClause{level=1} expense expense0_ ) )
2021-03-12 19:57:54 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Expense): [expense]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:57:54 DEBUG JoinProcessor:304 - Using FROM fragment [expense expense0_]
2021-03-12 19:57:54 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:57:54 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (expense)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'expense0_.expense_id as expense_1_1_' {alias=generatedAlias0, className=dev.lamp.models.Expense, tableAlias=expense0_}
    |  \-[SQL_TOKEN] SqlFragment: 'expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[expense0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'expense expense0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=expense,tableAlias=expense0_,origin=null,columns={,className=dev.lamp.models.Expense}}

2021-03-12 19:57:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:57:54 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0
2021-03-12 19:57:54 DEBUG QueryTranslatorImpl:259 - SQL: select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_
2021-03-12 19:57:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:58:59 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:58:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:58:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:58:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:58:59 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:58:59 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:59:00 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:59:00 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:59:00 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:59:00 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:59:00 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:59:00 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:59:00 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:59:00 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:59:00 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73c2a5b7
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c185207
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6957972a
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@177ffeee
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@177ffeee
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2dc34d24
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2dc34d24
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@3a58c3f3
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3a58c3f3
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13c2d4e1
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2da1661
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@31c8b845
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@31c8b845
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@baf99a9
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@baf99a9
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6c3ba414
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6c3ba414
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4eaa03b9
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4eaa03b9
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7dc90914
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7dc90914
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@23969645
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@23969645
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7596b948
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7596b948
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5952c8bd
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5952c8bd
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56759e58
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56759e58
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6f691a4e
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6f691a4e
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@20eaeadc
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@20eaeadc
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31156d13
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@535b83ee
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3b8335c4
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@2b1f6f0d
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b1f6f0d
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@4190d4a8
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4190d4a8
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6096bc6d
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6096bc6d
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@fc26ffa
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fc26ffa
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50d66e7f
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2310a6ae
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@13850fb5
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@4c2ebcfc
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@1bf7079d
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@3290a021
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3290a021
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@636ebe23
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@69703809
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69703809
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@17f0d5b2
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@17f0d5b2
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@26e7becd
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@44adc839
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@62f1f6ff
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@c3f36b6
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c3f36b6
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c154f
2021-03-12 19:59:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e3b77be
2021-03-12 19:59:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:59:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:59:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:59:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:59:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:59:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:59:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:59:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:59:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:59:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:59:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:59:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:59:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:59:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:59:00 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:59:00 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:59:00 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:59:00 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:59:00 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:59:00 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:59:01 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:59:01 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:59:01 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:59:01 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:59:01 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:59:01 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:59:01 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3ceea9ee
2021-03-12 19:59:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3ceea9ee
2021-03-12 19:59:01 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:59:01 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e27600f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3ac17e09]
2021-03-12 19:59:01 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:59:01 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:59:01 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:59:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:59:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:59:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:59:01 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:59:01 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:59:01 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:59:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:59:01 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:59:01 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:59:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:59:01 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:59:01 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:59:01 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:59:01 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:59:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:59:01 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:59:01 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:59:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:59:01 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:59:01 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:59:01 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:59:01 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:59:01 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:59:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:59:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:59:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:59:01 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:59:01 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:59:01 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:59:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:59:01 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:59:01 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:59:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:59:01 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:59:01 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:59:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:59:01 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:59:01 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:59:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:59:01 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:59:01 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:59:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:59:01 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:59:01 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:59:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:59:01 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:59:01 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:59:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:59:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:59:01 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:59:01 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:59:02 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:59:02 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:59:02 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:59:02 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:59:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:59:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:59:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:59:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:59:02 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:59:02 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:59:02 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:59:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:59:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:59:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:59:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:59:02 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:59:02 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:59:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:59:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:59:02 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:59:02 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:59:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:59:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:59:02 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:59:02 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:59:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:59:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:59:02 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:59:02 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:59:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:59:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:59:02 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:59:02 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:59:02 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:59:02 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:59:02 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:59:02 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:59:02 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:59:02 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:59:02 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:59:02 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:59:02 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:59:02 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:59:02 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:59:02 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:59:02 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:59:02 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:59:02 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:59:02 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:59:02 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:59:02 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:59:02 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:59:02 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:59:02 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:59:02 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:59:02 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:59:02 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:59:02 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:59:02 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:59:02 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:59:02 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:59:02 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:59:02 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:59:02 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:59:02 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:59:02 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:59:02 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:59:02 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:59:02 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:59:02 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:59:02 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:59:02 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:59:02 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:59:02 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:59:02 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:59:02 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:59:02 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:59:02 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:59:02 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:59:02 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:59:02 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:59:02 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:59:02 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:59:02 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:59:02 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:59:02 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:59:02 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:59:02 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=48, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 48', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3cef5bc1, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:59:02 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:59:02 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:59:02 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e27600f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3120ebf1]
2021-03-12 19:59:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:59:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:59:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:59:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:59:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:59:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:59:02 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:59:02 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:59:02 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:59:02 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:59:02 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:59:02 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:59:02 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:59:02 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:59:02 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:59:02 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:59:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c6a3c3]
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:59:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@371f52af]
2021-03-12 19:59:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@121e7308]
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:59:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:59:02 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:59:02 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:59:02 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:59:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c64bdd8]
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:59:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57b61dce]
2021-03-12 19:59:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f590fc]
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:59:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:59:02 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:59:02 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:59:02 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:59:02 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:59:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e3673a7]
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:59:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:59:02 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:59:02 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:59:02 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:59:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e3e28e]
2021-03-12 19:59:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4051951b]
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:59:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:59:02 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:59:02 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:59:02 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:59:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77a48d5e]
2021-03-12 19:59:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b4f425]
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:59:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:59:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:59:02 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:59:02 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:59:02 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:59:02 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:59:02 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:59:02 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:59:02 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:59:02 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:59:02 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:59:02 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:59:02 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@28880293
2021-03-12 19:59:02 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: f746c8a9-0ddb-4b79-95e4-6df7512dc92a (<unnamed>)
2021-03-12 19:59:02 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:59:02 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:59:02 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:59:02 DEBUG TransactionImpl:81 - begin
2021-03-12 19:59:02 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:59:02 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:59:02 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 20
2021-03-12 19:59:02 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:59:02 DEBUG TransactionImpl:98 - committing
2021-03-12 19:59:02 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 19:59:02 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 19:59:03 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 19:59:03 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 19:59:03 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 19:59:03 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=250.0, dateDetermined=null, expenseId=20, employeeId=1, managerId=2, dateSubmitted=Fri Mar 12 19:59:02 PST 2021, status=Pending}
2021-03-12 19:59:03 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:03 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:03 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:59:03 DEBUG TransactionImpl:81 - begin
2021-03-12 19:59:03 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:59:03 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:59:03 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 21
2021-03-12 19:59:03 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:59:03 DEBUG TransactionImpl:98 - committing
2021-03-12 19:59:03 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 19:59:03 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 19:59:03 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 19:59:03 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 19:59:03 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 19:59:03 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=250.0, dateDetermined=null, expenseId=21, employeeId=2, managerId=2, dateSubmitted=Fri Mar 12 19:59:03 PST 2021, status=Pending}
2021-03-12 19:59:03 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:03 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:03 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:59:03 DEBUG TransactionImpl:81 - begin
2021-03-12 19:59:03 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:59:03 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:59:03 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 22
2021-03-12 19:59:03 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:59:03 DEBUG TransactionImpl:98 - committing
2021-03-12 19:59:03 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 19:59:03 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 19:59:03 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 19:59:03 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 19:59:03 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 19:59:03 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=450.0, dateDetermined=null, expenseId=22, employeeId=3, managerId=2, dateSubmitted=Fri Mar 12 19:59:03 PST 2021, status=Pending}
2021-03-12 19:59:03 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:03 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:03 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Expense as generatedAlias0
2021-03-12 19:59:03 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@40f2e11
2021-03-12 19:59:03 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0
2021-03-12 19:59:03 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:59:03 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Expense'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:59:03 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:59:03 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Expense (generatedAlias0) -> expense0_
2021-03-12 19:59:03 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> expense0_.expense_id
2021-03-12 19:59:03 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:59:03 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} expense0_.expense_id ) ( FromClause{level=1} expense expense0_ ) )
2021-03-12 19:59:03 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Expense): [expense]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:59:03 DEBUG JoinProcessor:304 - Using FROM fragment [expense expense0_]
2021-03-12 19:59:03 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:59:03 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (expense)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'expense0_.expense_id as expense_1_1_' {alias=generatedAlias0, className=dev.lamp.models.Expense, tableAlias=expense0_}
    |  \-[SQL_TOKEN] SqlFragment: 'expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[expense0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'expense expense0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=expense,tableAlias=expense0_,origin=null,columns={,className=dev.lamp.models.Expense}}

2021-03-12 19:59:03 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:59:03 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0
2021-03-12 19:59:03 DEBUG QueryTranslatorImpl:259 - SQL: select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_
2021-03-12 19:59:03 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:59:03 DEBUG SQL:144 - select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#2]
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 1
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#3]
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 2
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#4]
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 3
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#7]
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 4
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#8]
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 5
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#9]
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 6
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#12]
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 7
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#13]
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 8
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#14]
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 9
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#15]
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 10
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#16]
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 11
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#17]
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 12
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#18]
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 13
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#19]
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 14
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#20]
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 15
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#21]
2021-03-12 19:59:03 DEBUG Loader:384 - Result set row: 16
2021-03-12 19:59:03 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#22]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#2]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#2]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#3]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#3]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#4]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#4]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#7]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#7]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#8]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#8]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#9]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#9]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#12]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#12]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#13]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#13]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#14]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#14]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#15]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#15]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#16]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 3
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#16]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#17]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#17]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#18]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#18]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#19]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 3
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#19]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#20]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#20]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#21]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#21]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#22]
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 3
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:03 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#22]
2021-03-12 19:59:03 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:39 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 19:59:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 19:59:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 19:59:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 19:59:39 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 19:59:39 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 19:59:39 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 19:59:39 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 19:59:39 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 19:59:40 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 19:59:40 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 19:59:40 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 19:59:40 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 19:59:40 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 19:59:40 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73c2a5b7
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c185207
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6957972a
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4c494645
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@177ffeee
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@177ffeee
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2dc34d24
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2dc34d24
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@3a58c3f3
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3a58c3f3
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13c2d4e1
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2da1661
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@31c8b845
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@31c8b845
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@baf99a9
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@baf99a9
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6c3ba414
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6c3ba414
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4eaa03b9
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4eaa03b9
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7dc90914
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7dc90914
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@23969645
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@23969645
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7596b948
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7596b948
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5952c8bd
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5952c8bd
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56759e58
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56759e58
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6f691a4e
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6f691a4e
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@20eaeadc
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@20eaeadc
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@716bba20
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31156d13
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@535b83ee
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3b8335c4
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@2b1f6f0d
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b1f6f0d
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@4190d4a8
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4190d4a8
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6096bc6d
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6096bc6d
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@fc26ffa
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fc26ffa
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50d66e7f
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2310a6ae
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@13850fb5
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@12520610
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@4c2ebcfc
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@1bf7079d
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@3290a021
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3290a021
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@636ebe23
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@69703809
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69703809
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@17f0d5b2
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@17f0d5b2
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@26e7becd
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@44adc839
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@62f1f6ff
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@c3f36b6
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c3f36b6
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c154f
2021-03-12 19:59:40 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e3b77be
2021-03-12 19:59:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 19:59:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 19:59:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:59:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 19:59:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 19:59:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 19:59:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 19:59:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:59:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 19:59:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 19:59:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 19:59:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 19:59:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 19:59:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 19:59:40 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 19:59:40 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 19:59:40 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 19:59:40 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 19:59:40 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 19:59:40 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 19:59:41 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 19:59:41 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 19:59:41 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 19:59:41 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 19:59:41 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 19:59:41 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 19:59:41 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3ceea9ee
2021-03-12 19:59:41 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3ceea9ee
2021-03-12 19:59:41 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 19:59:41 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e27600f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3ac17e09]
2021-03-12 19:59:41 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:59:41 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 19:59:41 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:59:41 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:59:41 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 19:59:41 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:59:41 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:59:41 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 19:59:41 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:59:41 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 19:59:41 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property status
2021-03-12 19:59:41 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 19:59:41 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 19:59:41 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:59:41 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 19:59:41 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 19:59:41 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 19:59:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 19:59:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 19:59:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 19:59:41 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 19:59:41 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 19:59:41 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 19:59:41 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 19:59:41 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 19:59:41 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 19:59:41 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:59:41 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 19:59:41 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 19:59:41 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 19:59:41 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:59:41 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:59:41 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 19:59:41 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 19:59:41 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 19:59:41 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 19:59:41 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 19:59:41 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 19:59:41 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 19:59:41 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 19:59:41 DEBUG Settings:72 - Statistics: disabled
2021-03-12 19:59:41 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 19:59:41 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 19:59:41 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 19:59:41 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 19:59:41 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 19:59:41 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 19:59:41 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 19:59:41 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 19:59:41 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 19:59:41 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 19:59:41 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 19:59:41 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 19:59:41 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 19:59:41 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 19:59:41 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 19:59:41 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 19:59:41 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 19:59:41 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 19:59:41 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 19:59:41 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 19:59:41 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 19:59:41 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 19:59:41 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 19:59:41 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 19:59:41 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 19:59:41 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 19:59:41 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 19:59:41 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 19:59:41 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 19:59:41 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 19:59:41 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 19:59:41 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 19:59:41 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 19:59:41 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 19:59:41 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 19:59:41 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=49, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 49', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3cef5bc1, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 19:59:41 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 19:59:41 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 19:59:41 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e27600f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3120ebf1]
2021-03-12 19:59:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 19:59:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 19:59:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 19:59:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 19:59:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 19:59:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 19:59:42 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 19:59:42 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 19:59:42 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:59:42 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 19:59:42 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 19:59:42 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 19:59:42 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 19:59:42 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 19:59:42 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 19:59:42 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 19:59:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c6a3c3]
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:59:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@371f52af]
2021-03-12 19:59:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@121e7308]
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:59:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:59:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:59:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 19:59:42 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 19:59:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c64bdd8]
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 19:59:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57b61dce]
2021-03-12 19:59:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f590fc]
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 19:59:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:59:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:59:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 19:59:42 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 19:59:42 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:59:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e3673a7]
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:59:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:59:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:59:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 19:59:42 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 19:59:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e3e28e]
2021-03-12 19:59:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4051951b]
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:59:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:59:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:59:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:59:42 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 19:59:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77a48d5e]
2021-03-12 19:59:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b4f425]
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 19:59:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 19:59:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 19:59:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 19:59:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 19:59:42 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 19:59:42 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 19:59:42 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 19:59:42 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 19:59:42 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:59:42 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 19:59:42 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 19:59:42 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 19:59:42 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@28880293
2021-03-12 19:59:42 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: d6c90566-50f6-4e08-ba69-c97e7ebecabb (<unnamed>)
2021-03-12 19:59:42 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 19:59:42 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 19:59:42 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:59:42 DEBUG TransactionImpl:81 - begin
2021-03-12 19:59:42 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:59:42 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:59:42 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 23
2021-03-12 19:59:42 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:59:42 DEBUG TransactionImpl:98 - committing
2021-03-12 19:59:42 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 19:59:42 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 19:59:42 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 19:59:42 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 19:59:42 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 19:59:42 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=250.0, dateDetermined=null, expenseId=23, employeeId=1, managerId=2, dateSubmitted=Fri Mar 12 19:59:42 PST 2021, status=Pending}
2021-03-12 19:59:42 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:42 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:42 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Expense as generatedAlias0 where generatedAlias0.expenseId=1
2021-03-12 19:59:42 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@cde382c
2021-03-12 19:59:42 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0 where generatedAlias0.expenseId=1
2021-03-12 19:59:42 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:59:42 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Expense'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'expenseId'
          \-[NUM_INT] Node: '1'

2021-03-12 19:59:42 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:59:42 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Expense (generatedAlias0) -> expense0_
2021-03-12 19:59:42 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> expense0_.expense_id
2021-03-12 19:59:42 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> expense0_.expense_id
2021-03-12 19:59:42 DEBUG DotNode:696 - getDataType() : expenseId -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:59:42 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.expenseId -> expense0_.expense_id
2021-03-12 19:59:42 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:59:42 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} expense0_.expense_id ) ( FromClause{level=1} expense expense0_ ) ( where ( = ( expense0_.expense_id expense0_.expense_id expenseId ) 1 ) ) )
2021-03-12 19:59:42 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Expense): [expense]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
          | path: generatedAlias0.expenseId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: expenseId
          \-LiteralNode

2021-03-12 19:59:42 DEBUG JoinProcessor:304 - Using FROM fragment [expense expense0_]
2021-03-12 19:59:42 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:59:42 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (expense)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'expense0_.expense_id as expense_1_1_' {alias=generatedAlias0, className=dev.lamp.models.Expense, tableAlias=expense0_}
    |  \-[SQL_TOKEN] SqlFragment: 'expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[expense0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'expense expense0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=expense,tableAlias=expense0_,origin=null,columns={,className=dev.lamp.models.Expense}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'expense0_.expense_id' {propertyName=expenseId,dereferenceType=PRIMITIVE,getPropertyPath=expenseId,path=generatedAlias0.expenseId,tableAlias=expense0_,className=dev.lamp.models.Expense,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'expense0_.expense_id' {alias=generatedAlias0, className=dev.lamp.models.Expense, tableAlias=expense0_}
          |  \-[IDENT] IdentNode: 'expenseId' {originalText=expenseId}
          \-[NUM_INT] LiteralNode: '1'

2021-03-12 19:59:42 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:59:43 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0 where generatedAlias0.expenseId=1
2021-03-12 19:59:43 DEBUG QueryTranslatorImpl:259 - SQL: select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_ where expense0_.expense_id=1
2021-03-12 19:59:43 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:59:43 DEBUG SQL:144 - select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_ where expense0_.expense_id=1
2021-03-12 19:59:43 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:43 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:59:43 DEBUG TransactionImpl:81 - begin
2021-03-12 19:59:43 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:59:43 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:59:43 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 24
2021-03-12 19:59:43 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:59:43 DEBUG TransactionImpl:98 - committing
2021-03-12 19:59:43 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 19:59:43 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 19:59:43 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 19:59:43 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 19:59:43 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 19:59:43 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=250.0, dateDetermined=null, expenseId=24, employeeId=2, managerId=2, dateSubmitted=Fri Mar 12 19:59:43 PST 2021, status=Pending}
2021-03-12 19:59:43 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:43 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:43 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:59:43 DEBUG TransactionImpl:81 - begin
2021-03-12 19:59:43 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 19:59:43 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 19:59:43 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 25
2021-03-12 19:59:43 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 19:59:43 DEBUG TransactionImpl:98 - committing
2021-03-12 19:59:43 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 19:59:43 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 19:59:43 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 19:59:43 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 19:59:43 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 19:59:43 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=450.0, dateDetermined=null, expenseId=25, employeeId=3, managerId=2, dateSubmitted=Fri Mar 12 19:59:43 PST 2021, status=Pending}
2021-03-12 19:59:43 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:43 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:43 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Expense as generatedAlias0
2021-03-12 19:59:43 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0
2021-03-12 19:59:43 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:59:43 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Expense'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 19:59:43 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:59:43 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Expense (generatedAlias0) -> expense0_
2021-03-12 19:59:43 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> expense0_.expense_id
2021-03-12 19:59:43 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:59:43 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} expense0_.expense_id ) ( FromClause{level=1} expense expense0_ ) )
2021-03-12 19:59:43 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Expense): [expense]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 19:59:43 DEBUG JoinProcessor:304 - Using FROM fragment [expense expense0_]
2021-03-12 19:59:43 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:59:43 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (expense)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'expense0_.expense_id as expense_1_1_' {alias=generatedAlias0, className=dev.lamp.models.Expense, tableAlias=expense0_}
    |  \-[SQL_TOKEN] SqlFragment: 'expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[expense0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'expense expense0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=expense,tableAlias=expense0_,origin=null,columns={,className=dev.lamp.models.Expense}}

2021-03-12 19:59:43 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:59:43 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0
2021-03-12 19:59:43 DEBUG QueryTranslatorImpl:259 - SQL: select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_
2021-03-12 19:59:43 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:59:43 DEBUG SQL:144 - select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#2]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 1
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#3]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 2
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#4]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 3
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#7]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 4
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#8]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 5
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#9]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 6
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#12]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 7
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#13]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 8
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#14]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 9
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#15]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 10
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#16]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 11
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#17]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 12
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#18]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 13
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#19]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 14
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#20]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 15
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#21]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 16
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#22]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 17
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#23]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 18
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#24]
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 19
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#25]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#2]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#2]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#3]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#3]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#4]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#4]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#7]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#7]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#8]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#8]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#9]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#9]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#12]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#12]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#13]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#13]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#14]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#14]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#15]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#15]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#16]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 3
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#16]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#17]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#17]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#18]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#18]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#19]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 3
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#19]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#20]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#20]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#21]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#21]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#22]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 3
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#22]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#23]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#23]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#24]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#24]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#25]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 3
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#25]
2021-03-12 19:59:43 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:43 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Expense as generatedAlias0 where generatedAlias0.expenseId=23
2021-03-12 19:59:43 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0 where generatedAlias0.expenseId=23
2021-03-12 19:59:43 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:59:43 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Expense'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'expenseId'
          \-[NUM_INT] Node: '23'

2021-03-12 19:59:43 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 19:59:43 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Expense (generatedAlias0) -> expense0_
2021-03-12 19:59:43 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> expense0_.expense_id
2021-03-12 19:59:43 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> expense0_.expense_id
2021-03-12 19:59:43 DEBUG DotNode:696 - getDataType() : expenseId -> org.hibernate.type.IntegerType@1f240574
2021-03-12 19:59:43 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.expenseId -> expense0_.expense_id
2021-03-12 19:59:43 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 19:59:43 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} expense0_.expense_id ) ( FromClause{level=1} expense expense0_ ) ( where ( = ( expense0_.expense_id expense0_.expense_id expenseId ) 23 ) ) )
2021-03-12 19:59:43 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Expense): [expense]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
          | path: generatedAlias0.expenseId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: expenseId
          \-LiteralNode

2021-03-12 19:59:43 DEBUG JoinProcessor:304 - Using FROM fragment [expense expense0_]
2021-03-12 19:59:43 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 19:59:43 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (expense)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'expense0_.expense_id as expense_1_1_' {alias=generatedAlias0, className=dev.lamp.models.Expense, tableAlias=expense0_}
    |  \-[SQL_TOKEN] SqlFragment: 'expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[expense0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'expense expense0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=expense,tableAlias=expense0_,origin=null,columns={,className=dev.lamp.models.Expense}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'expense0_.expense_id' {propertyName=expenseId,dereferenceType=PRIMITIVE,getPropertyPath=expenseId,path=generatedAlias0.expenseId,tableAlias=expense0_,className=dev.lamp.models.Expense,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'expense0_.expense_id' {alias=generatedAlias0, className=dev.lamp.models.Expense, tableAlias=expense0_}
          |  \-[IDENT] IdentNode: 'expenseId' {originalText=expenseId}
          \-[NUM_INT] LiteralNode: '23'

2021-03-12 19:59:43 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:59:43 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0 where generatedAlias0.expenseId=23
2021-03-12 19:59:43 DEBUG QueryTranslatorImpl:259 - SQL: select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_ where expense0_.expense_id=23
2021-03-12 19:59:43 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 19:59:43 DEBUG SQL:144 - select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_ where expense0_.expense_id=23
2021-03-12 19:59:43 DEBUG Loader:384 - Result set row: 0
2021-03-12 19:59:43 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#23]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#23]
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 19:59:43 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#23]
2021-03-12 19:59:43 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:43 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 19:59:43 DEBUG TransactionImpl:81 - begin
2021-03-12 19:59:43 DEBUG TransactionImpl:98 - committing
2021-03-12 19:59:43 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 19:59:43 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 19:59:43 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2021-03-12 19:59:43 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 19:59:43 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 19:59:43 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=333.0, dateDetermined=null, expenseId=23, employeeId=1, managerId=2, dateSubmitted=2021-03-12 00:00:00.0, status=Pending}
2021-03-12 19:59:43 DEBUG SQL:144 - update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 19:59:43 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 19:59:43 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 20:00:28 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-03-12 20:00:28 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-03-12 20:00:28 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-03-12 20:00:28 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-03-12 20:00:28 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.28.Final
2021-03-12 20:00:28 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-03-12 20:00:28 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-03-12 20:00:28 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-03-12 20:00:28 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-03-12 20:00:29 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-03-12 20:00:29 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-03-12 20:00:29 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-03-12 20:00:29 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-03-12 20:00:29 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-03-12 20:00:29 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b510929
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73c2a5b7
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c185207
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6957972a
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2d25a1de
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a914dea
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4c494645
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4c494645
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4c494645
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1f240574
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1f240574
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f240574
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f4e450d
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d11cfd6
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a476ea6
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@177ffeee
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@177ffeee
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2dc34d24
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2dc34d24
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@3a58c3f3
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3a58c3f3
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13c2d4e1
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2da1661
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@31c8b845
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@31c8b845
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@baf99a9
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@baf99a9
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6c3ba414
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6c3ba414
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4eaa03b9
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4eaa03b9
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7dc90914
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7dc90914
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@23969645
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@23969645
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7596b948
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7596b948
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5952c8bd
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5952c8bd
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56759e58
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56759e58
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@6f691a4e
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6f691a4e
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@20eaeadc
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@20eaeadc
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@716bba20
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@716bba20
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@716bba20
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31156d13
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7f8fb2a6
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@535b83ee
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3b8335c4
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@2b1f6f0d
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b1f6f0d
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@4190d4a8
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4190d4a8
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6096bc6d
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6096bc6d
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@fc26ffa
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fc26ffa
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50d66e7f
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5b0e3d9f
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f7be17a
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2310a6ae
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@13850fb5
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@12520610
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@12520610
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@12520610
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@79dd0677
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@4c2ebcfc
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@1bf7079d
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@3290a021
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3290a021
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@636ebe23
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@69703809
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69703809
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@17f0d5b2
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@17f0d5b2
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@26e7becd
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@44adc839
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@62f1f6ff
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@c3f36b6
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c3f36b6
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@67f8ee1e
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18fe2c20
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@f2c8604
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2285939f
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ad01cf
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6bdba296
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c154f
2021-03-12 20:00:29 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e3b77be
2021-03-12 20:00:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-03-12 20:00:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-03-12 20:00:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 20:00:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-03-12 20:00:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-03-12 20:00:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-03-12 20:00:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-03-12 20:00:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 20:00:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-03-12 20:00:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-03-12 20:00:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-03-12 20:00:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-03-12 20:00:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-03-12 20:00:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-03-12 20:00:29 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-03-12 20:00:29 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI]
2021-03-12 20:00:29 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, user=expensedb}
2021-03-12 20:00:29 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-03-12 20:00:29 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-03-12 20:00:29 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 20 (min=1)
2021-03-12 20:00:30 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-03-12 20:00:30 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-03-12 20:00:30 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-03-12 20:00:30 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-03-12 20:00:30 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-03-12 20:00:30 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-03-12 20:00:30 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3ceea9ee
2021-03-12 20:00:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3ceea9ee
2021-03-12 20:00:30 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1e29ecd6
2021-03-12 20:00:30 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e27600f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3ac17e09]
2021-03-12 20:00:30 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Employee
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 20:00:30 DEBUG EntityBinder:430 - Import with entity name Employee
2021-03-12 20:00:30 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Employee on table employee
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 20:00:30 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeId]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 20:00:30 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeId, identity, , ...)
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_password, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeePassword with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeePassword]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for employeePassword
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property employeePassword
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=employee_username, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeUsername with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:employeeUsername]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeUsername
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property employeeUsername
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='employeeId'}
2021-03-12 20:00:30 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Employee.expenseList
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:fname]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Employee:lname]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 20:00:30 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Expense
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 20:00:30 DEBUG EntityBinder:430 - Import with entity name Expense
2021-03-12 20:00:30 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Expense on table expense
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=expense_id, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 20:00:30 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expenseId with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:expenseId]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for expenseId
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property expenseId
2021-03-12 20:00:30 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(expense_id)]), expenseId, identity, , ...)
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:amount]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for amount
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property amount
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_determined, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateDetermined with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateDetermined]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for dateDetermined
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property dateDetermined
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=date_submitted, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property dateSubmitted with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:dateSubmitted]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for dateSubmitted
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property dateSubmitted
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property employeeId with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:employeeId]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for employeeId
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property employeeId
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:managerId]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=reason, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reason with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:reason]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for reason
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property reason
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(expense), mappingColumn=status, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Expense:status]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for status
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property status
2021-03-12 20:00:30 DEBUG AnnotationBinder:560 - Binding entity from annotated class: dev.lamp.models.Manager
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-03-12 20:00:30 DEBUG EntityBinder:430 - Import with entity name Manager
2021-03-12 20:00:30 DEBUG EntityBinder:873 - Bind entity dev.lamp.models.Manager on table manager
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_id, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 20:00:30 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerId with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerId]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for managerId
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property managerId
2021-03-12 20:00:30 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(manager_id)]), managerId, identity, , ...)
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=expenseList_KEY, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='expenseList_KEY', referencedColumn='null', mappedBy='null'}
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='managerId'}
2021-03-12 20:00:30 DEBUG CollectionBinder:449 - Collection role: dev.lamp.models.Manager.expenseList
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property expenseList
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=fname, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property fname with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:fname]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for fname
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property fname
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=lname, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lname with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:lname]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for lname
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property lname
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_password, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerPassword with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerPassword]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for managerPassword
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property managerPassword
2021-03-12 20:00:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(manager), mappingColumn=manager_username, insertable=true, updatable=true, unique=false}
2021-03-12 20:00:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property managerUsername with lazy=false
2021-03-12 20:00:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.lamp.models.Manager:managerUsername]
2021-03-12 20:00:30 DEBUG SimpleValueBinder:410 - building SimpleValue for managerUsername
2021-03-12 20:00:30 DEBUG PropertyBinder:266 - Building property managerUsername
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeePassword
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeUsername
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expenseId
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for amount
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateDetermined
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for dateSubmitted
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for employeeId
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for reason
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for status
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerId
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for fname
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lname
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerPassword
2021-03-12 20:00:30 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for managerUsername
2021-03-12 20:00:30 DEBUG PrimaryKey:35 - Forcing column [employee_id] to be non-null as it is part of the primary key for table [employee]
2021-03-12 20:00:30 DEBUG PrimaryKey:35 - Forcing column [expense_id] to be non-null as it is part of the primary key for table [expense]
2021-03-12 20:00:30 DEBUG PrimaryKey:35 - Forcing column [manager_id] to be non-null as it is part of the primary key for table [manager]
2021-03-12 20:00:30 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Employee.expenseList
2021-03-12 20:00:30 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Employee.expenseList through a foreign key
2021-03-12 20:00:30 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Employee.expenseList -> expense
2021-03-12 20:00:30 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.employeeId
2021-03-12 20:00:30 DEBUG CollectionSecondPass:67 - Mapped collection key: employee_id, one-to-many: dev.lamp.models.Expense
2021-03-12 20:00:30 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.lamp.models.Manager.expenseList
2021-03-12 20:00:30 DEBUG CollectionBinder:903 - Binding a OneToMany: dev.lamp.models.Manager.expenseList through a foreign key
2021-03-12 20:00:30 DEBUG CollectionBinder:941 - Mapping collection: dev.lamp.models.Manager.expenseList -> expense
2021-03-12 20:00:30 DEBUG TableBinder:554 - Retrieving property dev.lamp.models.Expense.managerId
2021-03-12 20:00:30 DEBUG CollectionSecondPass:67 - Mapped collection key: manager_id, one-to-many: dev.lamp.models.Expense
2021-03-12 20:00:30 DEBUG SessionFactoryImpl:204 - Building session factory
2021-03-12 20:00:30 DEBUG Settings:68 - SessionFactory name : null
2021-03-12 20:00:30 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-03-12 20:00:30 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-03-12 20:00:30 DEBUG Settings:72 - Statistics: disabled
2021-03-12 20:00:30 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-03-12 20:00:30 DEBUG Settings:75 - Default entity-mode: pojo
2021-03-12 20:00:30 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-03-12 20:00:30 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-03-12 20:00:30 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-03-12 20:00:30 DEBUG Settings:80 - Default batch fetch size: -1
2021-03-12 20:00:30 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-03-12 20:00:30 DEBUG Settings:82 - Default null ordering: NONE
2021-03-12 20:00:30 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-03-12 20:00:30 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-03-12 20:00:30 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-03-12 20:00:30 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-03-12 20:00:30 DEBUG Settings:90 - Query language substitutions: {}
2021-03-12 20:00:30 DEBUG Settings:91 - Named query checking : enabled
2021-03-12 20:00:30 DEBUG Settings:93 - Second-level cache: disabled
2021-03-12 20:00:30 DEBUG Settings:94 - Second-level query cache: disabled
2021-03-12 20:00:30 DEBUG Settings:95 - Second-level query cache factory: null
2021-03-12 20:00:30 DEBUG Settings:96 - Second-level cache region prefix: null
2021-03-12 20:00:30 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-03-12 20:00:30 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-03-12 20:00:30 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-03-12 20:00:30 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-03-12 20:00:30 DEBUG Settings:102 - JDBC batch size: 15
2021-03-12 20:00:30 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-03-12 20:00:30 DEBUG Settings:104 - Scrollable result sets: enabled
2021-03-12 20:00:30 DEBUG Settings:105 - Wrap result sets: disabled
2021-03-12 20:00:30 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-03-12 20:00:30 DEBUG Settings:107 - JDBC result set fetch size: null
2021-03-12 20:00:30 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-03-12 20:00:30 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-03-12 20:00:30 DEBUG Settings:111 - JPA compliance - query : disabled
2021-03-12 20:00:30 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-03-12 20:00:30 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-03-12 20:00:30 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-03-12 20:00:31 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-03-12 20:00:31 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, org.gradle.test.worker=50, java.class.path=C:\\Users\\Mark\\.gradle\\caches\\6.7\\workerMain\\gradle-worker.jar;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\test;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\classes\\java\\main;C:\\Users\\Mark\\Desktop\\Project01\\ExpenseReimbursementAPI\\build\\resources\\main;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\io.javalin\\javalin\\3.13.3\\835b785cded58f185aa814d360ff2db09d750010\\javalin-3.13.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-simple\\1.7.30\\e606eac955f55ecf1d8edcccba04eb8ac98088dd\\slf4j-simple-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.google.code.gson\\gson\\2.8.6\\9180733b7df8542621dc12e21e87557e8c99b8cb\\gson-2.8.6.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.postgresql\\postgresql\\42.2.18\\a0a9c1d43c7727eeaf1b729477891185d3c71751\\postgresql-42.2.18.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\log4j\\log4j\\1.2.17\\5af35056b4d257e4b64b9e8069c0746e8b08629f\\log4j-1.2.17.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.auth0\\java-jwt\\3.12.1\\beba805806ea8d408e51a96961dc2d61f7498ad8\\java-jwt-3.12.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate\\hibernate-core\\5.4.28.Final\\c096dbb27f83655ec252165340b532733c58e8fb\\hibernate-core-5.4.28.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-junit-jupiter\\3.7.7\\bfc1de0638562399c49216d9035df32d58335e59\\mockito-junit-jupiter-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-engine\\5.7.0\\d9044d6b45e2232ddd53fa56c15333e43d1749fd\\junit-jupiter-engine-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-engine\\1.7.0\\eadb73c5074a4ac71061defd00fc176152a4d12c\\junit-platform-engine-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.platform\\junit-platform-commons\\1.7.0\\84e309fbf21d857aac079a3c1fffd84284e1114d\\junit-platform-commons-1.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.junit.jupiter\\junit-jupiter-api\\5.7.0\\b25f3815c4c1860a73041e733a14a0379d00c4d5\\junit-jupiter-api-5.7.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.mockito\\mockito-core\\3.7.7\\5d43943be9b57c8ff47d2b9640ea0a7fc7211cf2\\mockito-core-3.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.slf4j\\slf4j-api\\1.7.30\\b5a4b6d16ab13e34a88fae84c35cd5d68cac922c\\slf4j-api-1.7.30.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-webapp\\9.4.35.v20201120\\5ef2f6ab94093558377199d64fb5e31fadd3b036\\jetty-webapp-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-server\\9.4.35.v20201120\\acbe339e01e2067ddf6cf9e61399e1d6b04ccb3c\\websocket-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-servlet\\9.4.35.v20201120\\3e61bcb471e1bfc545ce866cbbe33c3aedeec9b1\\jetty-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-security\\9.4.35.v20201120\\80dc2f422789c78315de76d289b7a5b36c3232d5\\jetty-security-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-server\\9.4.35.v20201120\\513502352fd689d4730b2935421b990ada8cc818\\jetty-server-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk8\\1.3.71\\4defc79915cf4f78b49bbc4a8f1e80e87767a5b\\kotlin-stdlib-jdk8-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.checkerframework\\checker-qual\\3.5.0\\2f50520c8abea66fbd8d26e481d3aef5c673b510\\checker-qual-3.5.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-databind\\2.11.0\\8f5aaf3878b0647ff3a16610af53b1a5c05d9f15\\jackson-databind-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.14\\3cb1181b2141a7e752f5bdc998b7ef1849f726cf\\commons-codec-1.14.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.hibernate.common\\hibernate-commons-annotations\\5.1.2.Final\\e59ffdbc6ad09eeb33507b39ffcf287679a498c8\\hibernate-commons-annotations-5.1.2.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.logging\\jboss-logging\\3.4.1.Final\\40fd4d696c55793e996d1ff3c475833f836c2498\\jboss-logging-3.4.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.persistence\\javax.persistence-api\\2.2\\25665ac8c0b62f50e6488173233239120fc52c96\\javax.persistence-api-2.2.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.javassist\\javassist\\3.27.0-GA\\f63e6aa899e15eca8fdaa402a79af4c417252213\\javassist-3.27.0-GA.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy\\1.10.19\\7a8cf46cd99db76f02b335d53aad222d42bc412d\\byte-buddy-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\antlr\\antlr\\2.7.7\\83cd2cd674a217ade95a4bb83a8a14f351f48bd0\\antlr-2.7.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss.spec.javax.transaction\\jboss-transaction-api_1.2_spec\\1.1.1.Final\\a8485cab9484dda36e9a8c319e76b5cc18797b58\\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jboss\\jandex\\2.2.3.Final\\d3865101f0666b63586683bd811d754517f331ab\\jandex-2.2.3.Final.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml\\classmate\\1.5.1\\3fe0bed568c62df5e89f4f174c101eab25345b6c\\classmate-1.5.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\jaxb-runtime\\2.3.1\\dd6dda9da676a54c5b36ca2806ff95ee017d8738\\jaxb-runtime-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.xml.bind\\jaxb-api\\2.3.1\\8531ad5ac454cc2deb9d4d32c40c4d7451939b5d\\jaxb-api-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.activation\\javax.activation-api\\1.2.0\\85262acf3ca9816f9537ca47d5adeabaead7cb16\\javax.activation-api-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.dom4j\\dom4j\\2.1.3\\a75914155a9f5808963170ec20653668a2ffd2fd\\dom4j-2.1.3.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.apiguardian\\apiguardian-api\\1.1.0\\fc9dff4bb36d627bdc553de77e1f17efd790876c\\apiguardian-api-1.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.opentest4j\\opentest4j\\1.2.0\\28c11eb91f9b6d8e200631d46e20a7f407f2a046\\opentest4j-1.2.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\net.bytebuddy\\byte-buddy-agent\\1.10.19\\6453928a03a95dc23d7ef120cfd58f4539c64b53\\byte-buddy-agent-1.10.19.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.objenesis\\objenesis\\3.1\\48f12deaae83a8dfc3775d830c9fd60ea59bbbca\\objenesis-3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-servlet\\9.4.35.v20201120\\d2d7d8c25a8d2aa2bbdbde127c4547f3229fabdf\\websocket-servlet-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\javax.servlet\\javax.servlet-api\\3.1.0\\3cd63d075497751784b2fa84be59432f4905bf7c\\javax.servlet-api-3.1.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-client\\9.4.35.v20201120\\d2db37ecff246d40c7c9b2c32e2162eab89842ea\\websocket-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-client\\9.4.35.v20201120\\b80f9c8992e2b96141755cd4e945599b4b65c287\\jetty-client-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-http\\9.4.35.v20201120\\45d35131a35a1e76991682174421e8cdf765fb9f\\jetty-http-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-common\\9.4.35.v20201120\\ca8ed6439eec7c32c887707fe99d11db846b7a4a\\websocket-common-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-io\\9.4.35.v20201120\\eb9460700b99b71ecd82a53697f5ff99f69b9e1c\\jetty-io-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-xml\\9.4.35.v20201120\\c5c95f91041b6e0e020ff4027e13d7c39fb1e606\\jetty-xml-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-jdk7\\1.3.71\\9180d3aec3f0b2ea6ef0dcf01b464a6e2219e381\\kotlin-stdlib-jdk7-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib\\1.3.71\\898273189ad22779da6bed88ded39b14cb5fd432\\kotlin-stdlib-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-annotations\\2.11.0\\c626020ae55d19c690d25cb51c1532ba76e5890f\\jackson-annotations-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.11.0\\f84302e14648f9f63c0c73951054aeb2ff0b810a\\jackson-core-2.11.0.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.glassfish.jaxb\\txw2\\2.3.1\\a09d2c48d3285f206fafbffe0e50619284e92126\\txw2-2.3.1.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.istack\\istack-commons-runtime\\3.0.7\\c197c86ceec7318b1284bffb49b54226ca774003\\istack-commons-runtime-3.0.7.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jvnet.staxex\\stax-ex\\1.8\\8cc35f73da321c29973191f2cf143d29d26a1df7\\stax-ex-1.8.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\com.sun.xml.fastinfoset\\FastInfoset\\1.2.15\\bb7b7ec0379982b97c62cd17465cb6d9155f68e8\\FastInfoset-1.2.15.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util-ajax\\9.4.35.v20201120\\ebbb43912c6423bedb3458e44aee28eeb4d66f27\\jetty-util-ajax-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty\\jetty-util\\9.4.35.v20201120\\ef61b83f9715c3b5355b633d9f01d2834f908ece\\jetty-util-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.eclipse.jetty.websocket\\websocket-api\\9.4.35.v20201120\\3a51cac89282c6d523cba9a3e436fbde606a0d8b\\websocket-api-9.4.35.v20201120.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains.kotlin\\kotlin-stdlib-common\\1.3.71\\e71c3fef58e26affeb03d675e91fd8abdd44aa7b\\kotlin-stdlib-common-1.3.71.jar;C:\\Users\\Mark\\.gradle\\caches\\modules-2\\files-2.1\\org.jetbrains\\annotations\\13.0\\919f0dfe192fb4e063e7dacadee7f8bb9a2672a9\\annotations-13.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Los_Angeles, java.vm.specification.version=15, os.name=Windows 10, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Java\jdk-15.0.2\bin, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 50', jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Mark, user.language=en, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2021-01-19, java.home=C:\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=Mark, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://35.227.172.191:5432/ExpenseReimbursementAPI, file.encoding=windows-1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Mark\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\Mark\Desktop\Project01\ExpenseReimbursementAPI, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3cef5bc1, java.library.path=C:\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.6.5\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.6.5\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Skype\Phone\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Haskell Platform\8.6.5\mingw\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts;C:\Program Files (x86)\IncrediBuild;C:\PHP7;C:\Program Files\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Git\cmd;C:\Program Files\Maven\apache-maven-3.6.3\bin;C:\Users\Mark\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Mark\AppData\Local\Programs\Python\Python38\;C:\Users\Mark\AppData\Roaming\cabal\bin;C:\Users\Mark\AppData\Roaming\local\bin;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;C:\Users\Mark\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Mark\.dotnet\tools;C:\Users\Mark\AppData\Roaming\npm;C:\Users\Mark\AppData\Local\GitHubDesktop\bin;C:\Users\Mark\AppData\Local\Programs\MiKTeX 2.9\miktex\bin\x64\;C:\sqlite3;C:\python;C:\ProgramData\Mark\GitHubDesktop\bin;C:\Program Files\nodejs\;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.2\bin;;C:\Gradle\gradle-6.8.2\bin;C:\Java\bin;;C:\Users\Mark\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=59.0}
2021-03-12 20:00:31 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-03-12 20:00:31 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-03-12 20:00:31 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e27600f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3120ebf1]
2021-03-12 20:00:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Employee] is safe
2021-03-12 20:00:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Employee
2021-03-12 20:00:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Manager] is safe
2021-03-12 20:00:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Manager
2021-03-12 20:00:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.lamp.models.Expense] is safe
2021-03-12 20:00:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.lamp.models.Expense
2021-03-12 20:00:31 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Manager.expenseList
2021-03-12 20:00:31 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set manager_id=? where expense_id=?
2021-03-12 20:00:31 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 20:00:31 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set manager_id=null where manager_id=? and expense_id=?
2021-03-12 20:00:31 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set manager_id=null where manager_id=?
2021-03-12 20:00:31 DEBUG AbstractCollectionPersister:692 - Static SQL for collection: dev.lamp.models.Employee.expenseList
2021-03-12 20:00:31 DEBUG AbstractCollectionPersister:694 -  Row insert: update expense set employee_id=? where expense_id=?
2021-03-12 20:00:31 DEBUG AbstractCollectionPersister:697 -  Row update: update expense set  where expense_id=?
2021-03-12 20:00:31 DEBUG AbstractCollectionPersister:700 -  Row delete: update expense set employee_id=null where employee_id=? and expense_id=?
2021-03-12 20:00:31 DEBUG AbstractCollectionPersister:703 -  One-shot delete: update expense set employee_id=null where employee_id=?
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Employee
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:3929 -  Version select: select employee_id from employee where employee_id =?
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select employee_.employee_id, employee_.employee_password as employee2_0_, employee_.employee_username as employee3_0_, employee_.fname as fname4_0_, employee_.lname as lname5_0_ from employee employee_ where employee_.employee_id=?
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into employee (employee_password, employee_username, fname, lname, employee_id) values (?, ?, ?, ?, ?)
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:394 -  Update 0: update employee set employee_password=?, employee_username=?, fname=?, lname=? where employee_id=?
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from employee where employee_id=?
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into employee (employee_password, employee_username, fname, lname) values (?, ?, ?, ?)
2021-03-12 20:00:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c6a3c3]
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeePassword
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeUsername
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 20:00:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@371f52af]
2021-03-12 20:00:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@121e7308]
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 20:00:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 20:00:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 20:00:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Employee)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Employee, querySpaceUid=<gen:0>, path=dev.lamp.models.Employee)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Employee.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Employee.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_0_0_}

2021-03-12 20:00:31 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Employee [NONE]: select employee0_.employee_id as employee1_0_0_, employee0_.employee_password as employee2_0_0_, employee0_.employee_username as employee3_0_0_, employee0_.fname as fname4_0_0_, employee0_.lname as lname5_0_0_ from employee employee0_ where employee0_.employee_id=?
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Manager
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:3929 -  Version select: select manager_id from manager where manager_id =?
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select manager_.manager_id, manager_.fname as fname2_2_, manager_.lname as lname3_2_, manager_.manager_password as manager_4_2_, manager_.manager_username as manager_5_2_ from manager manager_ where manager_.manager_id=?
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into manager (fname, lname, manager_password, manager_username, manager_id) values (?, ?, ?, ?, ?)
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:394 -  Update 0: update manager set fname=?, lname=?, manager_password=?, manager_username=? where manager_id=?
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from manager where manager_id=?
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into manager (fname, lname, manager_password, manager_username) values (?, ?, ?, ?)
2021-03-12 20:00:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c64bdd8]
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expenseList
2021-03-12 20:00:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57b61dce]
2021-03-12 20:00:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f590fc]
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : fname
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lname
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerPassword
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerUsername
2021-03-12 20:00:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 20:00:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 20:00:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Manager)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Manager, querySpaceUid=<gen:0>, path=dev.lamp.models.Manager)
          - CollectionAttributeFetchImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:1>, path=dev.lamp.models.Manager.expenseList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:2>, path=dev.lamp.models.Manager.expenseList.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Manager)
          - SQL table alias mapping - manager0_
          - alias suffix - 0_
          - suffixed key columns - {manager_1_2_0_}

2021-03-12 20:00:31 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Manager [NONE]: select manager0_.manager_id as manager_1_2_0_, manager0_.fname as fname2_2_0_, manager0_.lname as lname3_2_0_, manager0_.manager_password as manager_4_2_0_, manager0_.manager_username as manager_5_2_0_ from manager manager0_ where manager0_.manager_id=?
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:3924 - Static SQL for entity: dev.lamp.models.Expense
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:3929 -  Version select: select expense_id from expense where expense_id =?
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:3932 -  Snapshot select: select expense_.expense_id, expense_.amount as amount2_1_, expense_.date_determined as date_det3_1_, expense_.date_submitted as date_sub4_1_, expense_.employee_id as employee5_1_, expense_.manager_id as manager_6_1_, expense_.reason as reason7_1_, expense_.status as status8_1_ from expense expense_ where expense_.expense_id=?
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status, expense_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:394 -  Update 0: update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from expense where expense_id=?
2021-03-12 20:00:31 DEBUG AbstractEntityPersister:3940 -  Identity insert: insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 20:00:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e3673a7]
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 20:00:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 20:00:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 20:00:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.lamp.models.Expense)
    - Returns
       - EntityReturnImpl(entity=dev.lamp.models.Expense, querySpaceUid=<gen:0>, path=dev.lamp.models.Expense)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.lamp.models.Expense)
          - SQL table alias mapping - expense0_
          - alias suffix - 0_
          - suffixed key columns - {expense_1_1_0_}

2021-03-12 20:00:31 DEBUG EntityLoader:129 - Static select for entity dev.lamp.models.Expense [NONE]: select expense0_.expense_id as expense_1_1_0_, expense0_.amount as amount2_1_0_, expense0_.date_determined as date_det3_1_0_, expense0_.date_submitted as date_sub4_1_0_, expense0_.employee_id as employee5_1_0_, expense0_.manager_id as manager_6_1_0_, expense0_.reason as reason7_1_0_, expense0_.status as status8_1_0_ from expense expense0_ where expense0_.expense_id=?
2021-03-12 20:00:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e3e28e]
2021-03-12 20:00:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4051951b]
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 20:00:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 20:00:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 20:00:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Manager.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Manager.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Manager.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Manager.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Manager.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {manager_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 20:00:31 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Manager.expenseList: select expenselis0_.manager_id as manager_6_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.manager_id=?
2021-03-12 20:00:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77a48d5e]
2021-03-12 20:00:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b4f425]
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateDetermined
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : dateSubmitted
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : employeeId
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : managerId
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reason
2021-03-12 20:00:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2021-03-12 20:00:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-03-12 20:00:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-03-12 20:00:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.lamp.models.Employee.expenseList)
    - Returns
       - CollectionReturnImpl(collection=dev.lamp.models.Employee.expenseList, querySpaceUid=<gen:0>, path=[dev.lamp.models.Employee.expenseList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.lamp.models.Expense, querySpaceUid=<gen:1>, path=[dev.lamp.models.Employee.expenseList].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.lamp.models.Employee.expenseList)
          - SQL table alias mapping - expenselis0_
          - alias suffix - 0_
          - suffixed key columns - {employee5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - expense_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.lamp.models.Expense)
                - SQL table alias mapping - expenselis0_
                - alias suffix - 1_
                - suffixed key columns - {expense_1_1_1_}

2021-03-12 20:00:31 DEBUG CollectionLoader:83 - Static select for collection dev.lamp.models.Employee.expenseList: select expenselis0_.employee_id as employee5_1_0_, expenselis0_.expense_id as expense_1_1_0_, expenselis0_.expense_id as expense_1_1_1_, expenselis0_.amount as amount2_1_1_, expenselis0_.date_determined as date_det3_1_1_, expenselis0_.date_submitted as date_sub4_1_1_, expenselis0_.employee_id as employee5_1_1_, expenselis0_.manager_id as manager_6_1_1_, expenselis0_.reason as reason7_1_1_, expenselis0_.status as status8_1_1_ from expense expenselis0_ where expenselis0_.employee_id=?
2021-03-12 20:00:31 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-03-12 20:00:31 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-03-12 20:00:31 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-03-12 20:00:31 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 20:00:31 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-03-12 20:00:31 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-03-12 20:00:31 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-03-12 20:00:31 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@28880293
2021-03-12 20:00:31 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: d4410864-147f-4372-9af9-ebcb7358cad4 (<unnamed>)
2021-03-12 20:00:31 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-03-12 20:00:31 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-03-12 20:00:31 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 20:00:31 DEBUG TransactionImpl:81 - begin
2021-03-12 20:00:31 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 20:00:31 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 20:00:31 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 26
2021-03-12 20:00:31 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 20:00:31 DEBUG TransactionImpl:98 - committing
2021-03-12 20:00:31 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 20:00:31 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 20:00:31 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 20:00:31 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 20:00:31 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 20:00:31 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=250.0, dateDetermined=null, expenseId=26, employeeId=1, managerId=2, dateSubmitted=Fri Mar 12 20:00:31 PST 2021, status=Pending}
2021-03-12 20:00:31 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 20:00:31 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 20:00:31 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Expense as generatedAlias0 where generatedAlias0.expenseId=2
2021-03-12 20:00:31 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@cde382c
2021-03-12 20:00:32 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0 where generatedAlias0.expenseId=2
2021-03-12 20:00:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 20:00:32 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Expense'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'expenseId'
          \-[NUM_INT] Node: '2'

2021-03-12 20:00:32 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 20:00:32 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Expense (generatedAlias0) -> expense0_
2021-03-12 20:00:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> expense0_.expense_id
2021-03-12 20:00:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> expense0_.expense_id
2021-03-12 20:00:32 DEBUG DotNode:696 - getDataType() : expenseId -> org.hibernate.type.IntegerType@1f240574
2021-03-12 20:00:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.expenseId -> expense0_.expense_id
2021-03-12 20:00:32 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 20:00:32 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} expense0_.expense_id ) ( FromClause{level=1} expense expense0_ ) ( where ( = ( expense0_.expense_id expense0_.expense_id expenseId ) 2 ) ) )
2021-03-12 20:00:32 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Expense): [expense]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
          | path: generatedAlias0.expenseId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: expenseId
          \-LiteralNode

2021-03-12 20:00:32 DEBUG JoinProcessor:304 - Using FROM fragment [expense expense0_]
2021-03-12 20:00:32 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 20:00:32 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (expense)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'expense0_.expense_id as expense_1_1_' {alias=generatedAlias0, className=dev.lamp.models.Expense, tableAlias=expense0_}
    |  \-[SQL_TOKEN] SqlFragment: 'expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[expense0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'expense expense0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=expense,tableAlias=expense0_,origin=null,columns={,className=dev.lamp.models.Expense}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'expense0_.expense_id' {propertyName=expenseId,dereferenceType=PRIMITIVE,getPropertyPath=expenseId,path=generatedAlias0.expenseId,tableAlias=expense0_,className=dev.lamp.models.Expense,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'expense0_.expense_id' {alias=generatedAlias0, className=dev.lamp.models.Expense, tableAlias=expense0_}
          |  \-[IDENT] IdentNode: 'expenseId' {originalText=expenseId}
          \-[NUM_INT] LiteralNode: '2'

2021-03-12 20:00:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 20:00:32 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0 where generatedAlias0.expenseId=2
2021-03-12 20:00:32 DEBUG QueryTranslatorImpl:259 - SQL: select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_ where expense0_.expense_id=2
2021-03-12 20:00:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 20:00:32 DEBUG SQL:144 - select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_ where expense0_.expense_id=2
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 0
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#2]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#2]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#2]
2021-03-12 20:00:32 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 20:00:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 20:00:32 DEBUG TransactionImpl:81 - begin
2021-03-12 20:00:32 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 20:00:32 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 20:00:32 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 27
2021-03-12 20:00:32 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 20:00:32 DEBUG TransactionImpl:98 - committing
2021-03-12 20:00:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 20:00:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 20:00:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 20:00:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 20:00:32 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 20:00:32 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=250.0, dateDetermined=null, expenseId=27, employeeId=2, managerId=2, dateSubmitted=Fri Mar 12 20:00:32 PST 2021, status=Pending}
2021-03-12 20:00:32 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 20:00:32 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 20:00:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 20:00:32 DEBUG TransactionImpl:81 - begin
2021-03-12 20:00:32 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-03-12 20:00:32 DEBUG SQL:144 - insert into expense (amount, date_determined, date_submitted, employee_id, manager_id, reason, status) values (?, ?, ?, ?, ?, ?, ?)
2021-03-12 20:00:32 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 28
2021-03-12 20:00:32 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-03-12 20:00:32 DEBUG TransactionImpl:98 - committing
2021-03-12 20:00:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 20:00:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 20:00:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-03-12 20:00:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 20:00:32 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 20:00:32 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=450.0, dateDetermined=null, expenseId=28, employeeId=3, managerId=2, dateSubmitted=Fri Mar 12 20:00:32 PST 2021, status=Pending}
2021-03-12 20:00:32 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 20:00:32 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 20:00:32 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Expense as generatedAlias0
2021-03-12 20:00:32 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0
2021-03-12 20:00:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 20:00:32 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'lamp'
       |     |  |  \-[IDENT] Node: 'models'
       |     |  \-[IDENT] Node: 'Expense'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-03-12 20:00:32 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 20:00:32 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Expense (generatedAlias0) -> expense0_
2021-03-12 20:00:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> expense0_.expense_id
2021-03-12 20:00:32 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 20:00:32 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} expense0_.expense_id ) ( FromClause{level=1} expense expense0_ ) )
2021-03-12 20:00:32 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Expense): [expense]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-03-12 20:00:32 DEBUG JoinProcessor:304 - Using FROM fragment [expense expense0_]
2021-03-12 20:00:32 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 20:00:32 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (expense)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'expense0_.expense_id as expense_1_1_' {alias=generatedAlias0, className=dev.lamp.models.Expense, tableAlias=expense0_}
    |  \-[SQL_TOKEN] SqlFragment: 'expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[expense0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'expense expense0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=expense,tableAlias=expense0_,origin=null,columns={,className=dev.lamp.models.Expense}}

2021-03-12 20:00:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 20:00:32 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0
2021-03-12 20:00:32 DEBUG QueryTranslatorImpl:259 - SQL: select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_
2021-03-12 20:00:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 20:00:32 DEBUG SQL:144 - select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 0
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#2]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 1
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#3]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 2
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#4]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 3
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#7]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 4
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#8]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 5
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#9]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 6
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#12]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 7
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#13]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 8
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#14]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 9
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#15]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 10
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#16]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 11
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#17]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 12
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#18]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 13
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#19]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 14
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#20]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 15
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#21]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 16
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#22]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 17
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#24]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 18
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#25]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 19
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#23]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 20
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#26]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 21
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#27]
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 22
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#28]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#2]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#2]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#3]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#3]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#4]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#4]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#7]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#7]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#8]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#8]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#9]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#9]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#12]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#12]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#13]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#13]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#14]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#14]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#15]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#15]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#16]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 3
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#16]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#17]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#17]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#18]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#18]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#19]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 3
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#19]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#20]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#20]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#21]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#21]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#22]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 3
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#22]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#24]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#24]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#25]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 3
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#25]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#23]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 333.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#23]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#26]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#26]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#27]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#27]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#28]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 450.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 3
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#28]
2021-03-12 20:00:32 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 20:00:32 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Expense as generatedAlias0 where generatedAlias0.expenseId=26
2021-03-12 20:00:32 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0 where generatedAlias0.expenseId=26
2021-03-12 20:00:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 20:00:32 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'lamp'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'Expense'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'expenseId'
          \-[NUM_INT] Node: '26'

2021-03-12 20:00:32 DEBUG HqlSqlBaseWalker:129 - select << begin [level=1, statement=select]
2021-03-12 20:00:32 DEBUG FromElement:153 - FromClause{level=1} : dev.lamp.models.Expense (generatedAlias0) -> expense0_
2021-03-12 20:00:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> expense0_.expense_id
2021-03-12 20:00:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> expense0_.expense_id
2021-03-12 20:00:32 DEBUG DotNode:696 - getDataType() : expenseId -> org.hibernate.type.IntegerType@1f240574
2021-03-12 20:00:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.expenseId -> expense0_.expense_id
2021-03-12 20:00:32 DEBUG HqlSqlBaseWalker:133 - select : finishing up [level=1, statement=select]
2021-03-12 20:00:32 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} expense0_.expense_id ) ( FromClause{level=1} expense expense0_ ) ( where ( = ( expense0_.expense_id expense0_.expense_id expenseId ) 26 ) ) )
2021-03-12 20:00:32 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Expense): [expense]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
          | path: generatedAlias0.expenseId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.lamp.models.Expense)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: expenseId
          \-LiteralNode

2021-03-12 20:00:32 DEBUG JoinProcessor:304 - Using FROM fragment [expense expense0_]
2021-03-12 20:00:32 DEBUG HqlSqlBaseWalker:137 - select >> end [level=1, statement=select]
2021-03-12 20:00:32 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (expense)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'expense0_.expense_id as expense_1_1_' {alias=generatedAlias0, className=dev.lamp.models.Expense, tableAlias=expense0_}
    |  \-[SQL_TOKEN] SqlFragment: 'expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[expense0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'expense expense0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=expense,tableAlias=expense0_,origin=null,columns={,className=dev.lamp.models.Expense}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'expense0_.expense_id' {propertyName=expenseId,dereferenceType=PRIMITIVE,getPropertyPath=expenseId,path=generatedAlias0.expenseId,tableAlias=expense0_,className=dev.lamp.models.Expense,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'expense0_.expense_id' {alias=generatedAlias0, className=dev.lamp.models.Expense, tableAlias=expense0_}
          |  \-[IDENT] IdentNode: 'expenseId' {originalText=expenseId}
          \-[NUM_INT] LiteralNode: '26'

2021-03-12 20:00:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 20:00:32 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from dev.lamp.models.Expense as generatedAlias0 where generatedAlias0.expenseId=26
2021-03-12 20:00:32 DEBUG QueryTranslatorImpl:259 - SQL: select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_ where expense0_.expense_id=26
2021-03-12 20:00:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-03-12 20:00:32 DEBUG SQL:144 - select expense0_.expense_id as expense_1_1_, expense0_.amount as amount2_1_, expense0_.date_determined as date_det3_1_, expense0_.date_submitted as date_sub4_1_, expense0_.employee_id as employee5_1_, expense0_.manager_id as manager_6_1_, expense0_.reason as reason7_1_, expense0_.status as status8_1_ from expense expense0_ where expense0_.expense_id=26
2021-03-12 20:00:32 DEBUG Loader:384 - Result set row: 0
2021-03-12 20:00:32 DEBUG Loader:1593 - Result row: EntityKey[dev.lamp.models.Expense#26]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:198 - Resolving attributes for [dev.lamp.models.Expense#26]
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `amount` : value = 250.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateDetermined` : value = null
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateDetermined`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `dateSubmitted` : value = 2021-03-12 00:00:00.0
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`dateSubmitted`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `employeeId` : value = 1
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`employeeId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `managerId` : value = 2
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`managerId`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `reason` : value = 
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`reason`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:211 - Processing attribute `status` : value = Pending
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:242 - Attribute (`status`)  - enhanced for lazy-loading? - false
2021-03-12 20:00:32 DEBUG TwoPhaseLoad:381 - Done materializing entity [dev.lamp.models.Expense#26]
2021-03-12 20:00:32 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 20:00:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-03-12 20:00:32 DEBUG TransactionImpl:81 - begin
2021-03-12 20:00:32 DEBUG TransactionImpl:98 - committing
2021-03-12 20:00:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2021-03-12 20:00:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-03-12 20:00:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2021-03-12 20:00:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-03-12 20:00:32 DEBUG EntityPrinter:110 - Listing entities:
2021-03-12 20:00:32 DEBUG EntityPrinter:117 - dev.lamp.models.Expense{reason=, amount=333.0, dateDetermined=null, expenseId=26, employeeId=1, managerId=2, dateSubmitted=2021-03-12 00:00:00.0, status=Pending}
2021-03-12 20:00:32 DEBUG SQL:144 - update expense set amount=?, date_determined=?, date_submitted=?, employee_id=?, manager_id=?, reason=?, status=? where expense_id=?
2021-03-12 20:00:32 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
2021-03-12 20:00:32 DEBUG LogicalConnectionManagedImpl:172 - Initiating JDBC connection release from afterTransaction
